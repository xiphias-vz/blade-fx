(window["webpackJsonp_yves_default"] = window["webpackJsonp_yves_default"] || []).push([["vendor"],{

/***/ "./node_modules/@webcomponents/custom-elements/custom-elements.min.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@webcomponents/custom-elements/custom-elements.min.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function(){
/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';var n=window.Document.prototype.createElement,p=window.Document.prototype.createElementNS,aa=window.Document.prototype.importNode,ba=window.Document.prototype.prepend,ca=window.Document.prototype.append,da=window.DocumentFragment.prototype.prepend,ea=window.DocumentFragment.prototype.append,q=window.Node.prototype.cloneNode,r=window.Node.prototype.appendChild,t=window.Node.prototype.insertBefore,u=window.Node.prototype.removeChild,v=window.Node.prototype.replaceChild,x=Object.getOwnPropertyDescriptor(window.Node.prototype,
"textContent"),y=window.Element.prototype.attachShadow,z=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),A=window.Element.prototype.getAttribute,B=window.Element.prototype.setAttribute,C=window.Element.prototype.removeAttribute,D=window.Element.prototype.getAttributeNS,E=window.Element.prototype.setAttributeNS,F=window.Element.prototype.removeAttributeNS,G=window.Element.prototype.insertAdjacentElement,fa=window.Element.prototype.insertAdjacentHTML,ha=window.Element.prototype.prepend,
ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,na=window.HTMLElement,H=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),oa=window.HTMLElement.prototype.insertAdjacentElement,pa=window.HTMLElement.prototype.insertAdjacentHTML;var qa=new Set;"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ").forEach(function(a){return qa.add(a)});function ra(a){var b=qa.has(a);a=/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(a);return!b&&a}var sa=document.contains?document.contains.bind(document):document.documentElement.contains.bind(document.documentElement);
function I(a){var b=a.isConnected;if(void 0!==b)return b;if(sa(a))return!0;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}function J(a){var b=a.children;if(b)return Array.prototype.slice.call(b);b=[];for(a=a.firstChild;a;a=a.nextSibling)a.nodeType===Node.ELEMENT_NODE&&b.push(a);return b}
function K(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}
function L(a,b,c){for(var f=a;f;){if(f.nodeType===Node.ELEMENT_NODE){var d=f;b(d);var e=d.localName;if("link"===e&&"import"===d.getAttribute("rel")){f=d.import;void 0===c&&(c=new Set);if(f instanceof Node&&!c.has(f))for(c.add(f),f=f.firstChild;f;f=f.nextSibling)L(f,b,c);f=K(a,d);continue}else if("template"===e){f=K(a,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)L(d,b,c)}f=f.firstChild?f.firstChild:K(a,f)}}function M(a,b,c){a[b]=c};function ta(a){var b=document;this.c=a;this.a=b;this.b=void 0;N(this.c,this.a);"loading"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}))}function ua(a){a.b&&a.b.disconnect()}ta.prototype.f=function(a){var b=this.a.readyState;"interactive"!==b&&"complete"!==b||ua(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,f=0;f<c.length;f++)N(this.c,c[f])};function va(){var a=this;this.b=this.a=void 0;this.c=new Promise(function(b){a.b=b;a.a&&b(a.a)})}function wa(a){if(a.a)throw Error("Already resolved.");a.a=void 0;a.b&&a.b(void 0)};function O(a){this.f=new Map;this.g=new Map;this.l=new Map;this.i=!1;this.b=a;this.j=new Map;this.c=function(b){return b()};this.a=!1;this.h=[];this.m=a.f?new ta(a):void 0}O.prototype.o=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructor getters must be functions.");xa(this,a);this.f.set(a,b);this.h.push(a);this.a||(this.a=!0,this.c(function(){return ya(c)}))};
O.prototype.define=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");xa(this,a);za(this,a,b);this.h.push(a);this.a||(this.a=!0,this.c(function(){return ya(c)}))};function xa(a,b){if(!ra(b))throw new SyntaxError("The element name '"+b+"' is not valid.");if(P(a,b))throw Error("A custom element with name '"+b+"' has already been defined.");if(a.i)throw Error("A custom element is already being defined.");}
function za(a,b,c){a.i=!0;var f;try{var d=function(m){var w=e[m];if(void 0!==w&&!(w instanceof Function))throw Error("The '"+m+"' callback must be a function.");return w},e=c.prototype;if(!(e instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var g=d("connectedCallback");var h=d("disconnectedCallback");var k=d("adoptedCallback");var l=(f=d("attributeChangedCallback"))&&c.observedAttributes||[]}catch(m){throw m;}finally{a.i=!1}c={localName:b,constructorFunction:c,
connectedCallback:g,disconnectedCallback:h,adoptedCallback:k,attributeChangedCallback:f,observedAttributes:l,constructionStack:[]};a.g.set(b,c);a.l.set(c.constructorFunction,c);return c}O.prototype.upgrade=function(a){N(this.b,a)};
function ya(a){if(!1!==a.a){a.a=!1;for(var b=[],c=a.h,f=new Map,d=0;d<c.length;d++)f.set(c[d],[]);N(a.b,document,{upgrade:function(k){if(void 0===k.__CE_state){var l=k.localName,m=f.get(l);m?m.push(k):a.g.has(l)&&b.push(k)}}});for(d=0;d<b.length;d++)Q(a.b,b[d]);for(d=0;d<c.length;d++){for(var e=c[d],g=f.get(e),h=0;h<g.length;h++)Q(a.b,g[h]);(e=a.j.get(e))&&wa(e)}c.length=0}}O.prototype.get=function(a){if(a=P(this,a))return a.constructorFunction};
O.prototype.whenDefined=function(a){if(!ra(a))return Promise.reject(new SyntaxError("'"+a+"' is not a valid custom element name."));var b=this.j.get(a);if(b)return b.c;b=new va;this.j.set(a,b);var c=this.g.has(a)||this.f.has(a);a=-1===this.h.indexOf(a);c&&a&&wa(b);return b.c};O.prototype.polyfillWrapFlushCallback=function(a){this.m&&ua(this.m);var b=this.c;this.c=function(c){return a(function(){return b(c)})}};
function P(a,b){var c=a.g.get(b);if(c)return c;if(c=a.f.get(b)){a.f.delete(b);try{return za(a,b,c())}catch(f){R(f)}}}window.CustomElementRegistry=O;O.prototype.define=O.prototype.define;O.prototype.upgrade=O.prototype.upgrade;O.prototype.get=O.prototype.get;O.prototype.whenDefined=O.prototype.whenDefined;O.prototype.polyfillDefineLazy=O.prototype.o;O.prototype.polyfillWrapFlushCallback=O.prototype.polyfillWrapFlushCallback;function S(){var a=T&&T.noDocumentConstructionObserver,b=T&&T.shadyDomFastWalk;this.b=[];this.c=[];this.a=!1;this.shadyDomFastWalk=b;this.f=!a}function U(a,b,c,f){var d=window.ShadyDOM;if(a.shadyDomFastWalk&&d&&d.inUse){if(b.nodeType===Node.ELEMENT_NODE&&c(b),b.querySelectorAll)for(a=d.nativeMethods.querySelectorAll.call(b,"*"),b=0;b<a.length;b++)c(a[b])}else L(b,c,f)}function Aa(a,b){a.a=!0;a.b.push(b)}function Ba(a,b){a.a=!0;a.c.push(b)}function V(a,b){a.a&&U(a,b,function(c){return W(a,c)})}
function W(a,b){if(a.a&&!b.__CE_patched){b.__CE_patched=!0;for(var c=0;c<a.b.length;c++)a.b[c](b);for(c=0;c<a.c.length;c++)a.c[c](b)}}function X(a,b){var c=[];U(a,b,function(d){return c.push(d)});for(b=0;b<c.length;b++){var f=c[b];1===f.__CE_state?a.connectedCallback(f):Q(a,f)}}function Y(a,b){var c=[];U(a,b,function(d){return c.push(d)});for(b=0;b<c.length;b++){var f=c[b];1===f.__CE_state&&a.disconnectedCallback(f)}}
function N(a,b,c){c=void 0===c?{}:c;var f=c.s,d=c.upgrade||function(g){return Q(a,g)},e=[];U(a,b,function(g){a.a&&W(a,g);if("link"===g.localName&&"import"===g.getAttribute("rel")){var h=g.import;h instanceof Node&&(h.__CE_isImportDocument=!0,h.__CE_registry=document.__CE_registry);h&&"complete"===h.readyState?h.__CE_documentLoadHandled=!0:g.addEventListener("load",function(){var k=g.import;if(!k.__CE_documentLoadHandled){k.__CE_documentLoadHandled=!0;var l=new Set;f&&(f.forEach(function(m){return l.add(m)}),
l.delete(k));N(a,k,{s:l,upgrade:d})}})}else e.push(g)},f);for(b=0;b<e.length;b++)d(e[b])}
function Q(a,b){try{var c=b.ownerDocument,f=c.__CE_registry;var d=f&&(c.defaultView||c.__CE_isImportDocument)?P(f,b.localName):void 0;if(d&&void 0===b.__CE_state){d.constructionStack.push(b);try{try{if(new d.constructorFunction!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{d.constructionStack.pop()}}catch(k){throw b.__CE_state=2,k;}b.__CE_state=1;b.__CE_definition=d;if(d.attributeChangedCallback&&b.hasAttributes()){var e=d.observedAttributes;
for(d=0;d<e.length;d++){var g=e[d],h=b.getAttribute(g);null!==h&&a.attributeChangedCallback(b,g,null,h,null)}}I(b)&&a.connectedCallback(b)}}catch(k){R(k)}}S.prototype.connectedCallback=function(a){var b=a.__CE_definition;if(b.connectedCallback)try{b.connectedCallback.call(a)}catch(c){R(c)}};S.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;if(b.disconnectedCallback)try{b.disconnectedCallback.call(a)}catch(c){R(c)}};
S.prototype.attributeChangedCallback=function(a,b,c,f,d){var e=a.__CE_definition;if(e.attributeChangedCallback&&-1<e.observedAttributes.indexOf(b))try{e.attributeChangedCallback.call(a,b,c,f,d)}catch(g){R(g)}};
function Ca(a,b,c,f){var d=b.__CE_registry;if(d&&(null===f||"http://www.w3.org/1999/xhtml"===f)&&(d=P(d,c)))try{var e=new d.constructorFunction;if(void 0===e.__CE_state||void 0===e.__CE_definition)throw Error("Failed to construct '"+c+"': The returned value was not constructed with the HTMLElement constructor.");if("http://www.w3.org/1999/xhtml"!==e.namespaceURI)throw Error("Failed to construct '"+c+"': The constructed element's namespace must be the HTML namespace.");if(e.hasAttributes())throw Error("Failed to construct '"+
c+"': The constructed element must not have any attributes.");if(null!==e.firstChild)throw Error("Failed to construct '"+c+"': The constructed element must not have any children.");if(null!==e.parentNode)throw Error("Failed to construct '"+c+"': The constructed element must not have a parent node.");if(e.ownerDocument!==b)throw Error("Failed to construct '"+c+"': The constructed element's owner document is incorrect.");if(e.localName!==c)throw Error("Failed to construct '"+c+"': The constructed element's local name is incorrect.");
return e}catch(g){return R(g),b=null===f?n.call(b,c):p.call(b,f,c),Object.setPrototypeOf(b,HTMLUnknownElement.prototype),b.__CE_state=2,b.__CE_definition=void 0,W(a,b),b}b=null===f?n.call(b,c):p.call(b,f,c);W(a,b);return b}
function R(a){var b=a.message,c=a.sourceURL||a.fileName||"",f=a.line||a.lineNumber||0,d=a.column||a.columnNumber||0,e=void 0;void 0===ErrorEvent.prototype.initErrorEvent?e=new ErrorEvent("error",{cancelable:!0,message:b,filename:c,lineno:f,colno:d,error:a}):(e=document.createEvent("ErrorEvent"),e.initErrorEvent("error",!1,!0,b,c,f),e.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{configurable:!0,get:function(){return!0}})});void 0===e.error&&Object.defineProperty(e,"error",
{configurable:!0,enumerable:!0,get:function(){return a}});window.dispatchEvent(e);e.defaultPrevented||console.error(a)};var Da=new function(){};function Ea(a){window.HTMLElement=function(){function b(){var c=this.constructor;var f=document.__CE_registry.l.get(c);if(!f)throw Error("Failed to construct a custom element: The constructor was not registered with `customElements`.");var d=f.constructionStack;if(0===d.length)return d=n.call(document,f.localName),Object.setPrototypeOf(d,c.prototype),d.__CE_state=1,d.__CE_definition=f,W(a,d),d;var e=d.length-1,g=d[e];if(g===Da)throw Error("Failed to construct '"+f.localName+"': This element was already constructed.");
d[e]=Da;Object.setPrototypeOf(g,c.prototype);W(a,g);return g}b.prototype=na.prototype;Object.defineProperty(b.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});return b}()};function Z(a,b,c){function f(d){return function(e){for(var g=[],h=0;h<arguments.length;++h)g[h]=arguments[h];h=[];for(var k=[],l=0;l<g.length;l++){var m=g[l];m instanceof Element&&I(m)&&k.push(m);if(m instanceof DocumentFragment)for(m=m.firstChild;m;m=m.nextSibling)h.push(m);else h.push(m)}d.apply(this,g);for(g=0;g<k.length;g++)Y(a,k[g]);if(I(this))for(g=0;g<h.length;g++)k=h[g],k instanceof Element&&X(a,k)}}void 0!==c.prepend&&M(b,"prepend",f(c.prepend));void 0!==c.append&&M(b,"append",f(c.append))}
;function Fa(a){M(Document.prototype,"createElement",function(b){return Ca(a,this,b,null)});M(Document.prototype,"importNode",function(b,c){b=aa.call(this,b,!!c);this.__CE_registry?N(a,b):V(a,b);return b});M(Document.prototype,"createElementNS",function(b,c){return Ca(a,this,c,b)});Z(a,Document.prototype,{prepend:ba,append:ca})};function Ga(a){function b(c,f){Object.defineProperty(c,"textContent",{enumerable:f.enumerable,configurable:!0,get:f.get,set:function(d){if(this.nodeType===Node.TEXT_NODE)f.set.call(this,d);else{var e=void 0;if(this.firstChild){var g=this.childNodes,h=g.length;if(0<h&&I(this)){e=Array(h);for(var k=0;k<h;k++)e[k]=g[k]}}f.set.call(this,d);if(e)for(d=0;d<e.length;d++)Y(a,e[d])}}})}M(Node.prototype,"insertBefore",function(c,f){if(c instanceof DocumentFragment){var d=J(c);c=t.call(this,c,f);if(I(this))for(f=
0;f<d.length;f++)X(a,d[f]);return c}d=c instanceof Element&&I(c);f=t.call(this,c,f);d&&Y(a,c);I(this)&&X(a,c);return f});M(Node.prototype,"appendChild",function(c){if(c instanceof DocumentFragment){var f=J(c);c=r.call(this,c);if(I(this))for(var d=0;d<f.length;d++)X(a,f[d]);return c}f=c instanceof Element&&I(c);d=r.call(this,c);f&&Y(a,c);I(this)&&X(a,c);return d});M(Node.prototype,"cloneNode",function(c){c=q.call(this,!!c);this.ownerDocument.__CE_registry?N(a,c):V(a,c);return c});M(Node.prototype,
"removeChild",function(c){var f=c instanceof Element&&I(c),d=u.call(this,c);f&&Y(a,c);return d});M(Node.prototype,"replaceChild",function(c,f){if(c instanceof DocumentFragment){var d=J(c);c=v.call(this,c,f);if(I(this))for(Y(a,f),f=0;f<d.length;f++)X(a,d[f]);return c}d=c instanceof Element&&I(c);var e=v.call(this,c,f),g=I(this);g&&Y(a,f);d&&Y(a,c);g&&X(a,c);return e});x&&x.get?b(Node.prototype,x):Aa(a,function(c){b(c,{enumerable:!0,configurable:!0,get:function(){for(var f=[],d=this.firstChild;d;d=
d.nextSibling)d.nodeType!==Node.COMMENT_NODE&&f.push(d.textContent);return f.join("")},set:function(f){for(;this.firstChild;)u.call(this,this.firstChild);null!=f&&""!==f&&r.call(this,document.createTextNode(f))}})})};function Ha(a){function b(f){return function(d){for(var e=[],g=0;g<arguments.length;++g)e[g]=arguments[g];g=[];for(var h=[],k=0;k<e.length;k++){var l=e[k];l instanceof Element&&I(l)&&h.push(l);if(l instanceof DocumentFragment)for(l=l.firstChild;l;l=l.nextSibling)g.push(l);else g.push(l)}f.apply(this,e);for(e=0;e<h.length;e++)Y(a,h[e]);if(I(this))for(e=0;e<g.length;e++)h=g[e],h instanceof Element&&X(a,h)}}var c=Element.prototype;void 0!==ja&&M(c,"before",b(ja));void 0!==ka&&M(c,"after",b(ka));void 0!==
la&&M(c,"replaceWith",function(f){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var g=[],h=0;h<d.length;h++){var k=d[h];k instanceof Element&&I(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)e.push(k);else e.push(k)}h=I(this);la.apply(this,d);for(d=0;d<g.length;d++)Y(a,g[d]);if(h)for(Y(a,this),d=0;d<e.length;d++)g=e[d],g instanceof Element&&X(a,g)});void 0!==ma&&M(c,"remove",function(){var f=I(this);ma.call(this);f&&Y(a,this)})};function Ia(a){function b(d,e){Object.defineProperty(d,"innerHTML",{enumerable:e.enumerable,configurable:!0,get:e.get,set:function(g){var h=this,k=void 0;I(this)&&(k=[],U(a,this,function(w){w!==h&&k.push(w)}));e.set.call(this,g);if(k)for(var l=0;l<k.length;l++){var m=k[l];1===m.__CE_state&&a.disconnectedCallback(m)}this.ownerDocument.__CE_registry?N(a,this):V(a,this);return g}})}function c(d,e){M(d,"insertAdjacentElement",function(g,h){var k=I(h);g=e.call(this,g,h);k&&Y(a,h);I(g)&&X(a,h);return g})}
function f(d,e){function g(h,k){for(var l=[];h!==k;h=h.nextSibling)l.push(h);for(k=0;k<l.length;k++)N(a,l[k])}M(d,"insertAdjacentHTML",function(h,k){h=h.toLowerCase();if("beforebegin"===h){var l=this.previousSibling;e.call(this,h,k);g(l||this.parentNode.firstChild,this)}else if("afterbegin"===h)l=this.firstChild,e.call(this,h,k),g(this.firstChild,l);else if("beforeend"===h)l=this.lastChild,e.call(this,h,k),g(l||this.firstChild,null);else if("afterend"===h)l=this.nextSibling,e.call(this,h,k),g(this.nextSibling,
l);else throw new SyntaxError("The value provided ("+String(h)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");})}y&&M(Element.prototype,"attachShadow",function(d){d=y.call(this,d);if(a.a&&!d.__CE_patched){d.__CE_patched=!0;for(var e=0;e<a.b.length;e++)a.b[e](d)}return this.__CE_shadowRoot=d});z&&z.get?b(Element.prototype,z):H&&H.get?b(HTMLElement.prototype,H):Ba(a,function(d){b(d,{enumerable:!0,configurable:!0,get:function(){return q.call(this,!0).innerHTML},set:function(e){var g=
"template"===this.localName,h=g?this.content:this,k=p.call(document,this.namespaceURI,this.localName);for(k.innerHTML=e;0<h.childNodes.length;)u.call(h,h.childNodes[0]);for(e=g?k.content:k;0<e.childNodes.length;)r.call(h,e.childNodes[0])}})});M(Element.prototype,"setAttribute",function(d,e){if(1!==this.__CE_state)return B.call(this,d,e);var g=A.call(this,d);B.call(this,d,e);e=A.call(this,d);a.attributeChangedCallback(this,d,g,e,null)});M(Element.prototype,"setAttributeNS",function(d,e,g){if(1!==this.__CE_state)return E.call(this,
d,e,g);var h=D.call(this,d,e);E.call(this,d,e,g);g=D.call(this,d,e);a.attributeChangedCallback(this,e,h,g,d)});M(Element.prototype,"removeAttribute",function(d){if(1!==this.__CE_state)return C.call(this,d);var e=A.call(this,d);C.call(this,d);null!==e&&a.attributeChangedCallback(this,d,e,null,null)});M(Element.prototype,"removeAttributeNS",function(d,e){if(1!==this.__CE_state)return F.call(this,d,e);var g=D.call(this,d,e);F.call(this,d,e);var h=D.call(this,d,e);g!==h&&a.attributeChangedCallback(this,
e,g,h,d)});oa?c(HTMLElement.prototype,oa):G&&c(Element.prototype,G);pa?f(HTMLElement.prototype,pa):fa&&f(Element.prototype,fa);Z(a,Element.prototype,{prepend:ha,append:ia});Ha(a)};var T=window.customElements;function Ja(){var a=new S;Ea(a);Fa(a);Z(a,DocumentFragment.prototype,{prepend:da,append:ea});Ga(a);Ia(a);a=new O(a);document.__CE_registry=a;Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:a})}T&&!T.forcePolyfill&&"function"==typeof T.define&&"function"==typeof T.get||Ja();window.__CE_installPolyfill=Ja;
}).call(self);

//# sourceMappingURL=custom-elements.min.js.map


/***/ }),

/***/ "./node_modules/@webcomponents/webcomponents-platform/webcomponents-platform.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@webcomponents/webcomponents-platform/webcomponents-platform.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * @license
 * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

(function() {

  'use strict';

  // defaultPrevented is broken in IE.
  // https://connect.microsoft.com/IE/feedback/details/790389/event-defaultprevented-returns-false-after-preventdefault-was-called
  var workingDefaultPrevented = (function() {
    var e = document.createEvent('Event');
    e.initEvent('foo', true, true);
    e.preventDefault();
    return e.defaultPrevented;
  })();

  if (!workingDefaultPrevented) {
    var origPreventDefault = Event.prototype.preventDefault;
    Event.prototype.preventDefault = function() {
      if (!this.cancelable) {
        return;
      }

      origPreventDefault.call(this);

      Object.defineProperty(this, 'defaultPrevented', {
        get: function() {
          return true;
        },
        configurable: true
      });
    };
  }

  var isIE = /Trident/.test(navigator.userAgent);

  // Event constructor shim
  if (!window.Event || isIE && (typeof window.Event !== 'function')) {
    var origEvent = window.Event;
    /**
     * @param {!string} inType
     * @param {?(EventInit)=} params
     */
    window.Event = function(inType, params) {
      params = params || {};
      var e = document.createEvent('Event');
      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));
      return e;
    };
    if (origEvent) {
      for (var i in origEvent) {
        window.Event[i] = origEvent[i];
      }
      window.Event.prototype = origEvent.prototype;
    }
  }

  // CustomEvent constructor shim
  if (!window.CustomEvent || isIE && (typeof window.CustomEvent !== 'function')) {
    /**
     * @template T
     * @param {!string} inType
     * @param {?(CustomEventInit<T>)=} params
     */
    window.CustomEvent = function(inType, params) {
      params = params || {};
      var e = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));
      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);
      return e;
    };
    window.CustomEvent.prototype = window.Event.prototype;
  }

  if (!window.MouseEvent || isIE && (typeof window.MouseEvent !== 'function')) {
    var origMouseEvent = window.MouseEvent;
    /**
     *
     * @param {!string} inType
     * @param {?(MouseEventInit)=} params
     */
    window.MouseEvent = function(inType, params) {
      params = params || {};
      var e = document.createEvent('MouseEvent');
      e.initMouseEvent(inType,
        Boolean(params.bubbles), Boolean(params.cancelable),
        params.view || window, params.detail,
        params.screenX, params.screenY, params.clientX, params.clientY,
        params.ctrlKey, params.altKey, params.shiftKey, params.metaKey,
        params.button, params.relatedTarget);
      return e;
    };
    if (origMouseEvent) {
      for (var i in origMouseEvent) {
        window.MouseEvent[i] = origMouseEvent[i];
      }
    }
    window.MouseEvent.prototype = origMouseEvent.prototype;
  }

  // ES6 stuff
  if (!Array.from) {
    Array.from = function (object) {
      return [].slice.call(/** @type {IArrayLike} */(object));
    };
  }

  if (!Object.assign) {
    var assign = function(target, source) {
      var n$ = Object.getOwnPropertyNames(source);
      for (var i=0, p; i < n$.length; i++) {
        p = n$[i];
        target[p] = source[p];
      }
    }

    Object.assign = function(target, sources) {
      var args = [].slice.call(arguments, 1);
      for (var i=0, s; i < args.length; i++) {
        s = args[i];
        if (s) {
          assign(target, s);
        }
      }
      return target;
    }
  }

})();


/***/ }),

/***/ "./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
@license @nocompile
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function () {
  'use strict';

  (function(){if(void 0===window.Reflect||void 0===window.customElements||window.customElements.polyfillWrapFlushCallback)return;const a=HTMLElement;window.HTMLElement={HTMLElement:function HTMLElement(){return Reflect.construct(a,[],this.constructor)}}.HTMLElement,HTMLElement.prototype=a.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,a);})();

}());


/***/ }),

/***/ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/**
@license @nocompile
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function(){/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';var w;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function ca(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}function da(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c}
var ea="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this,ha="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};function ia(){ia=function(){};ea.Symbol||(ea.Symbol=ja)}function ma(a,b){this.a=a;ha(this,"description",{configurable:!0,writable:!0,value:b})}ma.prototype.toString=function(){return this.a};
var ja=function(){function a(c){if(this instanceof a)throw new TypeError("Symbol is not a constructor");return new ma("jscomp_symbol_"+(c||"")+"_"+b++,c)}var b=0;return a}();function na(){ia();var a=ea.Symbol.iterator;a||(a=ea.Symbol.iterator=ea.Symbol("Symbol.iterator"));"function"!=typeof Array.prototype[a]&&ha(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return oa(aa(this))}});na=function(){}}
function oa(a){na();a={next:a};a[ea.Symbol.iterator]=function(){return this};return a}var pa;if("function"==typeof Object.setPrototypeOf)pa=Object.setPrototypeOf;else{var ta;a:{var ua={Fa:!0},wa={};try{wa.__proto__=ua;ta=wa.Fa;break a}catch(a){}ta=!1}pa=ta?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var xa=pa;function ya(){this.f=!1;this.b=null;this.U=void 0;this.a=1;this.F=0;this.c=null}
function za(a){if(a.f)throw new TypeError("Generator is already running");a.f=!0}ya.prototype.u=function(a){this.U=a};function Aa(a,b){a.c={Ia:b,Ma:!0};a.a=a.F}ya.prototype.return=function(a){this.c={return:a};this.a=this.F};function Ba(a,b){a.a=3;return{value:b}}function Ca(a){this.a=new ya;this.b=a}function Da(a,b){za(a.a);var c=a.a.b;if(c)return Ea(a,"return"in c?c["return"]:function(d){return{value:d,done:!0}},b,a.a.return);a.a.return(b);return Fa(a)}
function Ea(a,b,c,d){try{var e=b.call(a.a.b,c);if(!(e instanceof Object))throw new TypeError("Iterator result "+e+" is not an object");if(!e.done)return a.a.f=!1,e;var f=e.value}catch(g){return a.a.b=null,Aa(a.a,g),Fa(a)}a.a.b=null;d.call(a.a,f);return Fa(a)}function Fa(a){for(;a.a.a;)try{var b=a.b(a.a);if(b)return a.a.f=!1,{value:b.value,done:!1}}catch(c){a.a.U=void 0,Aa(a.a,c)}a.a.f=!1;if(a.a.c){b=a.a.c;a.a.c=null;if(b.Ma)throw b.Ia;return{value:b.return,done:!0}}return{value:void 0,done:!0}}
function Ga(a){this.next=function(b){za(a.a);a.a.b?b=Ea(a,a.a.b.next,b,a.a.u):(a.a.u(b),b=Fa(a));return b};this.throw=function(b){za(a.a);a.a.b?b=Ea(a,a.a.b["throw"],b,a.a.u):(Aa(a.a,b),b=Fa(a));return b};this.return=function(b){return Da(a,b)};na();this[Symbol.iterator]=function(){return this}}function Ha(a,b){b=new Ga(new Ca(b));xa&&xa(b,a.prototype);return b}Array.from||(Array.from=function(a){return[].slice.call(a)});
Object.assign||(Object.assign=function(a){for(var b=[].slice.call(arguments,1),c=0,d;c<b.length;c++)if(d=b[c])for(var e=a,f=d,g=Object.getOwnPropertyNames(f),h=0;h<g.length;h++)d=g[h],e[d]=f[d];return a});(function(){if(!function(){var f=document.createEvent("Event");f.initEvent("foo",!0,!0);f.preventDefault();return f.defaultPrevented}()){var a=Event.prototype.preventDefault;Event.prototype.preventDefault=function(){this.cancelable&&(a.call(this),Object.defineProperty(this,"defaultPrevented",{get:function(){return!0},configurable:!0}))}}var b=/Trident/.test(navigator.userAgent);if(!window.Event||b&&"function"!==typeof window.Event){var c=window.Event;window.Event=function(f,g){g=g||{};var h=document.createEvent("Event");
h.initEvent(f,!!g.bubbles,!!g.cancelable);return h};if(c){for(var d in c)window.Event[d]=c[d];window.Event.prototype=c.prototype}}if(!window.CustomEvent||b&&"function"!==typeof window.CustomEvent)window.CustomEvent=function(f,g){g=g||{};var h=document.createEvent("CustomEvent");h.initCustomEvent(f,!!g.bubbles,!!g.cancelable,g.detail);return h},window.CustomEvent.prototype=window.Event.prototype;if(!window.MouseEvent||b&&"function"!==typeof window.MouseEvent){b=window.MouseEvent;window.MouseEvent=
function(f,g){g=g||{};var h=document.createEvent("MouseEvent");h.initMouseEvent(f,!!g.bubbles,!!g.cancelable,g.view||window,g.detail,g.screenX,g.screenY,g.clientX,g.clientY,g.ctrlKey,g.altKey,g.shiftKey,g.metaKey,g.button,g.relatedTarget);return h};if(b)for(var e in b)window.MouseEvent[e]=b[e];window.MouseEvent.prototype=b.prototype}})();(function(){function a(){}function b(p,t){if(!p.childNodes.length)return[];switch(p.nodeType){case Node.DOCUMENT_NODE:return F.call(p,t);case Node.DOCUMENT_FRAGMENT_NODE:return C.call(p,t);default:return r.call(p,t)}}var c="undefined"===typeof HTMLTemplateElement,d=!(document.createDocumentFragment().cloneNode()instanceof DocumentFragment),e=!1;/Trident/.test(navigator.userAgent)&&function(){function p(z,S){if(z instanceof DocumentFragment)for(var cb;cb=z.firstChild;)D.call(this,cb,S);else D.call(this,
z,S);return z}e=!0;var t=Node.prototype.cloneNode;Node.prototype.cloneNode=function(z){z=t.call(this,z);this instanceof DocumentFragment&&(z.__proto__=DocumentFragment.prototype);return z};DocumentFragment.prototype.querySelectorAll=HTMLElement.prototype.querySelectorAll;DocumentFragment.prototype.querySelector=HTMLElement.prototype.querySelector;Object.defineProperties(DocumentFragment.prototype,{nodeType:{get:function(){return Node.DOCUMENT_FRAGMENT_NODE},configurable:!0},localName:{get:function(){},
configurable:!0},nodeName:{get:function(){return"#document-fragment"},configurable:!0}});var D=Node.prototype.insertBefore;Node.prototype.insertBefore=p;var K=Node.prototype.appendChild;Node.prototype.appendChild=function(z){z instanceof DocumentFragment?p.call(this,z,null):K.call(this,z);return z};var ba=Node.prototype.removeChild,ka=Node.prototype.replaceChild;Node.prototype.replaceChild=function(z,S){z instanceof DocumentFragment?(p.call(this,z,S),ba.call(this,S)):ka.call(this,z,S);return S};Document.prototype.createDocumentFragment=
function(){var z=this.createElement("df");z.__proto__=DocumentFragment.prototype;return z};var qa=Document.prototype.importNode;Document.prototype.importNode=function(z,S){S=qa.call(this,z,S||!1);z instanceof DocumentFragment&&(S.__proto__=DocumentFragment.prototype);return S}}();var f=Node.prototype.cloneNode,g=Document.prototype.createElement,h=Document.prototype.importNode,k=Node.prototype.removeChild,l=Node.prototype.appendChild,m=Node.prototype.replaceChild,q=DOMParser.prototype.parseFromString,
H=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML")||{get:function(){return this.innerHTML},set:function(p){this.innerHTML=p}},E=Object.getOwnPropertyDescriptor(window.Node.prototype,"childNodes")||{get:function(){return this.childNodes}},r=Element.prototype.querySelectorAll,F=Document.prototype.querySelectorAll,C=DocumentFragment.prototype.querySelectorAll,N=function(){if(!c){var p=document.createElement("template"),t=document.createElement("template");t.content.appendChild(document.createElement("div"));
p.content.appendChild(t);p=p.cloneNode(!0);return 0===p.content.childNodes.length||0===p.content.firstChild.content.childNodes.length||d}}();if(c){var y=document.implementation.createHTMLDocument("template"),X=!0,v=document.createElement("style");v.textContent="template{display:none;}";var ra=document.head;ra.insertBefore(v,ra.firstElementChild);a.prototype=Object.create(HTMLElement.prototype);var fa=!document.createElement("div").hasOwnProperty("innerHTML");a.S=function(p){if(!p.content&&p.namespaceURI===
document.documentElement.namespaceURI){p.content=y.createDocumentFragment();for(var t;t=p.firstChild;)l.call(p.content,t);if(fa)p.__proto__=a.prototype;else if(p.cloneNode=function(D){return a.b(this,D)},X)try{n(p),I(p)}catch(D){X=!1}a.a(p.content)}};var sa={option:["select"],thead:["table"],col:["colgroup","table"],tr:["tbody","table"],th:["tr","tbody","table"],td:["tr","tbody","table"]},n=function(p){Object.defineProperty(p,"innerHTML",{get:function(){return va(this)},set:function(t){var D=sa[(/<([a-z][^/\0>\x20\t\r\n\f]+)/i.exec(t)||
["",""])[1].toLowerCase()];if(D)for(var K=0;K<D.length;K++)t="<"+D[K]+">"+t+"</"+D[K]+">";y.body.innerHTML=t;for(a.a(y);this.content.firstChild;)k.call(this.content,this.content.firstChild);t=y.body;if(D)for(K=0;K<D.length;K++)t=t.lastChild;for(;t.firstChild;)l.call(this.content,t.firstChild)},configurable:!0})},I=function(p){Object.defineProperty(p,"outerHTML",{get:function(){return"<template>"+this.innerHTML+"</template>"},set:function(t){if(this.parentNode){y.body.innerHTML=t;for(t=this.ownerDocument.createDocumentFragment();y.body.firstChild;)l.call(t,
y.body.firstChild);m.call(this.parentNode,t,this)}else throw Error("Failed to set the 'outerHTML' property on 'Element': This element has no parent node.");},configurable:!0})};n(a.prototype);I(a.prototype);a.a=function(p){p=b(p,"template");for(var t=0,D=p.length,K;t<D&&(K=p[t]);t++)a.S(K)};document.addEventListener("DOMContentLoaded",function(){a.a(document)});Document.prototype.createElement=function(){var p=g.apply(this,arguments);"template"===p.localName&&a.S(p);return p};DOMParser.prototype.parseFromString=
function(){var p=q.apply(this,arguments);a.a(p);return p};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return va(this)},set:function(p){H.set.call(this,p);a.a(this)},configurable:!0,enumerable:!0});var la=/[&\u00A0"]/g,Xb=/[&\u00A0<>]/g,db=function(p){switch(p){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}};v=function(p){for(var t={},D=0;D<p.length;D++)t[p[D]]=!0;return t};var Ra=v("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
eb=v("style script xmp iframe noembed noframes plaintext noscript".split(" ")),va=function(p,t){"template"===p.localName&&(p=p.content);for(var D="",K=t?t(p):E.get.call(p),ba=0,ka=K.length,qa;ba<ka&&(qa=K[ba]);ba++){a:{var z=qa;var S=p;var cb=t;switch(z.nodeType){case Node.ELEMENT_NODE:for(var Yb=z.localName,fb="<"+Yb,cg=z.attributes,ud=0;S=cg[ud];ud++)fb+=" "+S.name+'="'+S.value.replace(la,db)+'"';fb+=">";z=Ra[Yb]?fb:fb+va(z,cb)+"</"+Yb+">";break a;case Node.TEXT_NODE:z=z.data;z=S&&eb[S.localName]?
z:z.replace(Xb,db);break a;case Node.COMMENT_NODE:z="\x3c!--"+z.data+"--\x3e";break a;default:throw window.console.error(z),Error("not implemented");}}D+=z}return D}}if(c||N){a.b=function(p,t){var D=f.call(p,!1);this.S&&this.S(D);t&&(l.call(D.content,f.call(p.content,!0)),u(D.content,p.content));return D};var u=function(p,t){if(t.querySelectorAll&&(t=b(t,"template"),0!==t.length)){p=b(p,"template");for(var D=0,K=p.length,ba,ka;D<K;D++)ka=t[D],ba=p[D],a&&a.S&&a.S(ka),m.call(ba.parentNode,G.call(ka,
!0),ba)}},G=Node.prototype.cloneNode=function(p){if(!e&&d&&this instanceof DocumentFragment)if(p)var t=J.call(this.ownerDocument,this,!0);else return this.ownerDocument.createDocumentFragment();else this.nodeType===Node.ELEMENT_NODE&&"template"===this.localName&&this.namespaceURI==document.documentElement.namespaceURI?t=a.b(this,p):t=f.call(this,p);p&&u(t,this);return t},J=Document.prototype.importNode=function(p,t){t=t||!1;if("template"===p.localName)return a.b(p,t);var D=h.call(this,p,t);if(t){u(D,
p);p=b(D,'script:not([type]),script[type="application/javascript"],script[type="text/javascript"]');for(var K,ba=0;ba<p.length;ba++){K=p[ba];t=g.call(document,"script");t.textContent=K.textContent;for(var ka=K.attributes,qa=0,z;qa<ka.length;qa++)z=ka[qa],t.setAttribute(z.name,z.value);m.call(K.parentNode,t,K)}}return D}}c&&(window.HTMLTemplateElement=a)})();var Ia=setTimeout;function Ja(){}function Ka(a,b){return function(){a.apply(b,arguments)}}function x(a){if(!(this instanceof x))throw new TypeError("Promises must be constructed via new");if("function"!==typeof a)throw new TypeError("not a function");this.K=0;this.pa=!1;this.w=void 0;this.V=[];La(a,this)}
function Ma(a,b){for(;3===a.K;)a=a.w;0===a.K?a.V.push(b):(a.pa=!0,Na(function(){var c=1===a.K?b.Oa:b.Pa;if(null===c)(1===a.K?Oa:Pa)(b.na,a.w);else{try{var d=c(a.w)}catch(e){Pa(b.na,e);return}Oa(b.na,d)}}))}function Oa(a,b){try{if(b===a)throw new TypeError("A promise cannot be resolved with itself.");if(b&&("object"===typeof b||"function"===typeof b)){var c=b.then;if(b instanceof x){a.K=3;a.w=b;Qa(a);return}if("function"===typeof c){La(Ka(c,b),a);return}}a.K=1;a.w=b;Qa(a)}catch(d){Pa(a,d)}}
function Pa(a,b){a.K=2;a.w=b;Qa(a)}function Qa(a){2===a.K&&0===a.V.length&&Na(function(){a.pa||"undefined"!==typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",a.w)});for(var b=0,c=a.V.length;b<c;b++)Ma(a,a.V[b]);a.V=null}function Sa(a,b,c){this.Oa="function"===typeof a?a:null;this.Pa="function"===typeof b?b:null;this.na=c}function La(a,b){var c=!1;try{a(function(d){c||(c=!0,Oa(b,d))},function(d){c||(c=!0,Pa(b,d))})}catch(d){c||(c=!0,Pa(b,d))}}
x.prototype["catch"]=function(a){return this.then(null,a)};x.prototype.then=function(a,b){var c=new this.constructor(Ja);Ma(this,new Sa(a,b,c));return c};x.prototype["finally"]=function(a){var b=this.constructor;return this.then(function(c){return b.resolve(a()).then(function(){return c})},function(c){return b.resolve(a()).then(function(){return b.reject(c)})})};
function Ta(a){return new x(function(b,c){function d(h,k){try{if(k&&("object"===typeof k||"function"===typeof k)){var l=k.then;if("function"===typeof l){l.call(k,function(m){d(h,m)},c);return}}e[h]=k;0===--f&&b(e)}catch(m){c(m)}}if(!a||"undefined"===typeof a.length)throw new TypeError("Promise.all accepts an array");var e=Array.prototype.slice.call(a);if(0===e.length)return b([]);for(var f=e.length,g=0;g<e.length;g++)d(g,e[g])})}
function Ua(a){return a&&"object"===typeof a&&a.constructor===x?a:new x(function(b){b(a)})}function Va(a){return new x(function(b,c){c(a)})}function Wa(a){return new x(function(b,c){for(var d=0,e=a.length;d<e;d++)a[d].then(b,c)})}var Na="function"===typeof setImmediate&&function(a){setImmediate(a)}||function(a){Ia(a,0)};/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
if(!window.Promise){window.Promise=x;x.prototype.then=x.prototype.then;x.all=Ta;x.race=Wa;x.resolve=Ua;x.reject=Va;var Xa=document.createTextNode(""),Ya=[];(new MutationObserver(function(){for(var a=Ya.length,b=0;b<a;b++)Ya[b]();Ya.splice(0,a)})).observe(Xa,{characterData:!0});Na=function(a){Ya.push(a);Xa.textContent=0<Xa.textContent.length?"":"a"}};/*
 Copyright (C) 2015 by WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function(a,b){if(!(b in a)){var c=typeof global===typeof c?window:global,d=0,e=""+Math.random(),f="__\u0001symbol@@"+e,g=a.getOwnPropertyNames,h=a.getOwnPropertyDescriptor,k=a.create,l=a.keys,m=a.freeze||a,q=a.defineProperty,H=a.defineProperties,E=h(a,"getOwnPropertyNames"),r=a.prototype,F=r.hasOwnProperty,C=r.propertyIsEnumerable,N=r.toString,y=function(u,G,J){F.call(u,f)||q(u,f,{enumerable:!1,configurable:!1,writable:!1,value:{}});u[f]["@@"+G]=J},X=function(u,G){var J=k(u);g(G).forEach(function(p){sa.call(G,
p)&&Ra(J,p,G[p])});return J},v=function(){},ra=function(u){return u!=f&&!F.call(la,u)},fa=function(u){return u!=f&&F.call(la,u)},sa=function(u){var G=""+u;return fa(G)?F.call(this,G)&&this[f]["@@"+G]:C.call(this,u)},n=function(u){q(r,u,{enumerable:!1,configurable:!0,get:v,set:function(G){va(this,u,{enumerable:!1,configurable:!0,writable:!0,value:G});y(this,u,!0)}});return m(la[u]=q(a(u),"constructor",Xb))},I=function(u){if(this&&this!==c)throw new TypeError("Symbol is not a constructor");return n("__\u0001symbol:".concat(u||
"",e,++d))},la=k(null),Xb={value:I},db=function(u){return la[u]},Ra=function(u,G,J){var p=""+G;if(fa(p)){G=va;if(J.enumerable){var t=k(J);t.enumerable=!1}else t=J;G(u,p,t);y(u,p,!!J.enumerable)}else q(u,G,J);return u},eb=function(u){return g(u).filter(fa).map(db)};E.value=Ra;q(a,"defineProperty",E);E.value=eb;q(a,b,E);E.value=function(u){return g(u).filter(ra)};q(a,"getOwnPropertyNames",E);E.value=function(u,G){var J=eb(G);J.length?l(G).concat(J).forEach(function(p){sa.call(G,p)&&Ra(u,p,G[p])}):H(u,
G);return u};q(a,"defineProperties",E);E.value=sa;q(r,"propertyIsEnumerable",E);E.value=I;q(c,"Symbol",E);E.value=function(u){u="__\u0001symbol:".concat("__\u0001symbol:",u,e);return u in r?la[u]:n(u)};q(I,"for",E);E.value=function(u){if(ra(u))throw new TypeError(u+" is not a symbol");return F.call(la,u)?u.slice(20,-e.length):void 0};q(I,"keyFor",E);E.value=function(u,G){var J=h(u,G);J&&fa(G)&&(J.enumerable=sa.call(u,G));return J};q(a,"getOwnPropertyDescriptor",E);E.value=function(u,G){return 1===
arguments.length?k(u):X(u,G)};q(a,"create",E);E.value=function(){var u=N.call(this);return"[object String]"===u&&fa(this)?"[object Symbol]":u};q(r,"toString",E);try{var va=k(q({},"__\u0001symbol:",{get:function(){return q(this,"__\u0001symbol:",{value:!1})["__\u0001symbol:"]}}))["__\u0001symbol:"]||q}catch(u){va=function(G,J,p){var t=h(r,J);delete r[J];q(G,J,p);q(r,J,t)}}}})(Object,"getOwnPropertySymbols");
(function(a){var b=a.defineProperty,c=a.prototype,d=c.toString,e;"iterator match replace search split hasInstance isConcatSpreadable unscopables species toPrimitive toStringTag".split(" ").forEach(function(f){if(!(f in Symbol))switch(b(Symbol,f,{value:Symbol(f)}),f){case "toStringTag":e=a.getOwnPropertyDescriptor(c,"toString"),e.value=function(){var g=d.call(this),h=this[Symbol.toStringTag];return"undefined"===typeof h?g:"[object "+h+"]"},b(c,"toString",e)}})})(Object,Symbol);
(function(a,b,c){function d(){return this}b[a]||(b[a]=function(){var e=0,f=this,g={next:function(){var h=f.length<=e;return h?{done:h}:{done:h,value:f[e++]}}};g[a]=d;return g});c[a]||(c[a]=function(){var e=String.fromCodePoint,f=this,g=0,h=f.length,k={next:function(){var l=h<=g,m=l?"":e(f.codePointAt(g));g+=m.length;return l?{done:l}:{done:l,value:m}}};k[a]=d;return k})})(Symbol.iterator,Array.prototype,String.prototype);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
var Za=Object.prototype.toString;Object.prototype.toString=function(){return void 0===this?"[object Undefined]":null===this?"[object Null]":Za.call(this)};Object.keys=function(a){return Object.getOwnPropertyNames(a).filter(function(b){return(b=Object.getOwnPropertyDescriptor(a,b))&&b.enumerable})};var $a=window.Symbol.iterator;
String.prototype[$a]&&String.prototype.codePointAt||(String.prototype[$a]=function ab(){var b,c=this;return Ha(ab,function(d){1==d.a&&(b=0);if(3!=d.a)return b<c.length?d=Ba(d,c[b]):(d.a=0,d=void 0),d;b++;d.a=2})});Set.prototype[$a]||(Set.prototype[$a]=function bb(){var b,c=this,d;return Ha(bb,function(e){1==e.a&&(b=[],c.forEach(function(f){b.push(f)}),d=0);if(3!=e.a)return d<b.length?e=Ba(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});
Map.prototype[$a]||(Map.prototype[$a]=function gb(){var b,c=this,d;return Ha(gb,function(e){1==e.a&&(b=[],c.forEach(function(f,g){b.push([g,f])}),d=0);if(3!=e.a)return d<b.length?e=Ba(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
window.WebComponents=window.WebComponents||{flags:{}};var hb=document.querySelector('script[src*="webcomponents-bundle"]'),ib=/wc-(.+)/,A={};if(!A.noOpts){location.search.slice(1).split("&").forEach(function(a){a=a.split("=");var b;a[0]&&(b=a[0].match(ib))&&(A[b[1]]=a[1]||!0)});if(hb)for(var jb=0,kb=void 0;kb=hb.attributes[jb];jb++)"src"!==kb.name&&(A[kb.name]=kb.value||!0);if(A.log&&A.log.split){var lb=A.log.split(",");A.log={};lb.forEach(function(a){A.log[a]=!0})}else A.log={}}
window.WebComponents.flags=A;var mb=A.shadydom;if(mb){window.ShadyDOM=window.ShadyDOM||{};window.ShadyDOM.force=mb;var nb=A.noPatch;window.ShadyDOM.noPatch="true"===nb?!0:nb}var ob=A.register||A.ce;ob&&window.customElements&&(window.customElements.forcePolyfill=ob);/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function pb(){}pb.prototype.toJSON=function(){return{}};function B(a){a.__shady||(a.__shady=new pb);return a.__shady}function L(a){return a&&a.__shady};var M=window.ShadyDOM||{};M.Ka=!(!Element.prototype.attachShadow||!Node.prototype.getRootNode);var qb=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild");M.D=!!(qb&&qb.configurable&&qb.get);M.ia=M.force||!M.Ka;M.G=M.noPatch||!1;M.ma=M.preferPerformance;M.la="on-demand"===M.G;M.ya=navigator.userAgent.match("Trident");function rb(a){return(a=L(a))&&void 0!==a.firstChild}function O(a){return a instanceof ShadowRoot}function sb(a){return(a=(a=L(a))&&a.root)&&tb(a)}
var ub=Element.prototype,vb=ub.matches||ub.matchesSelector||ub.mozMatchesSelector||ub.msMatchesSelector||ub.oMatchesSelector||ub.webkitMatchesSelector,wb=document.createTextNode(""),xb=0,yb=[];(new MutationObserver(function(){for(;yb.length;)try{yb.shift()()}catch(a){throw wb.textContent=xb++,a;}})).observe(wb,{characterData:!0});function zb(a){yb.push(a);wb.textContent=xb++}var Ab=!!document.contains;function Bb(a,b){for(;b;){if(b==a)return!0;b=b.__shady_parentNode}return!1}
function Cb(a){for(var b=a.length-1;0<=b;b--){var c=a[b],d=c.getAttribute("id")||c.getAttribute("name");d&&"length"!==d&&isNaN(d)&&(a[d]=c)}a.item=function(e){return a[e]};a.namedItem=function(e){if("length"!==e&&isNaN(e)&&a[e])return a[e];for(var f=ca(a),g=f.next();!g.done;g=f.next())if(g=g.value,(g.getAttribute("id")||g.getAttribute("name"))==e)return g;return null};return a}function Db(a){var b=[];for(a=a.__shady_native_firstChild;a;a=a.__shady_native_nextSibling)b.push(a);return b}
function Eb(a){var b=[];for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)b.push(a);return b}function Fb(a,b,c){c.configurable=!0;if(c.value)a[b]=c.value;else try{Object.defineProperty(a,b,c)}catch(d){}}function P(a,b,c,d){c=void 0===c?"":c;for(var e in b)d&&0<=d.indexOf(e)||Fb(a,c+e,b[e])}function Gb(a,b){for(var c in b)c in a&&Fb(a,c,b[c])}function Q(a){var b={};Object.getOwnPropertyNames(a).forEach(function(c){b[c]=Object.getOwnPropertyDescriptor(a,c)});return b};var Hb=[],Ib;function Jb(a){Ib||(Ib=!0,zb(Kb));Hb.push(a)}function Kb(){Ib=!1;for(var a=!!Hb.length;Hb.length;)Hb.shift()();return a}Kb.list=Hb;function Lb(){this.a=!1;this.addedNodes=[];this.removedNodes=[];this.ba=new Set}function Mb(a){a.a||(a.a=!0,zb(function(){a.flush()}))}Lb.prototype.flush=function(){if(this.a){this.a=!1;var a=this.takeRecords();a.length&&this.ba.forEach(function(b){b(a)})}};Lb.prototype.takeRecords=function(){if(this.addedNodes.length||this.removedNodes.length){var a=[{addedNodes:this.addedNodes,removedNodes:this.removedNodes}];this.addedNodes=[];this.removedNodes=[];return a}return[]};
function Nb(a,b){var c=B(a);c.W||(c.W=new Lb);c.W.ba.add(b);var d=c.W;return{Ca:b,P:d,Da:a,takeRecords:function(){return d.takeRecords()}}}function Ob(a){var b=a&&a.P;b&&(b.ba.delete(a.Ca),b.ba.size||(B(a.Da).W=null))}
function Pb(a,b){var c=b.getRootNode();return a.map(function(d){var e=c===d.target.getRootNode();if(e&&d.addedNodes){if(e=Array.from(d.addedNodes).filter(function(f){return c===f.getRootNode()}),e.length)return d=Object.create(d),Object.defineProperty(d,"addedNodes",{value:e,configurable:!0}),d}else if(e)return d}).filter(function(d){return d})};var Qb=/[&\u00A0"]/g,Rb=/[&\u00A0<>]/g;function Sb(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}}function Tb(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b}var Ub=Tb("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),Vb=Tb("style script xmp iframe noembed noframes plaintext noscript".split(" "));
function Wb(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):a.childNodes,e=0,f=d.length,g=void 0;e<f&&(g=d[e]);e++){a:{var h=g;var k=a,l=b;switch(h.nodeType){case Node.ELEMENT_NODE:k=h.localName;for(var m="<"+k,q=h.attributes,H=0,E;E=q[H];H++)m+=" "+E.name+'="'+E.value.replace(Qb,Sb)+'"';m+=">";h=Ub[k]?m:m+Wb(h,l)+"</"+k+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&Vb[k.localName]?h:h.replace(Rb,Sb);break a;case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),
Error("not implemented");}}c+=h}return c};var Zb=M.D,$b={querySelector:function(a){return this.__shady_native_querySelector(a)},querySelectorAll:function(a){return this.__shady_native_querySelectorAll(a)}},ac={};function bc(a){ac[a]=function(b){return b["__shady_native_"+a]}}function cc(a,b){P(a,b,"__shady_native_");for(var c in b)bc(c)}function R(a,b){b=void 0===b?[]:b;for(var c=0;c<b.length;c++){var d=b[c],e=Object.getOwnPropertyDescriptor(a,d);e&&(Object.defineProperty(a,"__shady_native_"+d,e),e.value?$b[d]||($b[d]=e.value):bc(d))}}
var dc=document.createTreeWalker(document,NodeFilter.SHOW_ALL,null,!1),ec=document.createTreeWalker(document,NodeFilter.SHOW_ELEMENT,null,!1),fc=document.implementation.createHTMLDocument("inert");function gc(a){for(var b;b=a.__shady_native_firstChild;)a.__shady_native_removeChild(b)}var hc=["firstElementChild","lastElementChild","children","childElementCount"],ic=["querySelector","querySelectorAll"];
function jc(){var a=["dispatchEvent","addEventListener","removeEventListener"];window.EventTarget?R(window.EventTarget.prototype,a):(R(Node.prototype,a),R(Window.prototype,a));Zb?R(Node.prototype,"parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")):cc(Node.prototype,{parentNode:{get:function(){dc.currentNode=this;return dc.parentNode()}},firstChild:{get:function(){dc.currentNode=this;return dc.firstChild()}},lastChild:{get:function(){dc.currentNode=
this;return dc.lastChild()}},previousSibling:{get:function(){dc.currentNode=this;return dc.previousSibling()}},nextSibling:{get:function(){dc.currentNode=this;return dc.nextSibling()}},childNodes:{get:function(){var b=[];dc.currentNode=this;for(var c=dc.firstChild();c;)b.push(c),c=dc.nextSibling();return b}},parentElement:{get:function(){ec.currentNode=this;return ec.parentNode()}},textContent:{get:function(){switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:for(var b=
document.createTreeWalker(this,NodeFilter.SHOW_TEXT,null,!1),c="",d;d=b.nextNode();)c+=d.nodeValue;return c;default:return this.nodeValue}},set:function(b){if("undefined"===typeof b||null===b)b="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:gc(this);(0<b.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_native_insertBefore(document.createTextNode(b),void 0);break;default:this.nodeValue=b}}}});R(Node.prototype,"appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
R(HTMLElement.prototype,["parentElement","contains"]);a={firstElementChild:{get:function(){ec.currentNode=this;return ec.firstChild()}},lastElementChild:{get:function(){ec.currentNode=this;return ec.lastChild()}},children:{get:function(){var b=[];ec.currentNode=this;for(var c=ec.firstChild();c;)b.push(c),c=ec.nextSibling();return Cb(b)}},childElementCount:{get:function(){return this.children?this.children.length:0}}};Zb?(R(Element.prototype,hc),R(Element.prototype,["previousElementSibling","nextElementSibling",
"innerHTML","className"]),R(HTMLElement.prototype,["children","innerHTML","className"])):(cc(Element.prototype,a),cc(Element.prototype,{previousElementSibling:{get:function(){ec.currentNode=this;return ec.previousSibling()}},nextElementSibling:{get:function(){ec.currentNode=this;return ec.nextSibling()}},innerHTML:{get:function(){return Wb(this,Db)},set:function(b){var c="template"===this.localName?this.content:this;gc(c);var d=this.localName||"div";d=this.namespaceURI&&this.namespaceURI!==fc.namespaceURI?
fc.createElementNS(this.namespaceURI,d):fc.createElement(d);d.innerHTML=b;for(b="template"===this.localName?d.content:d;d=b.__shady_native_firstChild;)c.__shady_native_insertBefore(d,void 0)}},className:{get:function(){return this.getAttribute("class")||""},set:function(b){this.setAttribute("class",b)}}}));R(Element.prototype,"setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));R(Element.prototype,ic);R(HTMLElement.prototype,["focus","blur"]);window.HTMLTemplateElement&&
R(window.HTMLTemplateElement.prototype,["innerHTML"]);Zb?R(DocumentFragment.prototype,hc):cc(DocumentFragment.prototype,a);R(DocumentFragment.prototype,ic);Zb?(R(Document.prototype,hc),R(Document.prototype,["activeElement"])):cc(Document.prototype,a);R(Document.prototype,["importNode","getElementById"]);R(Document.prototype,ic)};var kc=Q({get childNodes(){return this.__shady_childNodes},get firstChild(){return this.__shady_firstChild},get lastChild(){return this.__shady_lastChild},get childElementCount(){return this.__shady_childElementCount},get children(){return this.__shady_children},get firstElementChild(){return this.__shady_firstElementChild},get lastElementChild(){return this.__shady_lastElementChild},get shadowRoot(){return this.__shady_shadowRoot}}),lc=Q({get textContent(){return this.__shady_textContent},set textContent(a){this.__shady_textContent=
a},get innerHTML(){return this.__shady_innerHTML},set innerHTML(a){return this.__shady_innerHTML=a}}),mc=Q({get parentElement(){return this.__shady_parentElement},get parentNode(){return this.__shady_parentNode},get nextSibling(){return this.__shady_nextSibling},get previousSibling(){return this.__shady_previousSibling},get nextElementSibling(){return this.__shady_nextElementSibling},get previousElementSibling(){return this.__shady_previousElementSibling},get className(){return this.__shady_className},
set className(a){return this.__shady_className=a}});function nc(a){for(var b in a){var c=a[b];c&&(c.enumerable=!1)}}nc(kc);nc(lc);nc(mc);var oc=M.D||!0===M.G,pc=oc?function(){}:function(a){var b=B(a);b.Aa||(b.Aa=!0,Gb(a,mc))},qc=oc?function(){}:function(a){var b=B(a);b.za||(b.za=!0,Gb(a,kc),window.customElements&&!M.G||Gb(a,lc))};var rc="__eventWrappers"+Date.now(),sc=function(){var a=Object.getOwnPropertyDescriptor(Event.prototype,"composed");return a?function(b){return a.get.call(b)}:null}(),tc=function(){function a(){}var b=!1,c={get capture(){b=!0;return!1}};window.addEventListener("test",a,c);window.removeEventListener("test",a,c);return b}();function uc(a){if(a&&"object"===typeof a){var b=!!a.capture;var c=!!a.once;var d=!!a.passive;var e=a.O}else b=!!a,d=c=!1;return{wa:e,capture:b,once:c,passive:d,ua:tc?a:b}}
var vc={blur:!0,focus:!0,focusin:!0,focusout:!0,click:!0,dblclick:!0,mousedown:!0,mouseenter:!0,mouseleave:!0,mousemove:!0,mouseout:!0,mouseover:!0,mouseup:!0,wheel:!0,beforeinput:!0,input:!0,keydown:!0,keyup:!0,compositionstart:!0,compositionupdate:!0,compositionend:!0,touchstart:!0,touchend:!0,touchmove:!0,touchcancel:!0,pointerover:!0,pointerenter:!0,pointerdown:!0,pointermove:!0,pointerup:!0,pointercancel:!0,pointerout:!0,pointerleave:!0,gotpointercapture:!0,lostpointercapture:!0,dragstart:!0,
drag:!0,dragenter:!0,dragleave:!0,dragover:!0,drop:!0,dragend:!0,DOMActivate:!0,DOMFocusIn:!0,DOMFocusOut:!0,keypress:!0},wc={DOMAttrModified:!0,DOMAttributeNameChanged:!0,DOMCharacterDataModified:!0,DOMElementNameChanged:!0,DOMNodeInserted:!0,DOMNodeInsertedIntoDocument:!0,DOMNodeRemoved:!0,DOMNodeRemovedFromDocument:!0,DOMSubtreeModified:!0};function xc(a){return a instanceof Node?a.__shady_getRootNode():a}
function yc(a,b){var c=[],d=a;for(a=xc(a);d;)c.push(d),d.__shady_assignedSlot?d=d.__shady_assignedSlot:d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host&&(b||d!==a)?d=d.host:d=d.__shady_parentNode;c[c.length-1]===document&&c.push(window);return c}function zc(a){a.__composedPath||(a.__composedPath=yc(a.target,!0));return a.__composedPath}function Ac(a,b){if(!O)return a;a=yc(a,!0);for(var c=0,d,e=void 0,f,g=void 0;c<b.length;c++)if(d=b[c],f=xc(d),f!==e&&(g=a.indexOf(f),e=f),!O(f)||-1<g)return d}
function Bc(a){function b(c,d){c=new a(c,d);c.__composed=d&&!!d.composed;return c}b.__proto__=a;b.prototype=a.prototype;return b}var Cc={focus:!0,blur:!0};function Dc(a){return a.__target!==a.target||a.__relatedTarget!==a.relatedTarget}function Ec(a,b,c){if(c=b.__handlers&&b.__handlers[a.type]&&b.__handlers[a.type][c])for(var d=0,e;(e=c[d])&&(!Dc(a)||a.target!==a.relatedTarget)&&(e.call(b,a),!a.__immediatePropagationStopped);d++);}
function Fc(a){var b=a.composedPath();Object.defineProperty(a,"currentTarget",{get:function(){return d},configurable:!0});for(var c=b.length-1;0<=c;c--){var d=b[c];Ec(a,d,"capture");if(a.ea)return}Object.defineProperty(a,"eventPhase",{get:function(){return Event.AT_TARGET}});var e;for(c=0;c<b.length;c++){d=b[c];var f=L(d);f=f&&f.root;if(0===c||f&&f===e)if(Ec(a,d,"bubble"),d!==window&&(e=d.__shady_getRootNode()),a.ea)break}}
function Gc(a,b,c,d,e,f){for(var g=0;g<a.length;g++){var h=a[g],k=h.type,l=h.capture,m=h.once,q=h.passive;if(b===h.node&&c===k&&d===l&&e===m&&f===q)return g}return-1}function Hc(a){Kb();return this.__shady_native_dispatchEvent(a)}
function Ic(a,b,c){var d=uc(c),e=d.capture,f=d.once,g=d.passive,h=d.wa;d=d.ua;if(b){var k=typeof b;if("function"===k||"object"===k)if("object"!==k||b.handleEvent&&"function"===typeof b.handleEvent){if(wc[a])return this.__shady_native_addEventListener(a,b,d);var l=h||this;if(h=b[rc]){if(-1<Gc(h,l,a,e,f,g))return}else b[rc]=[];h=function(m){f&&this.__shady_removeEventListener(a,b,c);m.__target||Jc(m);if(l!==this){var q=Object.getOwnPropertyDescriptor(m,"currentTarget");Object.defineProperty(m,"currentTarget",
{get:function(){return l},configurable:!0})}m.__previousCurrentTarget=m.currentTarget;if(!O(l)&&"slot"!==l.localName||-1!=m.composedPath().indexOf(l))if(m.composed||-1<m.composedPath().indexOf(l))if(Dc(m)&&m.target===m.relatedTarget)m.eventPhase===Event.BUBBLING_PHASE&&m.stopImmediatePropagation();else if(m.eventPhase===Event.CAPTURING_PHASE||m.bubbles||m.target===l||l instanceof Window){var H="function"===k?b.call(l,m):b.handleEvent&&b.handleEvent(m);l!==this&&(q?(Object.defineProperty(m,"currentTarget",
q),q=null):delete m.currentTarget);return H}};b[rc].push({node:l,type:a,capture:e,once:f,passive:g,$a:h});Cc[a]?(this.__handlers=this.__handlers||{},this.__handlers[a]=this.__handlers[a]||{capture:[],bubble:[]},this.__handlers[a][e?"capture":"bubble"].push(h)):this.__shady_native_addEventListener(a,h,d)}}}
function Kc(a,b,c){if(b){var d=uc(c);c=d.capture;var e=d.once,f=d.passive,g=d.wa;d=d.ua;if(wc[a])return this.__shady_native_removeEventListener(a,b,d);var h=g||this;g=void 0;var k=null;try{k=b[rc]}catch(l){}k&&(e=Gc(k,h,a,c,e,f),-1<e&&(g=k.splice(e,1)[0].$a,k.length||(b[rc]=void 0)));this.__shady_native_removeEventListener(a,g||b,d);g&&Cc[a]&&this.__handlers&&this.__handlers[a]&&(a=this.__handlers[a][c?"capture":"bubble"],b=a.indexOf(g),-1<b&&a.splice(b,1))}}
function Lc(){for(var a in Cc)window.__shady_native_addEventListener(a,function(b){b.__target||(Jc(b),Fc(b))},!0)}
var Mc=Q({get composed(){void 0===this.__composed&&(sc?this.__composed="focusin"===this.type||"focusout"===this.type||sc(this):!1!==this.isTrusted&&(this.__composed=vc[this.type]));return this.__composed||!1},composedPath:function(){this.__composedPath||(this.__composedPath=yc(this.__target,this.composed));return this.__composedPath},get target(){return Ac(this.currentTarget||this.__previousCurrentTarget,this.composedPath())},get relatedTarget(){if(!this.__relatedTarget)return null;this.__relatedTargetComposedPath||
(this.__relatedTargetComposedPath=yc(this.__relatedTarget,!0));return Ac(this.currentTarget||this.__previousCurrentTarget,this.__relatedTargetComposedPath)},stopPropagation:function(){Event.prototype.stopPropagation.call(this);this.ea=!0},stopImmediatePropagation:function(){Event.prototype.stopImmediatePropagation.call(this);this.ea=this.__immediatePropagationStopped=!0}});
function Jc(a){a.__target=a.target;a.__relatedTarget=a.relatedTarget;if(M.D){var b=Object.getPrototypeOf(a);if(!b.hasOwnProperty("__shady_patchedProto")){var c=Object.create(b);c.__shady_sourceProto=b;P(c,Mc);b.__shady_patchedProto=c}a.__proto__=b.__shady_patchedProto}else P(a,Mc)}var Nc=Bc(Event),Oc=Bc(CustomEvent),Pc=Bc(MouseEvent);
function Qc(){if(!sc&&Object.getOwnPropertyDescriptor(Event.prototype,"isTrusted")){var a=function(){var b=new MouseEvent("click",{bubbles:!0,cancelable:!0,composed:!0});this.__shady_dispatchEvent(b)};Element.prototype.click?Element.prototype.click=a:HTMLElement.prototype.click&&(HTMLElement.prototype.click=a)}}var Rc=Object.getOwnPropertyNames(Document.prototype).filter(function(a){return"on"===a.substring(0,2)});function Sc(a,b){return{index:a,X:[],aa:b}}
function Tc(a,b,c,d){var e=0,f=0,g=0,h=0,k=Math.min(b-e,d-f);if(0==e&&0==f)a:{for(g=0;g<k;g++)if(a[g]!==c[g])break a;g=k}if(b==a.length&&d==c.length){h=a.length;for(var l=c.length,m=0;m<k-g&&Uc(a[--h],c[--l]);)m++;h=m}e+=g;f+=g;b-=h;d-=h;if(0==b-e&&0==d-f)return[];if(e==b){for(b=Sc(e,0);f<d;)b.X.push(c[f++]);return[b]}if(f==d)return[Sc(e,b-e)];k=e;g=f;d=d-g+1;h=b-k+1;b=Array(d);for(l=0;l<d;l++)b[l]=Array(h),b[l][0]=l;for(l=0;l<h;l++)b[0][l]=l;for(l=1;l<d;l++)for(m=1;m<h;m++)if(a[k+m-1]===c[g+l-1])b[l][m]=
b[l-1][m-1];else{var q=b[l-1][m]+1,H=b[l][m-1]+1;b[l][m]=q<H?q:H}k=b.length-1;g=b[0].length-1;d=b[k][g];for(a=[];0<k||0<g;)0==k?(a.push(2),g--):0==g?(a.push(3),k--):(h=b[k-1][g-1],l=b[k-1][g],m=b[k][g-1],q=l<m?l<h?l:h:m<h?m:h,q==h?(h==d?a.push(0):(a.push(1),d=h),k--,g--):q==l?(a.push(3),k--,d=l):(a.push(2),g--,d=m));a.reverse();b=void 0;k=[];for(g=0;g<a.length;g++)switch(a[g]){case 0:b&&(k.push(b),b=void 0);e++;f++;break;case 1:b||(b=Sc(e,0));b.aa++;e++;b.X.push(c[f]);f++;break;case 2:b||(b=Sc(e,
0));b.aa++;e++;break;case 3:b||(b=Sc(e,0)),b.X.push(c[f]),f++}b&&k.push(b);return k}function Uc(a,b){return a===b};var Vc=Q({dispatchEvent:Hc,addEventListener:Ic,removeEventListener:Kc});var Wc=null;function Xc(){Wc||(Wc=window.ShadyCSS&&window.ShadyCSS.ScopingShim);return Wc||null}function Yc(a,b,c){var d=Xc();return d&&"class"===b?(d.setElementClass(a,c),!0):!1}function Zc(a,b){var c=Xc();c&&c.unscopeNode(a,b)}function $c(a,b){var c=Xc();if(!c)return!0;if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){c=!0;for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)c=c&&$c(a,b);return c}return a.nodeType!==Node.ELEMENT_NODE?!0:c.currentScopeForNode(a)===b}
function ad(a){if(a.nodeType!==Node.ELEMENT_NODE)return"";var b=Xc();return b?b.currentScopeForNode(a):""}function bd(a,b){if(a)for(a.nodeType===Node.ELEMENT_NODE&&b(a),a=a.__shady_firstChild;a;a=a.__shady_nextSibling)a.nodeType===Node.ELEMENT_NODE&&bd(a,b)};var cd=window.document,dd=M.ma,ed=Object.getOwnPropertyDescriptor(Node.prototype,"isConnected"),fd=ed&&ed.get;function gd(a){for(var b;b=a.__shady_firstChild;)a.__shady_removeChild(b)}function hd(a){var b=L(a);if(b&&void 0!==b.da)for(b=a.__shady_firstChild;b;b=b.__shady_nextSibling)hd(b);if(a=L(a))a.da=void 0}function id(a){var b=a;a&&"slot"===a.localName&&(b=(b=(b=L(a))&&b.T)&&b.length?b[0]:id(a.__shady_nextSibling));return b}
function jd(a,b,c){if(a=(a=L(a))&&a.W){if(b)if(b.nodeType===Node.DOCUMENT_FRAGMENT_NODE)for(var d=0,e=b.childNodes.length;d<e;d++)a.addedNodes.push(b.childNodes[d]);else a.addedNodes.push(b);c&&a.removedNodes.push(c);Mb(a)}}
var qd=Q({get parentNode(){var a=L(this);a=a&&a.parentNode;return void 0!==a?a:this.__shady_native_parentNode},get firstChild(){var a=L(this);a=a&&a.firstChild;return void 0!==a?a:this.__shady_native_firstChild},get lastChild(){var a=L(this);a=a&&a.lastChild;return void 0!==a?a:this.__shady_native_lastChild},get nextSibling(){var a=L(this);a=a&&a.nextSibling;return void 0!==a?a:this.__shady_native_nextSibling},get previousSibling(){var a=L(this);a=a&&a.previousSibling;return void 0!==a?a:this.__shady_native_previousSibling},
get childNodes(){if(rb(this)){var a=L(this);if(!a.childNodes){a.childNodes=[];for(var b=this.__shady_firstChild;b;b=b.__shady_nextSibling)a.childNodes.push(b)}var c=a.childNodes}else c=this.__shady_native_childNodes;c.item=function(d){return c[d]};return c},get parentElement(){var a=L(this);(a=a&&a.parentNode)&&a.nodeType!==Node.ELEMENT_NODE&&(a=null);return void 0!==a?a:this.__shady_native_parentElement},get isConnected(){if(fd&&fd.call(this))return!0;if(this.nodeType==Node.DOCUMENT_FRAGMENT_NODE)return!1;
var a=this.ownerDocument;if(Ab){if(a.__shady_native_contains(this))return!0}else if(a.documentElement&&a.documentElement.__shady_native_contains(this))return!0;for(a=this;a&&!(a instanceof Document);)a=a.__shady_parentNode||(O(a)?a.host:void 0);return!!(a&&a instanceof Document)},get textContent(){if(rb(this)){for(var a=[],b=this.__shady_firstChild;b;b=b.__shady_nextSibling)b.nodeType!==Node.COMMENT_NODE&&a.push(b.__shady_textContent);return a.join("")}return this.__shady_native_textContent},set textContent(a){if("undefined"===
typeof a||null===a)a="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:if(!rb(this)&&M.D){var b=this.__shady_firstChild;(b!=this.__shady_lastChild||b&&b.nodeType!=Node.TEXT_NODE)&&gd(this);this.__shady_native_textContent=a}else gd(this),(0<a.length||this.nodeType===Node.ELEMENT_NODE)&&this.__shady_insertBefore(document.createTextNode(a));break;default:this.nodeValue=a}},insertBefore:function(a,b){if(this.ownerDocument!==cd&&a.ownerDocument!==cd)return this.__shady_native_insertBefore(a,
b),a;if(a===this)throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");if(b){var c=L(b);c=c&&c.parentNode;if(void 0!==c&&c!==this||void 0===c&&b.__shady_native_parentNode!==this)throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");}if(b===a)return a;jd(this,a);var d=[],e=(c=kd(this))?c.host.localName:ad(this),f=a.__shady_parentNode;if(f){var g=ad(a);var h=!!c||!kd(a)||
dd&&void 0!==this.__noInsertionPoint;f.__shady_removeChild(a,h)}f=!0;var k=(!dd||void 0===a.__noInsertionPoint&&void 0===this.__noInsertionPoint)&&!$c(a,e),l=c&&!a.__noInsertionPoint&&(!dd||a.nodeType===Node.DOCUMENT_FRAGMENT_NODE);if(l||k)k&&(g=g||ad(a)),bd(a,function(m){l&&"slot"===m.localName&&d.push(m);if(k){var q=g;Xc()&&(q&&Zc(m,q),(q=Xc())&&q.scopeNode(m,e))}});d.length&&(ld(c),c.c.push.apply(c.c,d instanceof Array?d:da(ca(d))),md(c));rb(this)&&(nd(a,this,b),c=L(this),sb(this)?(md(c.root),
f=!1):c.root&&(f=!1));f?(c=O(this)?this.host:this,b?(b=id(b),c.__shady_native_insertBefore(a,b)):c.__shady_native_appendChild(a)):a.ownerDocument!==this.ownerDocument&&this.ownerDocument.adoptNode(a);return a},appendChild:function(a){if(this!=a||!O(a))return this.__shady_insertBefore(a)},removeChild:function(a,b){b=void 0===b?!1:b;if(this.ownerDocument!==cd)return this.__shady_native_removeChild(a);if(a.__shady_parentNode!==this)throw Error("The node to be removed is not a child of this node: "+a);
jd(this,null,a);var c=kd(a),d=c&&od(c,a),e=L(this);if(rb(this)&&(pd(a,this),sb(this))){md(e.root);var f=!0}if(Xc()&&!b&&c&&a.nodeType!==Node.TEXT_NODE){var g=ad(a);bd(a,function(h){Zc(h,g)})}hd(a);c&&((b=this&&"slot"===this.localName)&&(f=!0),(d||b)&&md(c));f||(f=O(this)?this.host:this,(!e.root&&"slot"!==a.localName||f===a.__shady_native_parentNode)&&f.__shady_native_removeChild(a));return a},replaceChild:function(a,b){this.__shady_insertBefore(a,b);this.__shady_removeChild(b);return a},cloneNode:function(a){if("template"==
this.localName)return this.__shady_native_cloneNode(a);var b=this.__shady_native_cloneNode(!1);if(a&&b.nodeType!==Node.ATTRIBUTE_NODE){a=this.__shady_firstChild;for(var c;a;a=a.__shady_nextSibling)c=a.__shady_cloneNode(!0),b.__shady_appendChild(c)}return b},getRootNode:function(a){if(this&&this.nodeType){var b=B(this),c=b.da;void 0===c&&(O(this)?(c=this,b.da=c):(c=(c=this.__shady_parentNode)?c.__shady_getRootNode(a):this,document.documentElement.__shady_native_contains(this)&&(b.da=c)));return c}},
contains:function(a){return Bb(this,a)}});var sd=Q({get assignedSlot(){var a=this.__shady_parentNode;(a=a&&a.__shady_shadowRoot)&&rd(a);return(a=L(this))&&a.assignedSlot||null}});function td(a,b,c){var d=[];vd(a,b,c,d);return d}function vd(a,b,c,d){for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling){var e;if(e=a.nodeType===Node.ELEMENT_NODE){e=a;var f=b,g=c,h=d,k=f(e);k&&h.push(e);g&&g(k)?e=k:(vd(e,f,g,h),e=void 0)}if(e)break}}
var wd=Q({get firstElementChild(){var a=L(this);if(a&&void 0!==a.firstChild){for(a=this.__shady_firstChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_firstElementChild},get lastElementChild(){var a=L(this);if(a&&void 0!==a.lastChild){for(a=this.__shady_lastChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_lastElementChild},get children(){return rb(this)?Cb(Array.prototype.filter.call(Eb(this),
function(a){return a.nodeType===Node.ELEMENT_NODE})):this.__shady_native_children},get childElementCount(){var a=this.__shady_children;return a?a.length:0}}),xd=Q({querySelector:function(a){return td(this,function(b){return vb.call(b,a)},function(b){return!!b})[0]||null},querySelectorAll:function(a,b){if(b){b=Array.prototype.slice.call(this.__shady_native_querySelectorAll(a));var c=this.__shady_getRootNode();return Cb(b.filter(function(d){return d.__shady_getRootNode()==c}))}return Cb(td(this,function(d){return vb.call(d,
a)}))}}),yd=M.ma&&!M.G?Object.assign({},wd):wd;Object.assign(wd,xd);var zd=window.document;function Ad(a,b){if("slot"===b)a=a.__shady_parentNode,sb(a)&&md(L(a).root);else if("slot"===a.localName&&"name"===b&&(b=kd(a))){if(b.a){Bd(b);var c=a.Ba,d=Cd(a);if(d!==c){c=b.b[c];var e=c.indexOf(a);0<=e&&c.splice(e,1);c=b.b[d]||(b.b[d]=[]);c.push(a);1<c.length&&(b.b[d]=Dd(c))}}md(b)}}
var Ed=Q({get previousElementSibling(){var a=L(this);if(a&&void 0!==a.previousSibling){for(a=this.__shady_previousSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_previousSibling;return a}return this.__shady_native_previousElementSibling},get nextElementSibling(){var a=L(this);if(a&&void 0!==a.nextSibling){for(a=this.__shady_nextSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.__shady_nextSibling;return a}return this.__shady_native_nextElementSibling},get slot(){return this.getAttribute("slot")},
set slot(a){this.__shady_setAttribute("slot",a)},get className(){return this.getAttribute("class")||""},set className(a){this.__shady_setAttribute("class",a)},setAttribute:function(a,b){this.ownerDocument!==zd?this.__shady_native_setAttribute(a,b):Yc(this,a,b)||(this.__shady_native_setAttribute(a,b),Ad(this,a))},removeAttribute:function(a){this.ownerDocument!==zd?this.__shady_native_removeAttribute(a):Yc(this,a,"")?""===this.getAttribute(a)&&this.__shady_native_removeAttribute(a):(this.__shady_native_removeAttribute(a),
Ad(this,a))}}),Jd=Q({attachShadow:function(a){if(!this)throw Error("Must provide a host.");if(!a)throw Error("Not enough arguments.");if(a.shadyUpgradeFragment&&!M.ya){var b=a.shadyUpgradeFragment;b.__proto__=ShadowRoot.prototype;Fd(b,this,a);Gd(b,b);a=b.__noInsertionPoint?null:b.querySelectorAll("slot");b.__noInsertionPoint=void 0;if(a&&a.length){var c=b;ld(c);c.c.push.apply(c.c,a instanceof Array?a:da(ca(a)));md(b)}b.host.__shady_native_appendChild(b)}else b=new Hd(Id,this,a);return this.__CE_shadowRoot=
b},get shadowRoot(){var a=L(this);return a&&a.Sa||null}});Object.assign(Ed,Jd);var Kd=document.implementation.createHTMLDocument("inert"),Ld=Q({get innerHTML(){return rb(this)?Wb("template"===this.localName?this.content:this,Eb):this.__shady_native_innerHTML},set innerHTML(a){if("template"===this.localName)this.__shady_native_innerHTML=a;else{gd(this);var b=this.localName||"div";b=this.namespaceURI&&this.namespaceURI!==Kd.namespaceURI?Kd.createElementNS(this.namespaceURI,b):Kd.createElement(b);for(M.D?b.__shady_native_innerHTML=a:b.innerHTML=a;a=b.__shady_firstChild;)this.__shady_insertBefore(a)}}});var Md=Q({blur:function(){var a=L(this);(a=(a=a&&a.root)&&a.activeElement)?a.__shady_blur():this.__shady_native_blur()}});M.ma||Rc.forEach(function(a){Md[a]={set:function(b){var c=B(this),d=a.substring(2);c.N||(c.N={});c.N[a]&&this.removeEventListener(d,c.N[a]);this.__shady_addEventListener(d,b);c.N[a]=b},get:function(){var b=L(this);return b&&b.N&&b.N[a]},configurable:!0}});var Nd=Q({assignedNodes:function(a){if("slot"===this.localName){var b=this.__shady_getRootNode();b&&O(b)&&rd(b);return(b=L(this))?(a&&a.flatten?b.T:b.assignedNodes)||[]:[]}},addEventListener:function(a,b,c){if("slot"!==this.localName||"slotchange"===a)Ic.call(this,a,b,c);else{"object"!==typeof c&&(c={capture:!!c});var d=this.__shady_parentNode;if(!d)throw Error("ShadyDOM cannot attach event to slot unless it has a `parentNode`");c.O=this;d.__shady_addEventListener(a,b,c)}},removeEventListener:function(a,
b,c){if("slot"!==this.localName||"slotchange"===a)Kc.call(this,a,b,c);else{"object"!==typeof c&&(c={capture:!!c});var d=this.__shady_parentNode;if(!d)throw Error("ShadyDOM cannot attach event to slot unless it has a `parentNode`");c.O=this;d.__shady_removeEventListener(a,b,c)}}});var Od=Q({getElementById:function(a){return""===a?null:td(this,function(b){return b.id==a},function(b){return!!b})[0]||null}});var Pd=Q({get activeElement(){var a=M.D?document.__shady_native_activeElement:document.activeElement;if(!a||!a.nodeType)return null;var b=!!O(this);if(!(this===document||b&&this.host!==a&&this.host.__shady_native_contains(a)))return null;for(b=kd(a);b&&b!==this;)a=b.host,b=kd(a);return this===document?b?null:a:b===this?a:null}});var Qd=window.document,Rd=Q({importNode:function(a,b){if(a.ownerDocument!==Qd||"template"===a.localName)return this.__shady_native_importNode(a,b);var c=this.__shady_native_importNode(a,!1);if(b)for(a=a.__shady_firstChild;a;a=a.__shady_nextSibling)b=this.__shady_importNode(a,!0),c.__shady_appendChild(b);return c}});var Sd=Q({dispatchEvent:Hc,addEventListener:Ic.bind(window),removeEventListener:Kc.bind(window)});var Td={};Object.getOwnPropertyDescriptor(HTMLElement.prototype,"parentElement")&&(Td.parentElement=qd.parentElement);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"contains")&&(Td.contains=qd.contains);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"children")&&(Td.children=wd.children);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"innerHTML")&&(Td.innerHTML=Ld.innerHTML);Object.getOwnPropertyDescriptor(HTMLElement.prototype,"className")&&(Td.className=Ed.className);
var Ud={EventTarget:[Vc],Node:[qd,window.EventTarget?null:Vc],Text:[sd],Comment:[sd],CDATASection:[sd],ProcessingInstruction:[sd],Element:[Ed,wd,sd,!M.D||"innerHTML"in Element.prototype?Ld:null,window.HTMLSlotElement?null:Nd],HTMLElement:[Md,Td],HTMLSlotElement:[Nd],DocumentFragment:[yd,Od],Document:[Rd,yd,Od,Pd],Window:[Sd]},Vd=M.D?null:["innerHTML","textContent"];function Wd(a,b,c,d){b.forEach(function(e){return a&&e&&P(a,e,c,d)})}
function Xd(a){var b=a?null:Vd,c;for(c in Ud)Wd(window[c]&&window[c].prototype,Ud[c],a,b)}["Text","Comment","CDATASection","ProcessingInstruction"].forEach(function(a){var b=window[a],c=Object.create(b.prototype);c.__shady_protoIsPatched=!0;Wd(c,Ud.EventTarget);Wd(c,Ud.Node);Ud[a]&&Wd(c,Ud[a]);b.prototype.__shady_patchedProto=c});function Yd(a){a.__shady_protoIsPatched=!0;Wd(a,Ud.EventTarget);Wd(a,Ud.Node);Wd(a,Ud.Element);Wd(a,Ud.HTMLElement);Wd(a,Ud.HTMLSlotElement);return a};var Zd=M.la,$d=M.D;function ae(a,b){if(Zd&&!a.__shady_protoIsPatched&&!O(a)){var c=Object.getPrototypeOf(a),d=c.hasOwnProperty("__shady_patchedProto")&&c.__shady_patchedProto;d||(d=Object.create(c),Yd(d),c.__shady_patchedProto=d);Object.setPrototypeOf(a,d)}$d||(1===b?pc(a):2===b&&qc(a))}
function be(a,b,c,d){ae(a,1);d=d||null;var e=B(a),f=d?B(d):null;e.previousSibling=d?f.previousSibling:b.__shady_lastChild;if(f=L(e.previousSibling))f.nextSibling=a;if(f=L(e.nextSibling=d))f.previousSibling=a;e.parentNode=b;d?d===c.firstChild&&(c.firstChild=a):(c.lastChild=a,c.firstChild||(c.firstChild=a));c.childNodes=null}
function nd(a,b,c){ae(b,2);var d=B(b);void 0!==d.firstChild&&(d.childNodes=null);if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE)for(a=a.__shady_native_firstChild;a;a=a.__shady_native_nextSibling)be(a,b,d,c);else be(a,b,d,c)}
function pd(a,b){var c=B(a);b=B(b);a===b.firstChild&&(b.firstChild=c.nextSibling);a===b.lastChild&&(b.lastChild=c.previousSibling);a=c.previousSibling;var d=c.nextSibling;a&&(B(a).nextSibling=d);d&&(B(d).previousSibling=a);c.parentNode=c.previousSibling=c.nextSibling=void 0;void 0!==b.childNodes&&(b.childNodes=null)}
function Gd(a,b){var c=B(a);if(b||void 0===c.firstChild){c.childNodes=null;var d=c.firstChild=a.__shady_native_firstChild;c.lastChild=a.__shady_native_lastChild;ae(a,2);c=d;for(d=void 0;c;c=c.__shady_native_nextSibling){var e=B(c);e.parentNode=b||a;e.nextSibling=c.__shady_native_nextSibling;e.previousSibling=d||null;d=c;ae(c,1)}}};var ce=Q({addEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.O=c.O||this;this.host.__shady_addEventListener(a,b,c)},removeEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.O=c.O||this;this.host.__shady_removeEventListener(a,b,c)}});function de(a,b){P(a,ce,b);P(a,Pd,b);P(a,Ld,b);P(a,wd,b);M.G&&!b?(P(a,qd,b),P(a,Od,b)):M.D||(P(a,mc),P(a,kc),P(a,lc))};var Id={},ee=M.deferConnectionCallbacks&&"loading"===document.readyState,fe;function ge(a){var b=[];do b.unshift(a);while(a=a.__shady_parentNode);return b}function Hd(a,b,c){if(a!==Id)throw new TypeError("Illegal constructor");this.a=null;Fd(this,b,c)}
function Fd(a,b,c){a.host=b;a.mode=c&&c.mode;Gd(a.host);b=B(a.host);b.root=a;b.Sa="closed"!==a.mode?a:null;b=B(a);b.firstChild=b.lastChild=b.parentNode=b.nextSibling=b.previousSibling=null;if(M.preferPerformance)for(;b=a.host.__shady_native_firstChild;)a.host.__shady_native_removeChild(b);else md(a)}function md(a){a.R||(a.R=!0,Jb(function(){return rd(a)}))}
function rd(a){var b;if(b=a.R){for(var c;a;)a:{a.R&&(c=a),b=a;a=b.host.__shady_getRootNode();if(O(a)&&(b=L(b.host))&&0<b.Z)break a;a=void 0}b=c}(c=b)&&c._renderSelf()}
Hd.prototype._renderSelf=function(){var a=ee;ee=!0;this.R=!1;if(this.a){Bd(this);for(var b=0,c;b<this.a.length;b++){c=this.a[b];var d=L(c),e=d.assignedNodes;d.assignedNodes=[];d.T=[];if(d.ra=e)for(d=0;d<e.length;d++){var f=L(e[d]);f.fa=f.assignedSlot;f.assignedSlot===c&&(f.assignedSlot=null)}}for(b=this.host.__shady_firstChild;b;b=b.__shady_nextSibling)he(this,b);for(b=0;b<this.a.length;b++){c=this.a[b];e=L(c);if(!e.assignedNodes.length)for(d=c.__shady_firstChild;d;d=d.__shady_nextSibling)he(this,
d,c);(d=(d=L(c.__shady_parentNode))&&d.root)&&(tb(d)||d.R)&&d._renderSelf();ie(this,e.T,e.assignedNodes);if(d=e.ra){for(f=0;f<d.length;f++)L(d[f]).fa=null;e.ra=null;d.length>e.assignedNodes.length&&(e.ha=!0)}e.ha&&(e.ha=!1,je(this,c))}c=this.a;b=[];for(e=0;e<c.length;e++)d=c[e].__shady_parentNode,(f=L(d))&&f.root||!(0>b.indexOf(d))||b.push(d);for(c=0;c<b.length;c++){f=b[c];e=f===this?this.host:f;d=[];for(f=f.__shady_firstChild;f;f=f.__shady_nextSibling)if("slot"==f.localName)for(var g=L(f).T,h=0;h<
g.length;h++)d.push(g[h]);else d.push(f);f=Db(e);g=Tc(d,d.length,f,f.length);for(var k=h=0,l=void 0;h<g.length&&(l=g[h]);h++){for(var m=0,q=void 0;m<l.X.length&&(q=l.X[m]);m++)q.__shady_native_parentNode===e&&e.__shady_native_removeChild(q),f.splice(l.index+k,1);k-=l.aa}k=0;for(l=void 0;k<g.length&&(l=g[k]);k++)for(h=f[l.index],m=l.index;m<l.index+l.aa;m++)q=d[m],e.__shady_native_insertBefore(q,h),f.splice(m,0,q)}}if(!M.preferPerformance&&!this.qa)for(b=this.host.__shady_firstChild;b;b=b.__shady_nextSibling)c=
L(b),b.__shady_native_parentNode!==this.host||"slot"!==b.localName&&c.assignedSlot||this.host.__shady_native_removeChild(b);this.qa=!0;ee=a;fe&&fe()};function he(a,b,c){var d=B(b),e=d.fa;d.fa=null;c||(c=(a=a.b[b.__shady_slot||"__catchall"])&&a[0]);c?(B(c).assignedNodes.push(b),d.assignedSlot=c):d.assignedSlot=void 0;e!==d.assignedSlot&&d.assignedSlot&&(B(d.assignedSlot).ha=!0)}
function ie(a,b,c){for(var d=0,e=void 0;d<c.length&&(e=c[d]);d++)if("slot"==e.localName){var f=L(e).assignedNodes;f&&f.length&&ie(a,b,f)}else b.push(c[d])}function je(a,b){b.__shady_native_dispatchEvent(new Event("slotchange"));b=L(b);b.assignedSlot&&je(a,b.assignedSlot)}function ld(a){a.c=a.c||[];a.a=a.a||[];a.b=a.b||{}}
function Bd(a){if(a.c&&a.c.length){for(var b=a.c,c,d=0;d<b.length;d++){var e=b[d];Gd(e);var f=e.__shady_parentNode;Gd(f);f=L(f);f.Z=(f.Z||0)+1;f=Cd(e);a.b[f]?(c=c||{},c[f]=!0,a.b[f].push(e)):a.b[f]=[e];a.a.push(e)}if(c)for(var g in c)a.b[g]=Dd(a.b[g]);a.c=[]}}function Cd(a){var b=a.name||a.getAttribute("name")||"__catchall";return a.Ba=b}
function Dd(a){return a.sort(function(b,c){b=ge(b);for(var d=ge(c),e=0;e<b.length;e++){c=b[e];var f=d[e];if(c!==f)return b=Eb(c.__shady_parentNode),b.indexOf(c)-b.indexOf(f)}})}
function od(a,b){if(a.a){Bd(a);var c=a.b,d;for(d in c)for(var e=c[d],f=0;f<e.length;f++){var g=e[f];if(Bb(b,g)){e.splice(f,1);var h=a.a.indexOf(g);0<=h&&(a.a.splice(h,1),(h=L(g.__shady_parentNode))&&h.Z&&h.Z--);f--;g=L(g);if(h=g.T)for(var k=0;k<h.length;k++){var l=h[k],m=l.__shady_native_parentNode;m&&m.__shady_native_removeChild(l)}g.T=[];g.assignedNodes=[];h=!0}}return h}}function tb(a){Bd(a);return!(!a.a||!a.a.length)}
(function(a){a.__proto__=DocumentFragment.prototype;de(a,"__shady_");de(a);Object.defineProperties(a,{nodeType:{value:Node.DOCUMENT_FRAGMENT_NODE,configurable:!0},nodeName:{value:"#document-fragment",configurable:!0},nodeValue:{value:null,configurable:!0}});["localName","namespaceURI","prefix"].forEach(function(b){Object.defineProperty(a,b,{value:void 0,configurable:!0})});["ownerDocument","baseURI","isConnected"].forEach(function(b){Object.defineProperty(a,b,{get:function(){return this.host[b]},
configurable:!0})})})(Hd.prototype);
if(window.customElements&&M.ia&&!M.preferPerformance){var ke=new Map;fe=function(){var a=[];ke.forEach(function(d,e){a.push([e,d])});ke.clear();for(var b=0;b<a.length;b++){var c=a[b][0];a[b][1]?c.__shadydom_connectedCallback():c.__shadydom_disconnectedCallback()}};ee&&document.addEventListener("readystatechange",function(){ee=!1;fe()},{once:!0});var le=function(a,b,c){var d=0,e="__isConnected"+d++;if(b||c)a.prototype.connectedCallback=a.prototype.__shadydom_connectedCallback=function(){ee?ke.set(this,
!0):this[e]||(this[e]=!0,b&&b.call(this))},a.prototype.disconnectedCallback=a.prototype.__shadydom_disconnectedCallback=function(){ee?this.isConnected||ke.set(this,!1):this[e]&&(this[e]=!1,c&&c.call(this))};return a},me=window.customElements.define,define=function(a,b){var c=b.prototype.connectedCallback,d=b.prototype.disconnectedCallback;me.call(window.customElements,a,le(b,c,d));b.prototype.connectedCallback=c;b.prototype.disconnectedCallback=d};window.customElements.define=define;Object.defineProperty(window.CustomElementRegistry.prototype,
"define",{value:define,configurable:!0})}function kd(a){a=a.__shady_getRootNode();if(O(a))return a};function ne(a){this.node=a}w=ne.prototype;w.addEventListener=function(a,b,c){return this.node.__shady_addEventListener(a,b,c)};w.removeEventListener=function(a,b,c){return this.node.__shady_removeEventListener(a,b,c)};w.appendChild=function(a){return this.node.__shady_appendChild(a)};w.insertBefore=function(a,b){return this.node.__shady_insertBefore(a,b)};w.removeChild=function(a){return this.node.__shady_removeChild(a)};w.replaceChild=function(a,b){return this.node.__shady_replaceChild(a,b)};
w.cloneNode=function(a){return this.node.__shady_cloneNode(a)};w.getRootNode=function(a){return this.node.__shady_getRootNode(a)};w.contains=function(a){return this.node.__shady_contains(a)};w.dispatchEvent=function(a){return this.node.__shady_dispatchEvent(a)};w.setAttribute=function(a,b){this.node.__shady_setAttribute(a,b)};w.getAttribute=function(a){return this.node.__shady_native_getAttribute(a)};w.hasAttribute=function(a){return this.node.__shady_native_hasAttribute(a)};w.removeAttribute=function(a){this.node.__shady_removeAttribute(a)};
w.attachShadow=function(a){return this.node.__shady_attachShadow(a)};w.focus=function(){this.node.__shady_native_focus()};w.blur=function(){this.node.__shady_blur()};w.importNode=function(a,b){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_importNode(a,b)};w.getElementById=function(a){if(this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_getElementById(a)};w.querySelector=function(a){return this.node.__shady_querySelector(a)};
w.querySelectorAll=function(a,b){return this.node.__shady_querySelectorAll(a,b)};w.assignedNodes=function(a){if("slot"===this.node.localName)return this.node.__shady_assignedNodes(a)};
ea.Object.defineProperties(ne.prototype,{activeElement:{configurable:!0,enumerable:!0,get:function(){if(O(this.node)||this.node.nodeType===Node.DOCUMENT_NODE)return this.node.__shady_activeElement}},_activeElement:{configurable:!0,enumerable:!0,get:function(){return this.activeElement}},host:{configurable:!0,enumerable:!0,get:function(){if(O(this.node))return this.node.host}},parentNode:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_parentNode}},firstChild:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_firstChild}},lastChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastChild}},nextSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextSibling}},previousSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousSibling}},childNodes:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childNodes}},parentElement:{configurable:!0,enumerable:!0,
get:function(){return this.node.__shady_parentElement}},firstElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_firstElementChild}},lastElementChild:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_lastElementChild}},nextElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_nextElementSibling}},previousElementSibling:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_previousElementSibling}},
children:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_children}},childElementCount:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_childElementCount}},shadowRoot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_shadowRoot}},assignedSlot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_assignedSlot}},isConnected:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_isConnected}},innerHTML:{configurable:!0,
enumerable:!0,get:function(){return this.node.__shady_innerHTML},set:function(a){this.node.__shady_innerHTML=a}},textContent:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_textContent},set:function(a){this.node.__shady_textContent=a}},slot:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_slot},set:function(a){this.node.__shady_slot=a}},className:{configurable:!0,enumerable:!0,get:function(){return this.node.__shady_className},set:function(a){return this.node.__shady_className=
a}}});Rc.forEach(function(a){Object.defineProperty(ne.prototype,a,{get:function(){return this.node["__shady_"+a]},set:function(b){this.node["__shady_"+a]=b},configurable:!0})});var oe=new WeakMap;function pe(a){if(O(a)||a instanceof ne)return a;var b=oe.get(a);b||(b=new ne(a),oe.set(a,b));return b};if(M.ia){var qe=M.D?function(a){return a}:function(a){qc(a);pc(a);return a},ShadyDOM={inUse:M.ia,patch:qe,isShadyRoot:O,enqueue:Jb,flush:Kb,flushInitial:function(a){!a.qa&&a.R&&rd(a)},settings:M,filterMutations:Pb,observeChildren:Nb,unobserveChildren:Ob,deferConnectionCallbacks:M.deferConnectionCallbacks,preferPerformance:M.preferPerformance,handlesDynamicScoping:!0,wrap:M.G?pe:qe,wrapIfNeeded:!0===M.G?pe:function(a){return a},Wrapper:ne,composedPath:zc,noPatch:M.G,patchOnDemand:M.la,nativeMethods:$b,
nativeTree:ac,patchElementProto:Yd};window.ShadyDOM=ShadyDOM;jc();Xd("__shady_");Object.defineProperty(document,"_activeElement",Pd.activeElement);P(Window.prototype,Sd,"__shady_");M.G?M.la&&P(Element.prototype,Jd):(Xd(),Qc());Lc();window.Event=Nc;window.CustomEvent=Oc;window.MouseEvent=Pc;window.ShadowRoot=Hd};var re=window.Document.prototype.createElement,se=window.Document.prototype.createElementNS,te=window.Document.prototype.importNode,ue=window.Document.prototype.prepend,ve=window.Document.prototype.append,we=window.DocumentFragment.prototype.prepend,xe=window.DocumentFragment.prototype.append,ye=window.Node.prototype.cloneNode,ze=window.Node.prototype.appendChild,Ae=window.Node.prototype.insertBefore,Be=window.Node.prototype.removeChild,Ce=window.Node.prototype.replaceChild,De=Object.getOwnPropertyDescriptor(window.Node.prototype,
"textContent"),Ee=window.Element.prototype.attachShadow,Fe=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),Ge=window.Element.prototype.getAttribute,He=window.Element.prototype.setAttribute,Ie=window.Element.prototype.removeAttribute,Je=window.Element.prototype.getAttributeNS,Ke=window.Element.prototype.setAttributeNS,Le=window.Element.prototype.removeAttributeNS,Me=window.Element.prototype.insertAdjacentElement,Ne=window.Element.prototype.insertAdjacentHTML,Oe=window.Element.prototype.prepend,
Pe=window.Element.prototype.append,Qe=window.Element.prototype.before,Re=window.Element.prototype.after,Se=window.Element.prototype.replaceWith,Te=window.Element.prototype.remove,Ue=window.HTMLElement,Ve=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),We=window.HTMLElement.prototype.insertAdjacentElement,Xe=window.HTMLElement.prototype.insertAdjacentHTML;var Ye=new Set;"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ").forEach(function(a){return Ye.add(a)});function Ze(a){var b=Ye.has(a);a=/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(a);return!b&&a}var $e=document.contains?document.contains.bind(document):document.documentElement.contains.bind(document.documentElement);
function T(a){var b=a.isConnected;if(void 0!==b)return b;if($e(a))return!0;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}function af(a){var b=a.children;if(b)return Array.prototype.slice.call(b);b=[];for(a=a.firstChild;a;a=a.nextSibling)a.nodeType===Node.ELEMENT_NODE&&b.push(a);return b}
function bf(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}
function cf(a,b,c){for(var d=a;d;){if(d.nodeType===Node.ELEMENT_NODE){var e=d;b(e);var f=e.localName;if("link"===f&&"import"===e.getAttribute("rel")){d=e.import;void 0===c&&(c=new Set);if(d instanceof Node&&!c.has(d))for(c.add(d),d=d.firstChild;d;d=d.nextSibling)cf(d,b,c);d=bf(a,e);continue}else if("template"===f){d=bf(a,e);continue}if(e=e.__CE_shadowRoot)for(e=e.firstChild;e;e=e.nextSibling)cf(e,b,c)}d=d.firstChild?d.firstChild:bf(a,d)}}function U(a,b,c){a[b]=c};function df(a){var b=document;this.b=a;this.a=b;this.P=void 0;ef(this.b,this.a);"loading"===this.a.readyState&&(this.P=new MutationObserver(this.c.bind(this)),this.P.observe(this.a,{childList:!0,subtree:!0}))}function ff(a){a.P&&a.P.disconnect()}df.prototype.c=function(a){var b=this.a.readyState;"interactive"!==b&&"complete"!==b||ff(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,d=0;d<c.length;d++)ef(this.b,c[d])};function gf(){var a=this;this.a=this.w=void 0;this.b=new Promise(function(b){a.a=b;a.w&&b(a.w)})}gf.prototype.resolve=function(a){if(this.w)throw Error("Already resolved.");this.w=a;this.a&&this.a(a)};function V(a){this.f=new Map;this.u=new Map;this.ta=new Map;this.U=!1;this.b=a;this.ja=new Map;this.c=function(b){return b()};this.a=!1;this.F=[];this.va=a.f?new df(a):void 0}w=V.prototype;w.Qa=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructor getters must be functions.");hf(this,a);this.f.set(a,b);this.F.push(a);this.a||(this.a=!0,this.c(function(){return jf(c)}))};
w.define=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");hf(this,a);kf(this,a,b);this.F.push(a);this.a||(this.a=!0,this.c(function(){return jf(c)}))};function hf(a,b){if(!Ze(b))throw new SyntaxError("The element name '"+b+"' is not valid.");if(lf(a,b))throw Error("A custom element with name '"+b+"' has already been defined.");if(a.U)throw Error("A custom element is already being defined.");}
function kf(a,b,c){a.U=!0;var d;try{var e=function(m){var q=f[m];if(void 0!==q&&!(q instanceof Function))throw Error("The '"+m+"' callback must be a function.");return q},f=c.prototype;if(!(f instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var g=e("connectedCallback");var h=e("disconnectedCallback");var k=e("adoptedCallback");var l=(d=e("attributeChangedCallback"))&&c.observedAttributes||[]}catch(m){throw m;}finally{a.U=!1}c={localName:b,constructorFunction:c,
connectedCallback:g,disconnectedCallback:h,adoptedCallback:k,attributeChangedCallback:d,observedAttributes:l,constructionStack:[]};a.u.set(b,c);a.ta.set(c.constructorFunction,c);return c}w.upgrade=function(a){ef(this.b,a)};
function jf(a){if(!1!==a.a){a.a=!1;for(var b=[],c=a.F,d=new Map,e=0;e<c.length;e++)d.set(c[e],[]);ef(a.b,document,{upgrade:function(k){if(void 0===k.__CE_state){var l=k.localName,m=d.get(l);m?m.push(k):a.u.has(l)&&b.push(k)}}});for(e=0;e<b.length;e++)mf(a.b,b[e]);for(e=0;e<c.length;e++){for(var f=c[e],g=d.get(f),h=0;h<g.length;h++)mf(a.b,g[h]);(f=a.ja.get(f))&&f.resolve(void 0)}c.length=0}}w.get=function(a){if(a=lf(this,a))return a.constructorFunction};
w.whenDefined=function(a){if(!Ze(a))return Promise.reject(new SyntaxError("'"+a+"' is not a valid custom element name."));var b=this.ja.get(a);if(b)return b.b;b=new gf;this.ja.set(a,b);var c=this.u.has(a)||this.f.has(a);a=-1===this.F.indexOf(a);c&&a&&b.resolve(void 0);return b.b};w.polyfillWrapFlushCallback=function(a){this.va&&ff(this.va);var b=this.c;this.c=function(c){return a(function(){return b(c)})}};
function lf(a,b){var c=a.u.get(b);if(c)return c;if(c=a.f.get(b)){a.f.delete(b);try{return kf(a,b,c())}catch(d){nf(d)}}}window.CustomElementRegistry=V;V.prototype.define=V.prototype.define;V.prototype.upgrade=V.prototype.upgrade;V.prototype.get=V.prototype.get;V.prototype.whenDefined=V.prototype.whenDefined;V.prototype.polyfillDefineLazy=V.prototype.Qa;V.prototype.polyfillWrapFlushCallback=V.prototype.polyfillWrapFlushCallback;function of(){var a=pf&&pf.noDocumentConstructionObserver,b=pf&&pf.shadyDomFastWalk;this.b=[];this.c=[];this.a=!1;this.shadyDomFastWalk=b;this.f=!a}function qf(a,b,c,d){var e=window.ShadyDOM;if(a.shadyDomFastWalk&&e&&e.inUse){if(b.nodeType===Node.ELEMENT_NODE&&c(b),b.querySelectorAll)for(a=e.nativeMethods.querySelectorAll.call(b,"*"),b=0;b<a.length;b++)c(a[b])}else cf(b,c,d)}function rf(a,b){a.a=!0;a.b.push(b)}function sf(a,b){a.a=!0;a.c.push(b)}
function tf(a,b){a.a&&qf(a,b,function(c){return uf(a,c)})}function uf(a,b){if(a.a&&!b.__CE_patched){b.__CE_patched=!0;for(var c=0;c<a.b.length;c++)a.b[c](b);for(c=0;c<a.c.length;c++)a.c[c](b)}}function vf(a,b){var c=[];qf(a,b,function(e){return c.push(e)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state?a.connectedCallback(d):mf(a,d)}}function wf(a,b){var c=[];qf(a,b,function(e){return c.push(e)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state&&a.disconnectedCallback(d)}}
function ef(a,b,c){c=void 0===c?{}:c;var d=c.Za,e=c.upgrade||function(g){return mf(a,g)},f=[];qf(a,b,function(g){a.a&&uf(a,g);if("link"===g.localName&&"import"===g.getAttribute("rel")){var h=g.import;h instanceof Node&&(h.__CE_isImportDocument=!0,h.__CE_registry=document.__CE_registry);h&&"complete"===h.readyState?h.__CE_documentLoadHandled=!0:g.addEventListener("load",function(){var k=g.import;if(!k.__CE_documentLoadHandled){k.__CE_documentLoadHandled=!0;var l=new Set;d&&(d.forEach(function(m){return l.add(m)}),
l.delete(k));ef(a,k,{Za:l,upgrade:e})}})}else f.push(g)},d);for(b=0;b<f.length;b++)e(f[b])}
function mf(a,b){try{var c=b.ownerDocument,d=c.__CE_registry;var e=d&&(c.defaultView||c.__CE_isImportDocument)?lf(d,b.localName):void 0;if(e&&void 0===b.__CE_state){e.constructionStack.push(b);try{try{if(new e.constructorFunction!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{e.constructionStack.pop()}}catch(k){throw b.__CE_state=2,k;}b.__CE_state=1;b.__CE_definition=e;if(e.attributeChangedCallback&&b.hasAttributes()){var f=e.observedAttributes;
for(e=0;e<f.length;e++){var g=f[e],h=b.getAttribute(g);null!==h&&a.attributeChangedCallback(b,g,null,h,null)}}T(b)&&a.connectedCallback(b)}}catch(k){nf(k)}}of.prototype.connectedCallback=function(a){var b=a.__CE_definition;if(b.connectedCallback)try{b.connectedCallback.call(a)}catch(c){nf(c)}};of.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;if(b.disconnectedCallback)try{b.disconnectedCallback.call(a)}catch(c){nf(c)}};
of.prototype.attributeChangedCallback=function(a,b,c,d,e){var f=a.__CE_definition;if(f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(b))try{f.attributeChangedCallback.call(a,b,c,d,e)}catch(g){nf(g)}};
function xf(a,b,c,d){var e=b.__CE_registry;if(e&&(null===d||"http://www.w3.org/1999/xhtml"===d)&&(e=lf(e,c)))try{var f=new e.constructorFunction;if(void 0===f.__CE_state||void 0===f.__CE_definition)throw Error("Failed to construct '"+c+"': The returned value was not constructed with the HTMLElement constructor.");if("http://www.w3.org/1999/xhtml"!==f.namespaceURI)throw Error("Failed to construct '"+c+"': The constructed element's namespace must be the HTML namespace.");if(f.hasAttributes())throw Error("Failed to construct '"+
c+"': The constructed element must not have any attributes.");if(null!==f.firstChild)throw Error("Failed to construct '"+c+"': The constructed element must not have any children.");if(null!==f.parentNode)throw Error("Failed to construct '"+c+"': The constructed element must not have a parent node.");if(f.ownerDocument!==b)throw Error("Failed to construct '"+c+"': The constructed element's owner document is incorrect.");if(f.localName!==c)throw Error("Failed to construct '"+c+"': The constructed element's local name is incorrect.");
return f}catch(g){return nf(g),b=null===d?re.call(b,c):se.call(b,d,c),Object.setPrototypeOf(b,HTMLUnknownElement.prototype),b.__CE_state=2,b.__CE_definition=void 0,uf(a,b),b}b=null===d?re.call(b,c):se.call(b,d,c);uf(a,b);return b}
function nf(a){var b=a.message,c=a.sourceURL||a.fileName||"",d=a.line||a.lineNumber||0,e=a.column||a.columnNumber||0,f=void 0;void 0===ErrorEvent.prototype.initErrorEvent?f=new ErrorEvent("error",{cancelable:!0,message:b,filename:c,lineno:d,colno:e,error:a}):(f=document.createEvent("ErrorEvent"),f.initErrorEvent("error",!1,!0,b,c,d),f.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{configurable:!0,get:function(){return!0}})});void 0===f.error&&Object.defineProperty(f,"error",
{configurable:!0,enumerable:!0,get:function(){return a}});window.dispatchEvent(f);f.defaultPrevented||console.error(a)};var yf=new function(){};function zf(a){window.HTMLElement=function(){function b(){var c=this.constructor;var d=document.__CE_registry.ta.get(c);if(!d)throw Error("Failed to construct a custom element: The constructor was not registered with `customElements`.");var e=d.constructionStack;if(0===e.length)return e=re.call(document,d.localName),Object.setPrototypeOf(e,c.prototype),e.__CE_state=1,e.__CE_definition=d,uf(a,e),e;var f=e.length-1,g=e[f];if(g===yf)throw Error("Failed to construct '"+d.localName+"': This element was already constructed.");
e[f]=yf;Object.setPrototypeOf(g,c.prototype);uf(a,g);return g}b.prototype=Ue.prototype;Object.defineProperty(b.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});return b}()};function Af(a,b,c){function d(e){return function(f){for(var g=[],h=0;h<arguments.length;++h)g[h]=arguments[h];h=[];for(var k=[],l=0;l<g.length;l++){var m=g[l];m instanceof Element&&T(m)&&k.push(m);if(m instanceof DocumentFragment)for(m=m.firstChild;m;m=m.nextSibling)h.push(m);else h.push(m)}e.apply(this,g);for(g=0;g<k.length;g++)wf(a,k[g]);if(T(this))for(g=0;g<h.length;g++)k=h[g],k instanceof Element&&vf(a,k)}}void 0!==c.prepend&&U(b,"prepend",d(c.prepend));void 0!==c.append&&U(b,"append",d(c.append))}
;function Bf(a){U(Document.prototype,"createElement",function(b){return xf(a,this,b,null)});U(Document.prototype,"importNode",function(b,c){b=te.call(this,b,!!c);this.__CE_registry?ef(a,b):tf(a,b);return b});U(Document.prototype,"createElementNS",function(b,c){return xf(a,this,c,b)});Af(a,Document.prototype,{prepend:ue,append:ve})};function Cf(a){function b(c,d){Object.defineProperty(c,"textContent",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(e){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,e);else{var f=void 0;if(this.firstChild){var g=this.childNodes,h=g.length;if(0<h&&T(this)){f=Array(h);for(var k=0;k<h;k++)f[k]=g[k]}}d.set.call(this,e);if(f)for(e=0;e<f.length;e++)wf(a,f[e])}}})}U(Node.prototype,"insertBefore",function(c,d){if(c instanceof DocumentFragment){var e=af(c);c=Ae.call(this,c,d);if(T(this))for(d=
0;d<e.length;d++)vf(a,e[d]);return c}e=c instanceof Element&&T(c);d=Ae.call(this,c,d);e&&wf(a,c);T(this)&&vf(a,c);return d});U(Node.prototype,"appendChild",function(c){if(c instanceof DocumentFragment){var d=af(c);c=ze.call(this,c);if(T(this))for(var e=0;e<d.length;e++)vf(a,d[e]);return c}d=c instanceof Element&&T(c);e=ze.call(this,c);d&&wf(a,c);T(this)&&vf(a,c);return e});U(Node.prototype,"cloneNode",function(c){c=ye.call(this,!!c);this.ownerDocument.__CE_registry?ef(a,c):tf(a,c);return c});U(Node.prototype,
"removeChild",function(c){var d=c instanceof Element&&T(c),e=Be.call(this,c);d&&wf(a,c);return e});U(Node.prototype,"replaceChild",function(c,d){if(c instanceof DocumentFragment){var e=af(c);c=Ce.call(this,c,d);if(T(this))for(wf(a,d),d=0;d<e.length;d++)vf(a,e[d]);return c}e=c instanceof Element&&T(c);var f=Ce.call(this,c,d),g=T(this);g&&wf(a,d);e&&wf(a,c);g&&vf(a,c);return f});De&&De.get?b(Node.prototype,De):rf(a,function(c){b(c,{enumerable:!0,configurable:!0,get:function(){for(var d=[],e=this.firstChild;e;e=
e.nextSibling)e.nodeType!==Node.COMMENT_NODE&&d.push(e.textContent);return d.join("")},set:function(d){for(;this.firstChild;)Be.call(this,this.firstChild);null!=d&&""!==d&&ze.call(this,document.createTextNode(d))}})})};function Df(a){function b(d){return function(e){for(var f=[],g=0;g<arguments.length;++g)f[g]=arguments[g];g=[];for(var h=[],k=0;k<f.length;k++){var l=f[k];l instanceof Element&&T(l)&&h.push(l);if(l instanceof DocumentFragment)for(l=l.firstChild;l;l=l.nextSibling)g.push(l);else g.push(l)}d.apply(this,f);for(f=0;f<h.length;f++)wf(a,h[f]);if(T(this))for(f=0;f<g.length;f++)h=g[f],h instanceof Element&&vf(a,h)}}var c=Element.prototype;void 0!==Qe&&U(c,"before",b(Qe));void 0!==Re&&U(c,"after",b(Re));void 0!==
Se&&U(c,"replaceWith",function(d){for(var e=[],f=0;f<arguments.length;++f)e[f]=arguments[f];f=[];for(var g=[],h=0;h<e.length;h++){var k=e[h];k instanceof Element&&T(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)f.push(k);else f.push(k)}h=T(this);Se.apply(this,e);for(e=0;e<g.length;e++)wf(a,g[e]);if(h)for(wf(a,this),e=0;e<f.length;e++)g=f[e],g instanceof Element&&vf(a,g)});void 0!==Te&&U(c,"remove",function(){var d=T(this);Te.call(this);d&&wf(a,this)})};function Ef(a){function b(e,f){Object.defineProperty(e,"innerHTML",{enumerable:f.enumerable,configurable:!0,get:f.get,set:function(g){var h=this,k=void 0;T(this)&&(k=[],qf(a,this,function(q){q!==h&&k.push(q)}));f.set.call(this,g);if(k)for(var l=0;l<k.length;l++){var m=k[l];1===m.__CE_state&&a.disconnectedCallback(m)}this.ownerDocument.__CE_registry?ef(a,this):tf(a,this);return g}})}function c(e,f){U(e,"insertAdjacentElement",function(g,h){var k=T(h);g=f.call(this,g,h);k&&wf(a,h);T(g)&&vf(a,h);return g})}
function d(e,f){function g(h,k){for(var l=[];h!==k;h=h.nextSibling)l.push(h);for(k=0;k<l.length;k++)ef(a,l[k])}U(e,"insertAdjacentHTML",function(h,k){h=h.toLowerCase();if("beforebegin"===h){var l=this.previousSibling;f.call(this,h,k);g(l||this.parentNode.firstChild,this)}else if("afterbegin"===h)l=this.firstChild,f.call(this,h,k),g(this.firstChild,l);else if("beforeend"===h)l=this.lastChild,f.call(this,h,k),g(l||this.firstChild,null);else if("afterend"===h)l=this.nextSibling,f.call(this,h,k),g(this.nextSibling,
l);else throw new SyntaxError("The value provided ("+String(h)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");})}Ee&&U(Element.prototype,"attachShadow",function(e){e=Ee.call(this,e);if(a.a&&!e.__CE_patched){e.__CE_patched=!0;for(var f=0;f<a.b.length;f++)a.b[f](e)}return this.__CE_shadowRoot=e});Fe&&Fe.get?b(Element.prototype,Fe):Ve&&Ve.get?b(HTMLElement.prototype,Ve):sf(a,function(e){b(e,{enumerable:!0,configurable:!0,get:function(){return ye.call(this,!0).innerHTML},
set:function(f){var g="template"===this.localName,h=g?this.content:this,k=se.call(document,this.namespaceURI,this.localName);for(k.innerHTML=f;0<h.childNodes.length;)Be.call(h,h.childNodes[0]);for(f=g?k.content:k;0<f.childNodes.length;)ze.call(h,f.childNodes[0])}})});U(Element.prototype,"setAttribute",function(e,f){if(1!==this.__CE_state)return He.call(this,e,f);var g=Ge.call(this,e);He.call(this,e,f);f=Ge.call(this,e);a.attributeChangedCallback(this,e,g,f,null)});U(Element.prototype,"setAttributeNS",
function(e,f,g){if(1!==this.__CE_state)return Ke.call(this,e,f,g);var h=Je.call(this,e,f);Ke.call(this,e,f,g);g=Je.call(this,e,f);a.attributeChangedCallback(this,f,h,g,e)});U(Element.prototype,"removeAttribute",function(e){if(1!==this.__CE_state)return Ie.call(this,e);var f=Ge.call(this,e);Ie.call(this,e);null!==f&&a.attributeChangedCallback(this,e,f,null,null)});U(Element.prototype,"removeAttributeNS",function(e,f){if(1!==this.__CE_state)return Le.call(this,e,f);var g=Je.call(this,e,f);Le.call(this,
e,f);var h=Je.call(this,e,f);g!==h&&a.attributeChangedCallback(this,f,g,h,e)});We?c(HTMLElement.prototype,We):Me&&c(Element.prototype,Me);Xe?d(HTMLElement.prototype,Xe):Ne&&d(Element.prototype,Ne);Af(a,Element.prototype,{prepend:Oe,append:Pe});Df(a)};var pf=window.customElements;function Ff(){var a=new of;zf(a);Bf(a);Af(a,DocumentFragment.prototype,{prepend:we,append:xe});Cf(a);Ef(a);a=new V(a);document.__CE_registry=a;Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:a})}pf&&!pf.forcePolyfill&&"function"==typeof pf.define&&"function"==typeof pf.get||Ff();window.__CE_installPolyfill=Ff;function Gf(){this.end=this.start=0;this.rules=this.parent=this.previous=null;this.cssText=this.parsedCssText="";this.atRule=!1;this.type=0;this.parsedSelector=this.selector=this.keyframesName=""}
function Hf(a){var b=a=a.replace(If,"").replace(Jf,""),c=new Gf;c.start=0;c.end=b.length;for(var d=c,e=0,f=b.length;e<f;e++)if("{"===b[e]){d.rules||(d.rules=[]);var g=d,h=g.rules[g.rules.length-1]||null;d=new Gf;d.start=e+1;d.parent=g;d.previous=h;g.rules.push(d)}else"}"===b[e]&&(d.end=e+1,d=d.parent||c);return Kf(c,a)}
function Kf(a,b){var c=b.substring(a.start,a.end-1);a.parsedCssText=a.cssText=c.trim();a.parent&&(c=b.substring(a.previous?a.previous.end:a.parent.start,a.start-1),c=Lf(c),c=c.replace(Mf," "),c=c.substring(c.lastIndexOf(";")+1),c=a.parsedSelector=a.selector=c.trim(),a.atRule=0===c.indexOf("@"),a.atRule?0===c.indexOf("@media")?a.type=Nf:c.match(Of)&&(a.type=Pf,a.keyframesName=a.selector.split(Mf).pop()):a.type=0===c.indexOf("--")?Qf:Rf);if(c=a.rules)for(var d=0,e=c.length,f=void 0;d<e&&(f=c[d]);d++)Kf(f,
b);return a}function Lf(a){return a.replace(/\\([0-9a-f]{1,6})\s/gi,function(b,c){b=c;for(c=6-b.length;c--;)b="0"+b;return"\\"+b})}
function Sf(a,b,c){c=void 0===c?"":c;var d="";if(a.cssText||a.rules){var e=a.rules,f;if(f=e)f=e[0],f=!(f&&f.selector&&0===f.selector.indexOf("--"));if(f){f=0;for(var g=e.length,h=void 0;f<g&&(h=e[f]);f++)d=Sf(h,b,d)}else b?b=a.cssText:(b=a.cssText,b=b.replace(Tf,"").replace(Uf,""),b=b.replace(Vf,"").replace(Wf,"")),(d=b.trim())&&(d="  "+d+"\n")}d&&(a.selector&&(c+=a.selector+" {\n"),c+=d,a.selector&&(c+="}\n\n"));return c}
var Rf=1,Pf=7,Nf=4,Qf=1E3,If=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,Jf=/@import[^;]*;/gim,Tf=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,Uf=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,Vf=/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,Wf=/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,Of=/^@[^\s]*keyframes/,Mf=/\s+/g;var W=!(window.ShadyDOM&&window.ShadyDOM.inUse),Xf;function Yf(a){Xf=a&&a.shimcssproperties?!1:W||!(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)||!window.CSS||!CSS.supports||!CSS.supports("box-shadow","0 0 0 var(--foo)"))}var Zf;window.ShadyCSS&&void 0!==window.ShadyCSS.cssBuild&&(Zf=window.ShadyCSS.cssBuild);var $f=!(!window.ShadyCSS||!window.ShadyCSS.disableRuntime);
window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?Xf=window.ShadyCSS.nativeCss:window.ShadyCSS?(Yf(window.ShadyCSS),window.ShadyCSS=void 0):Yf(window.WebComponents&&window.WebComponents.flags);var Y=Xf;var ag=/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,bg=/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,dg=/(--[\w-]+)\s*([:,;)]|$)/gi,eg=/(animation\s*:)|(animation-name\s*:)/,fg=/@media\s(.*)/,gg=/\{[^}]*\}/g;var hg=new Set;function ig(a,b){if(!a)return"";"string"===typeof a&&(a=Hf(a));b&&jg(a,b);return Sf(a,Y)}function kg(a){!a.__cssRules&&a.textContent&&(a.__cssRules=Hf(a.textContent));return a.__cssRules||null}function lg(a){return!!a.parent&&a.parent.type===Pf}function jg(a,b,c,d){if(a){var e=!1,f=a.type;if(d&&f===Nf){var g=a.selector.match(fg);g&&(window.matchMedia(g[1]).matches||(e=!0))}f===Rf?b(a):c&&f===Pf?c(a):f===Qf&&(e=!0);if((a=a.rules)&&!e)for(e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++)jg(g,b,c,d)}}
function mg(a,b,c,d){var e=document.createElement("style");b&&e.setAttribute("scope",b);e.textContent=a;ng(e,c,d);return e}var og=null;function pg(a){a=document.createComment(" Shady DOM styles for "+a+" ");var b=document.head;b.insertBefore(a,(og?og.nextSibling:null)||b.firstChild);return og=a}function ng(a,b,c){b=b||document.head;b.insertBefore(a,c&&c.nextSibling||b.firstChild);og?a.compareDocumentPosition(og)===Node.DOCUMENT_POSITION_PRECEDING&&(og=a):og=a}
function qg(a,b){for(var c=0,d=a.length;b<d;b++)if("("===a[b])c++;else if(")"===a[b]&&0===--c)return b;return-1}function rg(a,b){var c=a.indexOf("var(");if(-1===c)return b(a,"","","");var d=qg(a,c+3),e=a.substring(c+4,d);c=a.substring(0,c);a=rg(a.substring(d+1),b);d=e.indexOf(",");return-1===d?b(c,e.trim(),"",a):b(c,e.substring(0,d).trim(),e.substring(d+1).trim(),a)}function sg(a,b){W?a.setAttribute("class",b):window.ShadyDOM.nativeMethods.setAttribute.call(a,"class",b)}
var tg=window.ShadyDOM&&window.ShadyDOM.wrap||function(a){return a};function ug(a){var b=a.localName,c="";b?-1<b.indexOf("-")||(c=b,b=a.getAttribute&&a.getAttribute("is")||""):(b=a.is,c=a.extends);return{is:b,Y:c}}function vg(a){for(var b=[],c="",d=0;0<=d&&d<a.length;d++)if("("===a[d]){var e=qg(a,d);c+=a.slice(d,e+1);d=e}else","===a[d]?(b.push(c),c=""):c+=a[d];c&&b.push(c);return b}
function wg(a){if(void 0!==Zf)return Zf;if(void 0===a.__cssBuild){var b=a.getAttribute("css-build");if(b)a.__cssBuild=b;else{a:{b="template"===a.localName?a.content.firstChild:a.firstChild;if(b instanceof Comment&&(b=b.textContent.trim().split(":"),"css-build"===b[0])){b=b[1];break a}b=""}if(""!==b){var c="template"===a.localName?a.content.firstChild:a.firstChild;c.parentNode.removeChild(c)}a.__cssBuild=b}}return a.__cssBuild||""}
function xg(a){a=void 0===a?"":a;return""!==a&&Y?W?"shadow"===a:"shady"===a:!1};function yg(){}function zg(a,b){Ag(Bg,a,function(c){Cg(c,b||"")})}function Ag(a,b,c){b.nodeType===Node.ELEMENT_NODE&&c(b);var d;"template"===b.localName?d=(b.content||b._content||b).childNodes:d=b.children||b.childNodes;if(d)for(b=0;b<d.length;b++)Ag(a,d[b],c)}
function Cg(a,b,c){if(b)if(a.classList)c?(a.classList.remove("style-scope"),a.classList.remove(b)):(a.classList.add("style-scope"),a.classList.add(b));else if(a.getAttribute){var d=a.getAttribute("class");c?d&&(b=d.replace("style-scope","").replace(b,""),sg(a,b)):sg(a,(d?d+" ":"")+"style-scope "+b)}}function Dg(a,b,c){Ag(Bg,a,function(d){Cg(d,b,!0);Cg(d,c)})}function Eg(a,b){Ag(Bg,a,function(c){Cg(c,b||"",!0)})}
function Fg(a,b,c,d,e){var f=Bg;e=void 0===e?"":e;""===e&&(W||"shady"===(void 0===d?"":d)?e=ig(b,c):(a=ug(a),e=Gg(f,b,a.is,a.Y,c)+"\n\n"));return e.trim()}function Gg(a,b,c,d,e){var f=Hg(c,d);c=c?"."+c:"";return ig(b,function(g){g.c||(g.selector=g.B=Ig(a,g,a.b,c,f),g.c=!0);e&&e(g,c,f)})}function Hg(a,b){return b?"[is="+a+"]":a}
function Ig(a,b,c,d,e){var f=vg(b.selector);if(!lg(b)){b=0;for(var g=f.length,h=void 0;b<g&&(h=f[b]);b++)f[b]=c.call(a,h,d,e)}return f.filter(function(k){return!!k}).join(",")}function Jg(a){return a.replace(Kg,function(b,c,d){-1<d.indexOf("+")?d=d.replace(/\+/g,"___"):-1<d.indexOf("___")&&(d=d.replace(/___/g,"+"));return":"+c+"("+d+")"})}
function Lg(a){for(var b=[],c;c=a.match(Mg);){var d=c.index,e=qg(a,d);if(-1===e)throw Error(c.input+" selector missing ')'");c=a.slice(d,e+1);a=a.replace(c,"\ue000");b.push(c)}return{oa:a,matches:b}}function Ng(a,b){var c=a.split("\ue000");return b.reduce(function(d,e,f){return d+e+c[f+1]},c[0])}
yg.prototype.b=function(a,b,c){var d=!1;a=a.trim();var e=Kg.test(a);e&&(a=a.replace(Kg,function(h,k,l){return":"+k+"("+l.replace(/\s/g,"")+")"}),a=Jg(a));var f=Mg.test(a);if(f){var g=Lg(a);a=g.oa;g=g.matches}a=a.replace(Og,":host $1");a=a.replace(Pg,function(h,k,l){d||(h=Qg(l,k,b,c),d=d||h.stop,k=h.Ga,l=h.value);return k+l});f&&(a=Ng(a,g));e&&(a=Jg(a));return a=a.replace(Rg,function(h,k,l,m){return'[dir="'+l+'"] '+k+m+", "+k+'[dir="'+l+'"]'+m})};
function Qg(a,b,c,d){var e=a.indexOf("::slotted");0<=a.indexOf(":host")?a=Sg(a,d):0!==e&&(a=c?Tg(a,c):a);c=!1;0<=e&&(b="",c=!0);if(c){var f=!0;c&&(a=a.replace(Ug,function(g,h){return" > "+h}))}return{value:a,Ga:b,stop:f}}function Tg(a,b){a=a.split(/(\[.+?\])/);for(var c=[],d=0;d<a.length;d++)if(1===d%2)c.push(a[d]);else{var e=a[d];if(""!==e||d!==a.length-1)e=e.split(":"),e[0]+=b,c.push(e.join(":"))}return c.join("")}
function Sg(a,b){var c=a.match(Vg);return(c=c&&c[2].trim()||"")?c[0].match(Wg)?a.replace(Vg,function(d,e,f){return b+f}):c.split(Wg)[0]===b?c:"should_not_match":a.replace(":host",b)}function Xg(a){":root"===a.selector&&(a.selector="html")}yg.prototype.c=function(a){return a.match(":host")?"":a.match("::slotted")?this.b(a,":not(.style-scope)"):Tg(a.trim(),":not(.style-scope)")};ea.Object.defineProperties(yg.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"style-scope"}}});
var Kg=/:(nth[-\w]+)\(([^)]+)\)/,Pg=/(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g,Wg=/[[.:#*]/,Og=/^(::slotted)/,Vg=/(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Ug=/(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Rg=/(.*):dir\((?:(ltr|rtl))\)(.*)/,Mg=/:(?:matches|any|-(?:webkit|moz)-any)/,Bg=new yg;function Yg(a,b,c,d,e){this.J=a||null;this.b=b||null;this.ka=c||[];this.H=null;this.cssBuild=e||"";this.Y=d||"";this.a=this.I=this.M=null}function Zg(a){return a?a.__styleInfo:null}function $g(a,b){return a.__styleInfo=b}Yg.prototype.c=function(){return this.J};Yg.prototype._getStyleRules=Yg.prototype.c;function ah(a){var b=this.matches||this.matchesSelector||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector;return b&&b.call(this,a)}var bh=/:host\s*>\s*/,ch=navigator.userAgent.match("Trident");function dh(){}function eh(a){var b={},c=[],d=0;jg(a,function(f){fh(f);f.index=d++;f=f.A.cssText;for(var g;g=dg.exec(f);){var h=g[1];":"!==g[2]&&(b[h]=!0)}},function(f){c.push(f)});a.b=c;a=[];for(var e in b)a.push(e);return a}
function fh(a){if(!a.A){var b={},c={};gh(a,c)&&(b.L=c,a.rules=null);b.cssText=a.parsedCssText.replace(gg,"").replace(ag,"");a.A=b}}function gh(a,b){var c=a.A;if(c){if(c.L)return Object.assign(b,c.L),!0}else{c=a.parsedCssText;for(var d;a=ag.exec(c);){d=(a[2]||a[3]).trim();if("inherit"!==d||"unset"!==d)b[a[1].trim()]=d;d=!0}return d}}
function hh(a,b,c){b&&(b=0<=b.indexOf(";")?ih(a,b,c):rg(b,function(d,e,f,g){if(!e)return d+g;(e=hh(a,c[e],c))&&"initial"!==e?"apply-shim-inherit"===e&&(e="inherit"):e=hh(a,c[f]||f,c)||f;return d+(e||"")+g}));return b&&b.trim()||""}
function ih(a,b,c){b=b.split(";");for(var d=0,e,f;d<b.length;d++)if(e=b[d]){bg.lastIndex=0;if(f=bg.exec(e))e=hh(a,c[f[1]],c);else if(f=e.indexOf(":"),-1!==f){var g=e.substring(f);g=g.trim();g=hh(a,g,c)||g;e=e.substring(0,f)+g}b[d]=e&&e.lastIndexOf(";")===e.length-1?e.slice(0,-1):e||""}return b.join(";")}
function jh(a,b){var c={},d=[];jg(a,function(e){e.A||fh(e);var f=e.B||e.parsedSelector;b&&e.A.L&&f&&ah.call(b,f)&&(gh(e,c),e=e.index,f=parseInt(e/32,10),d[f]=(d[f]||0)|1<<e%32)},null,!0);return{L:c,key:d}}
function kh(a,b,c,d){b.A||fh(b);if(b.A.L){var e=ug(a);a=e.is;e=e.Y;e=a?Hg(a,e):"html";var f=b.parsedSelector;var g=!!f.match(bh)||"html"===e&&-1<f.indexOf("html");var h=0===f.indexOf(":host")&&!g;"shady"===c&&(g=f===e+" > *."+e||-1!==f.indexOf("html"),h=!g&&0===f.indexOf(e));if(g||h)c=e,h&&(b.B||(b.B=Ig(Bg,b,Bg.b,a?"."+a:"",e)),c=b.B||e),g&&"html"===e&&(c=b.B||b.u),d({oa:c,Na:h,ab:g})}}
function lh(a,b,c){var d={},e={};jg(b,function(f){kh(a,f,c,function(g){ah.call(a._element||a,g.oa)&&(g.Na?gh(f,d):gh(f,e))})},null,!0);return{Ta:e,La:d}}
function mh(a,b,c,d){var e=ug(b),f=Hg(e.is,e.Y),g=new RegExp("(?:^|[^.#[:])"+(b.extends?"\\"+f.slice(0,-1)+"\\]":f)+"($|[.:[\\s>+~])"),h=Zg(b);e=h.J;h=h.cssBuild;var k=nh(e,d);return Fg(b,e,function(l){var m="";l.A||fh(l);l.A.cssText&&(m=ih(a,l.A.cssText,c));l.cssText=m;if(!W&&!lg(l)&&l.cssText){var q=m=l.cssText;null==l.sa&&(l.sa=eg.test(m));if(l.sa)if(null==l.ca){l.ca=[];for(var H in k)q=k[H],q=q(m),m!==q&&(m=q,l.ca.push(H))}else{for(H=0;H<l.ca.length;++H)q=k[l.ca[H]],m=q(m);q=m}l.cssText=q;l.B=
l.B||l.selector;m="."+d;H=vg(l.B);q=0;for(var E=H.length,r=void 0;q<E&&(r=H[q]);q++)H[q]=r.match(g)?r.replace(f,m):m+" "+r;l.selector=H.join(",")}},h)}function nh(a,b){a=a.b;var c={};if(!W&&a)for(var d=0,e=a[d];d<a.length;e=a[++d]){var f=e,g=b;f.f=new RegExp("\\b"+f.keyframesName+"(?!\\B|-)","g");f.a=f.keyframesName+"-"+g;f.B=f.B||f.selector;f.selector=f.B.replace(f.keyframesName,f.a);c[e.keyframesName]=oh(e)}return c}function oh(a){return function(b){return b.replace(a.f,a.a)}}
function ph(a,b){var c=qh,d=kg(a);a.textContent=ig(d,function(e){var f=e.cssText=e.parsedCssText;e.A&&e.A.cssText&&(f=f.replace(Tf,"").replace(Uf,""),e.cssText=ih(c,f,b))})}ea.Object.defineProperties(dh.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"x-scope"}}});var qh=new dh;var rh={},sh=window.customElements;if(sh&&!W&&!$f){var th=sh.define;sh.define=function(a,b,c){rh[a]||(rh[a]=pg(a));th.call(sh,a,b,c)}};function uh(){this.cache={}}uh.prototype.store=function(a,b,c,d){var e=this.cache[a]||[];e.push({L:b,styleElement:c,I:d});100<e.length&&e.shift();this.cache[a]=e};function vh(){}var wh=new RegExp(Bg.a+"\\s*([^\\s]*)");function xh(a){return(a=(a.classList&&a.classList.value?a.classList.value:a.getAttribute("class")||"").match(wh))?a[1]:""}function yh(a){var b=tg(a).getRootNode();return b===a||b===a.ownerDocument?"":(a=b.host)?ug(a).is:""}
function zh(a){for(var b=0;b<a.length;b++){var c=a[b];if(c.target!==document.documentElement&&c.target!==document.head)for(var d=0;d<c.addedNodes.length;d++){var e=c.addedNodes[d];if(e.nodeType===Node.ELEMENT_NODE){var f=e.getRootNode(),g=xh(e);if(g&&f===e.ownerDocument&&("style"!==e.localName&&"template"!==e.localName||""===wg(e)))Eg(e,g);else if(f instanceof ShadowRoot)for(f=yh(e),f!==g&&Dg(e,g,f),e=window.ShadyDOM.nativeMethods.querySelectorAll.call(e,":not(."+Bg.a+")"),g=0;g<e.length;g++){f=e[g];
var h=yh(f);h&&Cg(f,h)}}}}}
if(!(W||window.ShadyDOM&&window.ShadyDOM.handlesDynamicScoping)){var Ah=new MutationObserver(zh),Bh=function(a){Ah.observe(a,{childList:!0,subtree:!0})};if(window.customElements&&!window.customElements.polyfillWrapFlushCallback)Bh(document);else{var Ch=function(){Bh(document.body)};window.HTMLImports?window.HTMLImports.whenReady(Ch):requestAnimationFrame(function(){if("loading"===document.readyState){var a=function(){Ch();document.removeEventListener("readystatechange",a)};document.addEventListener("readystatechange",
a)}else Ch()})}vh=function(){zh(Ah.takeRecords())}};var Dh={};var Eh=Promise.resolve();function Fh(a){if(a=Dh[a])a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a._applyShimValidatingVersion=a._applyShimValidatingVersion||0,a._applyShimNextVersion=(a._applyShimNextVersion||0)+1}function Gh(a){return a._applyShimCurrentVersion===a._applyShimNextVersion}function Hh(a){a._applyShimValidatingVersion=a._applyShimNextVersion;a._validating||(a._validating=!0,Eh.then(function(){a._applyShimCurrentVersion=a._applyShimNextVersion;a._validating=!1}))};var Ih={},Jh=new uh;function Z(){this.F={};this.c=document.documentElement;var a=new Gf;a.rules=[];this.f=$g(this.c,new Yg(a));this.u=!1;this.a=this.b=null}w=Z.prototype;w.flush=function(){vh()};w.Ja=function(a){return kg(a)};w.Xa=function(a){return ig(a)};w.prepareTemplate=function(a,b,c){this.prepareTemplateDom(a,b);this.prepareTemplateStyles(a,b,c)};
w.prepareTemplateStyles=function(a,b,c){if(!a._prepared&&!$f){W||rh[b]||(rh[b]=pg(b));a._prepared=!0;a.name=b;a.extends=c;Dh[b]=a;var d=wg(a),e=xg(d);c={is:b,extends:c};for(var f=[],g=a.content.querySelectorAll("style"),h=0;h<g.length;h++){var k=g[h];if(k.hasAttribute("shady-unscoped")){if(!W){var l=k.textContent;hg.has(l)||(hg.add(l),l=k.cloneNode(!0),document.head.appendChild(l));k.parentNode.removeChild(k)}}else f.push(k.textContent),k.parentNode.removeChild(k)}f=f.join("").trim()+(Ih[b]||"");
Kh(this);if(!e){if(g=!d)g=bg.test(f)||ag.test(f),bg.lastIndex=0,ag.lastIndex=0;h=Hf(f);g&&Y&&this.b&&this.b.transformRules(h,b);a._styleAst=h}g=[];Y||(g=eh(a._styleAst));if(!g.length||Y)h=W?a.content:null,b=rh[b]||null,d=Fg(c,a._styleAst,null,d,e?f:""),d=d.length?mg(d,c.is,h,b):null,a._style=d;a.a=g}};w.Ra=function(a,b){Ih[b]=a.join(" ")};w.prepareTemplateDom=function(a,b){if(!$f){var c=wg(a);W||"shady"===c||a._domPrepared||(a._domPrepared=!0,zg(a.content,b))}};
function Lh(a){var b=ug(a),c=b.is;b=b.Y;var d=rh[c]||null,e=Dh[c];if(e){c=e._styleAst;var f=e.a;e=wg(e);b=new Yg(c,d,f,b,e);$g(a,b);return b}}function Mh(a){!a.a&&window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface&&(a.a=window.ShadyCSS.CustomStyleInterface,a.a.transformCallback=function(b){a.xa(b)},a.a.validateCallback=function(){requestAnimationFrame(function(){(a.a.enqueued||a.u)&&a.flushCustomStyles()})})}
function Kh(a){if(!a.b&&window.ShadyCSS&&window.ShadyCSS.ApplyShim){a.b=window.ShadyCSS.ApplyShim;a.b.invalidCallback=Fh;var b=!0}else b=!1;Mh(a);return b}
w.flushCustomStyles=function(){if(!$f){var a=Kh(this);if(this.a){var b=this.a.processStyles();if((a||this.a.enqueued)&&!xg(this.f.cssBuild)){if(Y){if(!this.f.cssBuild)for(a=0;a<b.length;a++){var c=this.a.getStyleForCustomStyle(b[a]);if(c&&Y&&this.b){var d=kg(c);Kh(this);this.b.transformRules(d);c.textContent=ig(d)}}}else{Nh(this,b);Oh(this,this.c,this.f);for(a=0;a<b.length;a++)(c=this.a.getStyleForCustomStyle(b[a]))&&ph(c,this.f.M);this.u&&this.styleDocument()}this.a.enqueued=!1}}}};
function Nh(a,b){b=b.map(function(c){return a.a.getStyleForCustomStyle(c)}).filter(function(c){return!!c});b.sort(function(c,d){c=d.compareDocumentPosition(c);return c&Node.DOCUMENT_POSITION_FOLLOWING?1:c&Node.DOCUMENT_POSITION_PRECEDING?-1:0});a.f.J.rules=b.map(function(c){return kg(c)})}
w.styleElement=function(a,b){if($f){if(b){Zg(a)||$g(a,new Yg(null));var c=Zg(a);c.H=c.H||{};Object.assign(c.H,b);Ph(this,a,c)}}else if(c=Zg(a)||Lh(a))if(a!==this.c&&(this.u=!0),b&&(c.H=c.H||{},Object.assign(c.H,b)),Y)Ph(this,a,c);else if(this.flush(),Oh(this,a,c),c.ka&&c.ka.length){b=ug(a).is;var d;a:{if(d=Jh.cache[b])for(var e=d.length-1;0<=e;e--){var f=d[e];b:{var g=c.ka;for(var h=0;h<g.length;h++){var k=g[h];if(f.L[k]!==c.M[k]){g=!1;break b}}g=!0}if(g){d=f;break a}}d=void 0}g=d?d.styleElement:
null;e=c.I;(f=d&&d.I)||(f=this.F[b]=(this.F[b]||0)+1,f=b+"-"+f);c.I=f;f=c.I;h=qh;h=g?g.textContent||"":mh(h,a,c.M,f);k=Zg(a);var l=k.a;l&&!W&&l!==g&&(l._useCount--,0>=l._useCount&&l.parentNode&&l.parentNode.removeChild(l));W?k.a?(k.a.textContent=h,g=k.a):h&&(g=mg(h,f,a.shadowRoot,k.b)):g?g.parentNode||(ch&&-1<h.indexOf("@media")&&(g.textContent=h),ng(g,null,k.b)):h&&(g=mg(h,f,null,k.b));g&&(g._useCount=g._useCount||0,k.a!=g&&g._useCount++,k.a=g);f=g;W||(g=c.I,k=h=a.getAttribute("class")||"",e&&(k=
h.replace(new RegExp("\\s*x-scope\\s*"+e+"\\s*","g")," ")),k+=(k?" ":"")+"x-scope "+g,h!==k&&sg(a,k));d||Jh.store(b,c.M,f,c.I)}};
function Ph(a,b,c){var d=ug(b).is;if(c.H){var e=c.H,f;for(f in e)null===f?b.style.removeProperty(f):b.style.setProperty(f,e[f])}e=Dh[d];if(!(!e&&b!==a.c||e&&""!==wg(e))&&e&&e._style&&!Gh(e)){if(Gh(e)||e._applyShimValidatingVersion!==e._applyShimNextVersion)Kh(a),a.b&&a.b.transformRules(e._styleAst,d),e._style.textContent=Fg(b,c.J),Hh(e);W&&(a=b.shadowRoot)&&(a=a.querySelector("style"))&&(a.textContent=Fg(b,c.J));c.J=e._styleAst}}
function Qh(a,b){return(b=tg(b).getRootNode().host)?Zg(b)||Lh(b)?b:Qh(a,b):a.c}function Oh(a,b,c){var d=Qh(a,b),e=Zg(d),f=e.M;d===a.c||f||(Oh(a,d,e),f=e.M);a=Object.create(f||null);d=lh(b,c.J,c.cssBuild);b=jh(e.J,b).L;Object.assign(a,d.La,b,d.Ta);b=c.H;for(var g in b)if((e=b[g])||0===e)a[g]=e;g=qh;b=Object.getOwnPropertyNames(a);for(e=0;e<b.length;e++)d=b[e],a[d]=hh(g,a[d],a);c.M=a}w.styleDocument=function(a){this.styleSubtree(this.c,a)};
w.styleSubtree=function(a,b){var c=tg(a),d=c.shadowRoot,e=a===this.c;(d||e)&&this.styleElement(a,b);if(a=e?c:d)for(a=Array.from(a.querySelectorAll("*")).filter(function(f){return tg(f).shadowRoot}),b=0;b<a.length;b++)this.styleSubtree(a[b])};
w.xa=function(a){var b=this,c=wg(a);c!==this.f.cssBuild&&(this.f.cssBuild=c);if(!xg(c)){var d=kg(a);jg(d,function(e){if(W)Xg(e);else{var f=Bg;e.selector=e.parsedSelector;Xg(e);e.selector=e.B=Ig(f,e,f.c,void 0,void 0)}Y&&""===c&&(Kh(b),b.b&&b.b.transformRule(e))});Y?a.textContent=ig(d):this.f.J.rules.push(d)}};w.getComputedStyleValue=function(a,b){var c;Y||(c=(Zg(a)||Zg(Qh(this,a))).M[b]);return(c=c||window.getComputedStyle(a).getPropertyValue(b))?c.trim():""};
w.Wa=function(a,b){var c=tg(a).getRootNode(),d;b?d=("string"===typeof b?b:String(b)).split(/\s/):d=[];b=c.host&&c.host.localName;if(!b&&(c=a.getAttribute("class"))){c=c.split(/\s/);for(var e=0;e<c.length;e++)if(c[e]===Bg.a){b=c[e+1];break}}b&&d.push(Bg.a,b);Y||(b=Zg(a))&&b.I&&d.push(qh.a,b.I);sg(a,d.join(" "))};w.Ea=function(a){return Zg(a)};w.Va=function(a,b){Cg(a,b)};w.Ya=function(a,b){Cg(a,b,!0)};w.Ua=function(a){return yh(a)};w.Ha=function(a){return xh(a)};Z.prototype.flush=Z.prototype.flush;
Z.prototype.prepareTemplate=Z.prototype.prepareTemplate;Z.prototype.styleElement=Z.prototype.styleElement;Z.prototype.styleDocument=Z.prototype.styleDocument;Z.prototype.styleSubtree=Z.prototype.styleSubtree;Z.prototype.getComputedStyleValue=Z.prototype.getComputedStyleValue;Z.prototype.setElementClass=Z.prototype.Wa;Z.prototype._styleInfoForNode=Z.prototype.Ea;Z.prototype.transformCustomStyleForDocument=Z.prototype.xa;Z.prototype.getStyleAst=Z.prototype.Ja;Z.prototype.styleAstToString=Z.prototype.Xa;
Z.prototype.flushCustomStyles=Z.prototype.flushCustomStyles;Z.prototype.scopeNode=Z.prototype.Va;Z.prototype.unscopeNode=Z.prototype.Ya;Z.prototype.scopeForNode=Z.prototype.Ua;Z.prototype.currentScopeForNode=Z.prototype.Ha;Z.prototype.prepareAdoptedCssText=Z.prototype.Ra;Object.defineProperties(Z.prototype,{nativeShadow:{get:function(){return W}},nativeCss:{get:function(){return Y}}});var Rh=new Z,Sh,Th;window.ShadyCSS&&(Sh=window.ShadyCSS.ApplyShim,Th=window.ShadyCSS.CustomStyleInterface);
window.ShadyCSS={ScopingShim:Rh,prepareTemplate:function(a,b,c){Rh.flushCustomStyles();Rh.prepareTemplate(a,b,c)},prepareTemplateDom:function(a,b){Rh.prepareTemplateDom(a,b)},prepareTemplateStyles:function(a,b,c){Rh.flushCustomStyles();Rh.prepareTemplateStyles(a,b,c)},styleSubtree:function(a,b){Rh.flushCustomStyles();Rh.styleSubtree(a,b)},styleElement:function(a){Rh.flushCustomStyles();Rh.styleElement(a)},styleDocument:function(a){Rh.flushCustomStyles();Rh.styleDocument(a)},flushCustomStyles:function(){Rh.flushCustomStyles()},
getComputedStyleValue:function(a,b){return Rh.getComputedStyleValue(a,b)},nativeCss:Y,nativeShadow:W,cssBuild:Zf,disableRuntime:$f};Sh&&(window.ShadyCSS.ApplyShim=Sh);Th&&(window.ShadyCSS.CustomStyleInterface=Th);(function(a){function b(r){""==r&&(f.call(this),this.i=!0);return r.toLowerCase()}function c(r){var F=r.charCodeAt(0);return 32<F&&127>F&&-1==[34,35,60,62,63,96].indexOf(F)?r:encodeURIComponent(r)}function d(r){var F=r.charCodeAt(0);return 32<F&&127>F&&-1==[34,35,60,62,96].indexOf(F)?r:encodeURIComponent(r)}function e(r,F,C){function N(la){sa.push(la)}var y=F||"scheme start",X=0,v="",ra=!1,fa=!1,sa=[];a:for(;(void 0!=r[X-1]||0==X)&&!this.i;){var n=r[X];switch(y){case "scheme start":if(n&&q.test(n))v+=
n.toLowerCase(),y="scheme";else if(F){N("Invalid scheme.");break a}else{v="";y="no scheme";continue}break;case "scheme":if(n&&H.test(n))v+=n.toLowerCase();else if(":"==n){this.h=v;v="";if(F)break a;void 0!==l[this.h]&&(this.C=!0);y="file"==this.h?"relative":this.C&&C&&C.h==this.h?"relative or authority":this.C?"authority first slash":"scheme data"}else if(F){void 0!=n&&N("Code point not allowed in scheme: "+n);break a}else{v="";X=0;y="no scheme";continue}break;case "scheme data":"?"==n?(this.o="?",
y="query"):"#"==n?(this.v="#",y="fragment"):void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.ga+=c(n));break;case "no scheme":if(C&&void 0!==l[C.h]){y="relative";continue}else N("Missing scheme."),f.call(this),this.i=!0;break;case "relative or authority":if("/"==n&&"/"==r[X+1])y="authority ignore slashes";else{N("Expected /, got: "+n);y="relative";continue}break;case "relative":this.C=!0;"file"!=this.h&&(this.h=C.h);if(void 0==n){this.j=C.j;this.m=C.m;this.l=C.l.slice();this.o=C.o;this.s=C.s;this.g=C.g;
break a}else if("/"==n||"\\"==n)"\\"==n&&N("\\ is an invalid code point."),y="relative slash";else if("?"==n)this.j=C.j,this.m=C.m,this.l=C.l.slice(),this.o="?",this.s=C.s,this.g=C.g,y="query";else if("#"==n)this.j=C.j,this.m=C.m,this.l=C.l.slice(),this.o=C.o,this.v="#",this.s=C.s,this.g=C.g,y="fragment";else{y=r[X+1];var I=r[X+2];if("file"!=this.h||!q.test(n)||":"!=y&&"|"!=y||void 0!=I&&"/"!=I&&"\\"!=I&&"?"!=I&&"#"!=I)this.j=C.j,this.m=C.m,this.s=C.s,this.g=C.g,this.l=C.l.slice(),this.l.pop();y=
"relative path";continue}break;case "relative slash":if("/"==n||"\\"==n)"\\"==n&&N("\\ is an invalid code point."),y="file"==this.h?"file host":"authority ignore slashes";else{"file"!=this.h&&(this.j=C.j,this.m=C.m,this.s=C.s,this.g=C.g);y="relative path";continue}break;case "authority first slash":if("/"==n)y="authority second slash";else{N("Expected '/', got: "+n);y="authority ignore slashes";continue}break;case "authority second slash":y="authority ignore slashes";if("/"!=n){N("Expected '/', got: "+
n);continue}break;case "authority ignore slashes":if("/"!=n&&"\\"!=n){y="authority";continue}else N("Expected authority, got: "+n);break;case "authority":if("@"==n){ra&&(N("@ already seen."),v+="%40");ra=!0;for(n=0;n<v.length;n++)I=v[n],"\t"==I||"\n"==I||"\r"==I?N("Invalid whitespace in authority."):":"==I&&null===this.g?this.g="":(I=c(I),null!==this.g?this.g+=I:this.s+=I);v=""}else if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n){X-=v.length;v="";y="host";continue}else v+=n;break;case "file host":if(void 0==
n||"/"==n||"\\"==n||"?"==n||"#"==n){2!=v.length||!q.test(v[0])||":"!=v[1]&&"|"!=v[1]?(0!=v.length&&(this.j=b.call(this,v),v=""),y="relative path start"):y="relative path";continue}else"\t"==n||"\n"==n||"\r"==n?N("Invalid whitespace in file host."):v+=n;break;case "host":case "hostname":if(":"!=n||fa)if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n){this.j=b.call(this,v);v="";y="relative path start";if(F)break a;continue}else"\t"!=n&&"\n"!=n&&"\r"!=n?("["==n?fa=!0:"]"==n&&(fa=!1),v+=n):N("Invalid code point in host/hostname: "+
n);else if(this.j=b.call(this,v),v="",y="port","hostname"==F)break a;break;case "port":if(/[0-9]/.test(n))v+=n;else if(void 0==n||"/"==n||"\\"==n||"?"==n||"#"==n||F){""!=v&&(v=parseInt(v,10),v!=l[this.h]&&(this.m=v+""),v="");if(F)break a;y="relative path start";continue}else"\t"==n||"\n"==n||"\r"==n?N("Invalid code point in port: "+n):(f.call(this),this.i=!0);break;case "relative path start":"\\"==n&&N("'\\' not allowed in path.");y="relative path";if("/"!=n&&"\\"!=n)continue;break;case "relative path":if(void 0!=
n&&"/"!=n&&"\\"!=n&&(F||"?"!=n&&"#"!=n))"\t"!=n&&"\n"!=n&&"\r"!=n&&(v+=c(n));else{"\\"==n&&N("\\ not allowed in relative path.");if(I=m[v.toLowerCase()])v=I;".."==v?(this.l.pop(),"/"!=n&&"\\"!=n&&this.l.push("")):"."==v&&"/"!=n&&"\\"!=n?this.l.push(""):"."!=v&&("file"==this.h&&0==this.l.length&&2==v.length&&q.test(v[0])&&"|"==v[1]&&(v=v[0]+":"),this.l.push(v));v="";"?"==n?(this.o="?",y="query"):"#"==n&&(this.v="#",y="fragment")}break;case "query":F||"#"!=n?void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.o+=
d(n)):(this.v="#",y="fragment");break;case "fragment":void 0!=n&&"\t"!=n&&"\n"!=n&&"\r"!=n&&(this.v+=n)}X++}}function f(){this.s=this.ga=this.h="";this.g=null;this.m=this.j="";this.l=[];this.v=this.o="";this.C=this.i=!1}function g(r,F){void 0===F||F instanceof g||(F=new g(String(F)));this.a=r;f.call(this);e.call(this,this.a.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g,""),null,F)}var h=!1;try{var k=new URL("b","http://a");k.pathname="c%20d";h="http://a/c%20d"===k.href}catch(r){}if(!h){var l=Object.create(null);
l.ftp=21;l.file=0;l.gopher=70;l.http=80;l.https=443;l.ws=80;l.wss=443;var m=Object.create(null);m["%2e"]=".";m[".%2e"]="..";m["%2e."]="..";m["%2e%2e"]="..";var q=/[a-zA-Z]/,H=/[a-zA-Z0-9\+\-\.]/;g.prototype={toString:function(){return this.href},get href(){if(this.i)return this.a;var r="";if(""!=this.s||null!=this.g)r=this.s+(null!=this.g?":"+this.g:"")+"@";return this.protocol+(this.C?"//"+r+this.host:"")+this.pathname+this.o+this.v},set href(r){f.call(this);e.call(this,r)},get protocol(){return this.h+
":"},set protocol(r){this.i||e.call(this,r+":","scheme start")},get host(){return this.i?"":this.m?this.j+":"+this.m:this.j},set host(r){!this.i&&this.C&&e.call(this,r,"host")},get hostname(){return this.j},set hostname(r){!this.i&&this.C&&e.call(this,r,"hostname")},get port(){return this.m},set port(r){!this.i&&this.C&&e.call(this,r,"port")},get pathname(){return this.i?"":this.C?"/"+this.l.join("/"):this.ga},set pathname(r){!this.i&&this.C&&(this.l=[],e.call(this,r,"relative path start"))},get search(){return this.i||
!this.o||"?"==this.o?"":this.o},set search(r){!this.i&&this.C&&(this.o="?","?"==r[0]&&(r=r.slice(1)),e.call(this,r,"query"))},get hash(){return this.i||!this.v||"#"==this.v?"":this.v},set hash(r){this.i||(r?(this.v="#","#"==r[0]&&(r=r.slice(1)),e.call(this,r,"fragment")):this.v="")},get origin(){var r;if(this.i||!this.h)return"";switch(this.h){case "data":case "file":case "javascript":case "mailto":return"null"}return(r=this.host)?this.h+"://"+r:""}};var E=a.URL;E&&(g.createObjectURL=function(r){return E.createObjectURL.apply(E,
arguments)},g.revokeObjectURL=function(r){E.revokeObjectURL(r)});a.URL=g}})(window);Object.getOwnPropertyDescriptor(Node.prototype,"baseURI")||Object.defineProperty(Node.prototype,"baseURI",{get:function(){var a=(this.ownerDocument||this).querySelector("base[href]");return a&&a.href||window.location.href},configurable:!0,enumerable:!0});var Uh=document.createElement("style");Uh.textContent="body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";var Vh=document.querySelector("head");Vh.insertBefore(Uh,Vh.firstChild);var Wh=window.customElements,Xh=!1,Yh=null;Wh.polyfillWrapFlushCallback&&Wh.polyfillWrapFlushCallback(function(a){Yh=a;Xh&&a()});function Zh(){window.HTMLTemplateElement.bootstrap&&window.HTMLTemplateElement.bootstrap(window.document);Yh&&Yh();Xh=!0;window.WebComponents.ready=!0;document.dispatchEvent(new CustomEvent("WebComponentsReady",{bubbles:!0}))}
"complete"!==document.readyState?(window.addEventListener("load",Zh),window.addEventListener("DOMContentLoaded",function(){window.removeEventListener("load",Zh);Zh()})):Zh();}).call(this);

//# sourceMappingURL=webcomponents-bundle.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate))

/***/ }),

/***/ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

(function() {
  'use strict';

  /**
   * Basic flow of the loader process
   *
   * There are 4 flows the loader can take when booting up
   *
   * - Synchronous script, no polyfills needed
   *   - wait for `DOMContentLoaded`
   *   - fire WCR event, as there could not be any callbacks passed to `waitFor`
   *
   * - Synchronous script, polyfills needed
   *   - document.write the polyfill bundle
   *   - wait on the `load` event of the bundle to batch Custom Element upgrades
   *   - wait for `DOMContentLoaded`
   *   - run callbacks passed to `waitFor`
   *   - fire WCR event
   *
   * - Asynchronous script, no polyfills needed
   *   - wait for `DOMContentLoaded`
   *   - run callbacks passed to `waitFor`
   *   - fire WCR event
   *
   * - Asynchronous script, polyfills needed
   *   - Append the polyfill bundle script
   *   - wait for `load` event of the bundle
   *   - batch Custom Element Upgrades
   *   - run callbacks pass to `waitFor`
   *   - fire WCR event
   */

  var polyfillsLoaded = false;
  var whenLoadedFns = [];
  var allowUpgrades = false;
  var flushFn;

  function fireEvent() {
    window.WebComponents.ready = true;
    document.dispatchEvent(new CustomEvent('WebComponentsReady', { bubbles: true }));
  }

  function batchCustomElements() {
    if (window.customElements && customElements.polyfillWrapFlushCallback) {
      customElements.polyfillWrapFlushCallback(function (flushCallback) {
        flushFn = flushCallback;
        if (allowUpgrades) {
          flushFn();
        }
      });
    }
  }

  function asyncReady() {
    batchCustomElements();
    ready();
  }

  function ready() {
    // bootstrap <template> elements before custom elements
    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {
      HTMLTemplateElement.bootstrap(window.document);
    }
    polyfillsLoaded = true;
    runWhenLoadedFns().then(fireEvent);
  }

  function runWhenLoadedFns() {
    allowUpgrades = false;
    var fnsMap = whenLoadedFns.map(function(fn) {
      return fn instanceof Function ? fn() : fn;
    });
    whenLoadedFns = [];
    return Promise.all(fnsMap).then(function() {
      allowUpgrades = true;
      flushFn && flushFn();
    }).catch(function(err) {
      console.error(err);
    });
  }

  window.WebComponents = window.WebComponents || {};
  window.WebComponents.ready = window.WebComponents.ready || false;
  window.WebComponents.waitFor = window.WebComponents.waitFor || function(waitFn) {
    if (!waitFn) {
      return;
    }
    whenLoadedFns.push(waitFn);
    if (polyfillsLoaded) {
      runWhenLoadedFns();
    }
  };
  window.WebComponents._batchCustomElements = batchCustomElements;

  var name = 'webcomponents-loader.js';
  // Feature detect which polyfill needs to be imported.
  var polyfills = [];
  if (!('attachShadow' in Element.prototype && 'getRootNode' in Element.prototype) ||
    (window.ShadyDOM && window.ShadyDOM.force)) {
    polyfills.push('sd');
  }
  if (!window.customElements || window.customElements.forcePolyfill) {
    polyfills.push('ce');
  }

  var needsTemplate = (function() {
    // no real <template> because no `content` property (IE and older browsers)
    var t = document.createElement('template');
    if (!('content' in t)) {
      return true;
    }
    // broken doc fragment (older Edge)
    if (!(t.content.cloneNode() instanceof DocumentFragment)) {
      return true;
    }
    // broken <template> cloning (Edge up to at least version 17)
    var t2 = document.createElement('template');
    t2.content.appendChild(document.createElement('div'));
    t.content.appendChild(t2);
    var clone = t.cloneNode(true);
    return (clone.content.childNodes.length === 0 ||
        clone.content.firstChild.content.childNodes.length === 0);
  })();

  // NOTE: any browser that does not have template or ES6 features
  // must load the full suite of polyfills.
  if (!window.Promise || !Array.from || !window.URL || !window.Symbol || needsTemplate) {
    polyfills = ['sd-ce-pf'];
  }

  if (polyfills.length) {
    var url;
    var polyfillFile = 'bundles/webcomponents-' + polyfills.join('-') + '.js';

    // Load it from the right place.
    if (window.WebComponents.root) {
      url = window.WebComponents.root + polyfillFile;
    } else {
      var script = document.querySelector('script[src*="' + name +'"]');
      // Load it from the right place.
      url = script.src.replace(name, polyfillFile);
    }

    var newScript = document.createElement('script');
    newScript.src = url;
    // if readyState is 'loading', this script is synchronous
    if (document.readyState === 'loading') {
      // make sure custom elements are batched whenever parser gets to the injected script
      newScript.setAttribute('onload', 'window.WebComponents._batchCustomElements()');
      document.write(newScript.outerHTML);
      document.addEventListener('DOMContentLoaded', ready);
    } else {
      newScript.addEventListener('load', function () {
        asyncReady();
      });
      newScript.addEventListener('error', function () {
        throw new Error('Could not load polyfill bundle' + url);
      });
      document.head.appendChild(newScript);
    }
  } else {
    // if readyState is 'complete', script is loaded imperatively on a spec-compliant browser, so just fire WCR
    if (document.readyState === 'complete') {
      polyfillsLoaded = true;
      fireEvent();
    } else {
      // this script may come between DCL and load, so listen for both, and cancel load listener if DCL fires
      window.addEventListener('load', ready);
      window.addEventListener('DOMContentLoaded', function() {
        window.removeEventListener('load', ready);
        ready();
      })
    }
  }
})();


/***/ }),

/***/ "./node_modules/classlist-polyfill/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/classlist-polyfill/src/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
 * classList.js: Cross-browser full element.classList implementation.
 * 1.1.20170427
 *
 * By Eli Grey, http://eligrey.com
 * License: Dedicated to the public domain.
 *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md
 */

/*global self, document, DOMException */

/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */

if ("document" in window.self) {

// Full polyfill for browsers with no classList support
// Including IE < Edge missing SVGElement.classList
if (!("classList" in document.createElement("_")) 
	|| document.createElementNS && !("classList" in document.createElementNS("http://www.w3.org/2000/svg","g"))) {

(function (view) {

"use strict";

if (!('Element' in view)) return;

var
	  classListProp = "classList"
	, protoProp = "prototype"
	, elemCtrProto = view.Element[protoProp]
	, objCtr = Object
	, strTrim = String[protoProp].trim || function () {
		return this.replace(/^\s+|\s+$/g, "");
	}
	, arrIndexOf = Array[protoProp].indexOf || function (item) {
		var
			  i = 0
			, len = this.length
		;
		for (; i < len; i++) {
			if (i in this && this[i] === item) {
				return i;
			}
		}
		return -1;
	}
	// Vendors: please allow content code to instantiate DOMExceptions
	, DOMEx = function (type, message) {
		this.name = type;
		this.code = DOMException[type];
		this.message = message;
	}
	, checkTokenAndGetIndex = function (classList, token) {
		if (token === "") {
			throw new DOMEx(
				  "SYNTAX_ERR"
				, "An invalid or illegal string was specified"
			);
		}
		if (/\s/.test(token)) {
			throw new DOMEx(
				  "INVALID_CHARACTER_ERR"
				, "String contains an invalid character"
			);
		}
		return arrIndexOf.call(classList, token);
	}
	, ClassList = function (elem) {
		var
			  trimmedClasses = strTrim.call(elem.getAttribute("class") || "")
			, classes = trimmedClasses ? trimmedClasses.split(/\s+/) : []
			, i = 0
			, len = classes.length
		;
		for (; i < len; i++) {
			this.push(classes[i]);
		}
		this._updateClassName = function () {
			elem.setAttribute("class", this.toString());
		};
	}
	, classListProto = ClassList[protoProp] = []
	, classListGetter = function () {
		return new ClassList(this);
	}
;
// Most DOMException implementations don't allow calling DOMException's toString()
// on non-DOMExceptions. Error's toString() is sufficient here.
DOMEx[protoProp] = Error[protoProp];
classListProto.item = function (i) {
	return this[i] || null;
};
classListProto.contains = function (token) {
	token += "";
	return checkTokenAndGetIndex(this, token) !== -1;
};
classListProto.add = function () {
	var
		  tokens = arguments
		, i = 0
		, l = tokens.length
		, token
		, updated = false
	;
	do {
		token = tokens[i] + "";
		if (checkTokenAndGetIndex(this, token) === -1) {
			this.push(token);
			updated = true;
		}
	}
	while (++i < l);

	if (updated) {
		this._updateClassName();
	}
};
classListProto.remove = function () {
	var
		  tokens = arguments
		, i = 0
		, l = tokens.length
		, token
		, updated = false
		, index
	;
	do {
		token = tokens[i] + "";
		index = checkTokenAndGetIndex(this, token);
		while (index !== -1) {
			this.splice(index, 1);
			updated = true;
			index = checkTokenAndGetIndex(this, token);
		}
	}
	while (++i < l);

	if (updated) {
		this._updateClassName();
	}
};
classListProto.toggle = function (token, force) {
	token += "";

	var
		  result = this.contains(token)
		, method = result ?
			force !== true && "remove"
		:
			force !== false && "add"
	;

	if (method) {
		this[method](token);
	}

	if (force === true || force === false) {
		return force;
	} else {
		return !result;
	}
};
classListProto.toString = function () {
	return this.join(" ");
};

if (objCtr.defineProperty) {
	var classListPropDesc = {
		  get: classListGetter
		, enumerable: true
		, configurable: true
	};
	try {
		objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
	} catch (ex) { // IE 8 doesn't support enumerable:true
		// adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36
		// modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected
		if (ex.number === undefined || ex.number === -0x7FF5EC54) {
			classListPropDesc.enumerable = false;
			objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
		}
	}
} else if (objCtr[protoProp].__defineGetter__) {
	elemCtrProto.__defineGetter__(classListProp, classListGetter);
}

}(window.self));

}

// There is full or partial native classList support, so just check if we need
// to normalize the add/remove and toggle APIs.

(function () {
	"use strict";

	var testElement = document.createElement("_");

	testElement.classList.add("c1", "c2");

	// Polyfill for IE 10/11 and Firefox <26, where classList.add and
	// classList.remove exist but support only one argument at a time.
	if (!testElement.classList.contains("c2")) {
		var createMethod = function(method) {
			var original = DOMTokenList.prototype[method];

			DOMTokenList.prototype[method] = function(token) {
				var i, len = arguments.length;

				for (i = 0; i < len; i++) {
					token = arguments[i];
					original.call(this, token);
				}
			};
		};
		createMethod('add');
		createMethod('remove');
	}

	testElement.classList.toggle("c3", false);

	// Polyfill for IE 10 and Firefox <24, where classList.toggle does not
	// support the second argument.
	if (testElement.classList.contains("c3")) {
		var _toggle = DOMTokenList.prototype.toggle;

		DOMTokenList.prototype.toggle = function(token, force) {
			if (1 in arguments && !this.contains(token) === !force) {
				return force;
			} else {
				return _toggle.call(this, token);
			}
		};

	}

	testElement = null;
}());

}


/***/ }),

/***/ "./node_modules/core-js/es/array/index.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/es/array/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../../modules/es.array.from */ "./node_modules/core-js/modules/es.array.from.js");
__webpack_require__(/*! ../../modules/es.array.is-array */ "./node_modules/core-js/modules/es.array.is-array.js");
__webpack_require__(/*! ../../modules/es.array.of */ "./node_modules/core-js/modules/es.array.of.js");
__webpack_require__(/*! ../../modules/es.array.concat */ "./node_modules/core-js/modules/es.array.concat.js");
__webpack_require__(/*! ../../modules/es.array.copy-within */ "./node_modules/core-js/modules/es.array.copy-within.js");
__webpack_require__(/*! ../../modules/es.array.every */ "./node_modules/core-js/modules/es.array.every.js");
__webpack_require__(/*! ../../modules/es.array.fill */ "./node_modules/core-js/modules/es.array.fill.js");
__webpack_require__(/*! ../../modules/es.array.filter */ "./node_modules/core-js/modules/es.array.filter.js");
__webpack_require__(/*! ../../modules/es.array.find */ "./node_modules/core-js/modules/es.array.find.js");
__webpack_require__(/*! ../../modules/es.array.find-index */ "./node_modules/core-js/modules/es.array.find-index.js");
__webpack_require__(/*! ../../modules/es.array.flat */ "./node_modules/core-js/modules/es.array.flat.js");
__webpack_require__(/*! ../../modules/es.array.flat-map */ "./node_modules/core-js/modules/es.array.flat-map.js");
__webpack_require__(/*! ../../modules/es.array.for-each */ "./node_modules/core-js/modules/es.array.for-each.js");
__webpack_require__(/*! ../../modules/es.array.includes */ "./node_modules/core-js/modules/es.array.includes.js");
__webpack_require__(/*! ../../modules/es.array.index-of */ "./node_modules/core-js/modules/es.array.index-of.js");
__webpack_require__(/*! ../../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../../modules/es.array.join */ "./node_modules/core-js/modules/es.array.join.js");
__webpack_require__(/*! ../../modules/es.array.last-index-of */ "./node_modules/core-js/modules/es.array.last-index-of.js");
__webpack_require__(/*! ../../modules/es.array.map */ "./node_modules/core-js/modules/es.array.map.js");
__webpack_require__(/*! ../../modules/es.array.reduce */ "./node_modules/core-js/modules/es.array.reduce.js");
__webpack_require__(/*! ../../modules/es.array.reduce-right */ "./node_modules/core-js/modules/es.array.reduce-right.js");
__webpack_require__(/*! ../../modules/es.array.reverse */ "./node_modules/core-js/modules/es.array.reverse.js");
__webpack_require__(/*! ../../modules/es.array.slice */ "./node_modules/core-js/modules/es.array.slice.js");
__webpack_require__(/*! ../../modules/es.array.some */ "./node_modules/core-js/modules/es.array.some.js");
__webpack_require__(/*! ../../modules/es.array.sort */ "./node_modules/core-js/modules/es.array.sort.js");
__webpack_require__(/*! ../../modules/es.array.species */ "./node_modules/core-js/modules/es.array.species.js");
__webpack_require__(/*! ../../modules/es.array.splice */ "./node_modules/core-js/modules/es.array.splice.js");
__webpack_require__(/*! ../../modules/es.array.unscopables.flat */ "./node_modules/core-js/modules/es.array.unscopables.flat.js");
__webpack_require__(/*! ../../modules/es.array.unscopables.flat-map */ "./node_modules/core-js/modules/es.array.unscopables.flat-map.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Array;


/***/ }),

/***/ "./node_modules/core-js/es/map/index.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/es/map/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es.map */ "./node_modules/core-js/modules/es.map.js");
__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom-collections.iterator */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Map;


/***/ }),

/***/ "./node_modules/core-js/es/promise/index.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/es/promise/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom-collections.iterator */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
__webpack_require__(/*! ../../modules/es.promise */ "./node_modules/core-js/modules/es.promise.js");
__webpack_require__(/*! ../../modules/es.promise.all-settled */ "./node_modules/core-js/modules/es.promise.all-settled.js");
__webpack_require__(/*! ../../modules/es.promise.finally */ "./node_modules/core-js/modules/es.promise.finally.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Promise;


/***/ }),

/***/ "./node_modules/core-js/es/set/index.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/es/set/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es.set */ "./node_modules/core-js/modules/es.set.js");
__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom-collections.iterator */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Set;


/***/ }),

/***/ "./node_modules/core-js/es/string/starts-with.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/es/string/starts-with.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es.string.starts-with */ "./node_modules/core-js/modules/es.string.starts-with.js");
var entryUnbind = __webpack_require__(/*! ../../internals/entry-unbind */ "./node_modules/core-js/internals/entry-unbind.js");

module.exports = entryUnbind('String', 'startsWith');


/***/ }),

/***/ "./node_modules/core-js/features/array/index.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/features/array/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(/*! ../../es/array */ "./node_modules/core-js/es/array/index.js");
__webpack_require__(/*! ../../modules/esnext.array.is-template-object */ "./node_modules/core-js/modules/esnext.array.is-template-object.js");
__webpack_require__(/*! ../../modules/esnext.array.last-item */ "./node_modules/core-js/modules/esnext.array.last-item.js");
__webpack_require__(/*! ../../modules/esnext.array.last-index */ "./node_modules/core-js/modules/esnext.array.last-index.js");

module.exports = parent;


/***/ }),

/***/ "./node_modules/core-js/features/map/index.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/features/map/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(/*! ../../es/map */ "./node_modules/core-js/es/map/index.js");
__webpack_require__(/*! ../../modules/esnext.map.from */ "./node_modules/core-js/modules/esnext.map.from.js");
__webpack_require__(/*! ../../modules/esnext.map.of */ "./node_modules/core-js/modules/esnext.map.of.js");
__webpack_require__(/*! ../../modules/esnext.map.delete-all */ "./node_modules/core-js/modules/esnext.map.delete-all.js");
__webpack_require__(/*! ../../modules/esnext.map.every */ "./node_modules/core-js/modules/esnext.map.every.js");
__webpack_require__(/*! ../../modules/esnext.map.filter */ "./node_modules/core-js/modules/esnext.map.filter.js");
__webpack_require__(/*! ../../modules/esnext.map.find */ "./node_modules/core-js/modules/esnext.map.find.js");
__webpack_require__(/*! ../../modules/esnext.map.find-key */ "./node_modules/core-js/modules/esnext.map.find-key.js");
__webpack_require__(/*! ../../modules/esnext.map.group-by */ "./node_modules/core-js/modules/esnext.map.group-by.js");
__webpack_require__(/*! ../../modules/esnext.map.includes */ "./node_modules/core-js/modules/esnext.map.includes.js");
__webpack_require__(/*! ../../modules/esnext.map.key-by */ "./node_modules/core-js/modules/esnext.map.key-by.js");
__webpack_require__(/*! ../../modules/esnext.map.key-of */ "./node_modules/core-js/modules/esnext.map.key-of.js");
__webpack_require__(/*! ../../modules/esnext.map.map-keys */ "./node_modules/core-js/modules/esnext.map.map-keys.js");
__webpack_require__(/*! ../../modules/esnext.map.map-values */ "./node_modules/core-js/modules/esnext.map.map-values.js");
__webpack_require__(/*! ../../modules/esnext.map.merge */ "./node_modules/core-js/modules/esnext.map.merge.js");
__webpack_require__(/*! ../../modules/esnext.map.reduce */ "./node_modules/core-js/modules/esnext.map.reduce.js");
__webpack_require__(/*! ../../modules/esnext.map.some */ "./node_modules/core-js/modules/esnext.map.some.js");
__webpack_require__(/*! ../../modules/esnext.map.update */ "./node_modules/core-js/modules/esnext.map.update.js");
__webpack_require__(/*! ../../modules/esnext.map.upsert */ "./node_modules/core-js/modules/esnext.map.upsert.js");
// TODO: remove from `core-js@4`
__webpack_require__(/*! ../../modules/esnext.map.update-or-insert */ "./node_modules/core-js/modules/esnext.map.update-or-insert.js");

module.exports = parent;


/***/ }),

/***/ "./node_modules/core-js/features/promise/index.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/features/promise/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(/*! ../../es/promise */ "./node_modules/core-js/es/promise/index.js");
__webpack_require__(/*! ../../modules/esnext.aggregate-error */ "./node_modules/core-js/modules/esnext.aggregate-error.js");
// TODO: Remove from `core-js@4`
__webpack_require__(/*! ../../modules/esnext.promise.all-settled */ "./node_modules/core-js/modules/esnext.promise.all-settled.js");
__webpack_require__(/*! ../../modules/esnext.promise.try */ "./node_modules/core-js/modules/esnext.promise.try.js");
__webpack_require__(/*! ../../modules/esnext.promise.any */ "./node_modules/core-js/modules/esnext.promise.any.js");

module.exports = parent;


/***/ }),

/***/ "./node_modules/core-js/features/set/index.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/features/set/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(/*! ../../es/set */ "./node_modules/core-js/es/set/index.js");
__webpack_require__(/*! ../../modules/esnext.set.from */ "./node_modules/core-js/modules/esnext.set.from.js");
__webpack_require__(/*! ../../modules/esnext.set.of */ "./node_modules/core-js/modules/esnext.set.of.js");
__webpack_require__(/*! ../../modules/esnext.set.add-all */ "./node_modules/core-js/modules/esnext.set.add-all.js");
__webpack_require__(/*! ../../modules/esnext.set.delete-all */ "./node_modules/core-js/modules/esnext.set.delete-all.js");
__webpack_require__(/*! ../../modules/esnext.set.every */ "./node_modules/core-js/modules/esnext.set.every.js");
__webpack_require__(/*! ../../modules/esnext.set.difference */ "./node_modules/core-js/modules/esnext.set.difference.js");
__webpack_require__(/*! ../../modules/esnext.set.filter */ "./node_modules/core-js/modules/esnext.set.filter.js");
__webpack_require__(/*! ../../modules/esnext.set.find */ "./node_modules/core-js/modules/esnext.set.find.js");
__webpack_require__(/*! ../../modules/esnext.set.intersection */ "./node_modules/core-js/modules/esnext.set.intersection.js");
__webpack_require__(/*! ../../modules/esnext.set.is-disjoint-from */ "./node_modules/core-js/modules/esnext.set.is-disjoint-from.js");
__webpack_require__(/*! ../../modules/esnext.set.is-subset-of */ "./node_modules/core-js/modules/esnext.set.is-subset-of.js");
__webpack_require__(/*! ../../modules/esnext.set.is-superset-of */ "./node_modules/core-js/modules/esnext.set.is-superset-of.js");
__webpack_require__(/*! ../../modules/esnext.set.join */ "./node_modules/core-js/modules/esnext.set.join.js");
__webpack_require__(/*! ../../modules/esnext.set.map */ "./node_modules/core-js/modules/esnext.set.map.js");
__webpack_require__(/*! ../../modules/esnext.set.reduce */ "./node_modules/core-js/modules/esnext.set.reduce.js");
__webpack_require__(/*! ../../modules/esnext.set.some */ "./node_modules/core-js/modules/esnext.set.some.js");
__webpack_require__(/*! ../../modules/esnext.set.symmetric-difference */ "./node_modules/core-js/modules/esnext.set.symmetric-difference.js");
__webpack_require__(/*! ../../modules/esnext.set.union */ "./node_modules/core-js/modules/esnext.set.union.js");

module.exports = parent;


/***/ }),

/***/ "./node_modules/core-js/features/string/starts-with.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/features/string/starts-with.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(/*! ../../es/string/starts-with */ "./node_modules/core-js/es/string/starts-with.js");

module.exports = parent;


/***/ }),

/***/ "./node_modules/core-js/internals/a-function.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-function.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  createNonEnumerableProperty(ArrayPrototype, UNSCOPABLES, create(null));
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-instance.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-copy-within.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/array-copy-within.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

var min = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-fill.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-fill.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-for-each.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-for-each.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = sloppyArrayMethod('forEach') ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "./node_modules/core-js/internals/array-from.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-from.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var index = 0;
  var iteratorMethod = getIteratorMethod(O);
  var length, result, step, iterator, next;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      createProperty(result, index, mapping
        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)
        : step.value
      );
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-last-index-of.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/array-last-index-of.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

var min = Math.min;
var nativeLastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var SLOPPY_METHOD = sloppyArrayMethod('lastIndexOf');

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
module.exports = (NEGATIVE_ZERO || SLOPPY_METHOD) ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = toLength(O.length);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : nativeLastIndexOf;


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-has-species-support.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-has-species-support.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/v8-version */ "./node_modules/core-js/internals/v8-version.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-reduce.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/array-reduce.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aFunction(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = toLength(O.length);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/bind-context.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/bind-context.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-add-all.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/collection-add-all.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// https://github.com/tc39/collection-methods
module.exports = function (/* ...elements */) {
  var set = anObject(this);
  var adder = aFunction(set.add);
  for (var k = 0, len = arguments.length; k < len; k++) {
    adder.call(set, arguments[k]);
  }
  return set;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-delete-all.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/collection-delete-all.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// https://github.com/tc39/collection-methods
module.exports = function (/* ...elements */) {
  var collection = anObject(this);
  var remover = aFunction(collection['delete']);
  var allDeleted = true;
  var wasDeleted;
  for (var k = 0, len = arguments.length; k < len; k++) {
    wasDeleted = remover.call(collection, arguments[k]);
    allDeleted = allDeleted && wasDeleted;
  }
  return !!allDeleted;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-from.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/collection-from.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

module.exports = function from(source /* , mapFn, thisArg */) {
  var length = arguments.length;
  var mapFn = length > 1 ? arguments[1] : undefined;
  var mapping, A, n, boundFunction;
  aFunction(this);
  mapping = mapFn !== undefined;
  if (mapping) aFunction(mapFn);
  if (source == undefined) return new this();
  A = [];
  if (mapping) {
    n = 0;
    boundFunction = bind(mapFn, length > 2 ? arguments[2] : undefined, 2);
    iterate(source, function (nextItem) {
      A.push(boundFunction(nextItem, n++));
    });
  } else {
    iterate(source, A.push, A);
  }
  return new this(A);
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-of.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/collection-of.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
module.exports = function of() {
  var length = arguments.length;
  var A = new Array(length);
  while (length--) A[length] = arguments[length];
  return new this(A);
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-strong.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/collection-strong.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f;
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "./node_modules/core-js/internals/redefine-all.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fastKey = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").fastKey;
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/collection.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        nativeMethod.call(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        nativeMethod.call(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  // eslint-disable-next-line max-len
  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  })))) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (e) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (f) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iterator-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iterator-constructor.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype;
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-iterator.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "./node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-iterables.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "./node_modules/core-js/internals/entry-unbind.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/entry-unbind.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");

var call = Function.call;

module.exports = function (CONSTRUCTOR, METHOD, length) {
  return bind(call, global[CONSTRUCTOR].prototype[METHOD], length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/flatten-into-array.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/flatten-into-array.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
  var element;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "./node_modules/core-js/internals/freezing.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/freezing.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

module.exports = function (it) {
  var iteratorMethod = getIteratorMethod(it);
  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  } return anObject(iteratorMethod.call(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-map-iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/get-map-iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");

module.exports = IS_PURE ? getIterator : function (it) {
  // eslint-disable-next-line no-undef
  return Map.prototype.entries.call(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-set-iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/get-set-iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");

module.exports = IS_PURE ? getIterator : function (it) {
  // eslint-disable-next-line no-undef
  return Set.prototype.values.call(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/core-js/internals/has.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/has.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/host-report-errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/host-report-errors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inherit-if-required.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/inherit-if-required.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-metadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/internal-metadata.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f;
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");

var METADATA = uid('meta');
var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "./node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var objectHas = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-ios.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/is-ios.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/user-agent */ "./node_modules/core-js/internals/user-agent.js");

module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-regexp.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-regexp.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterate.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
  var iterator, iterFn, index, length, result, next, step;

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = AS_ENTRIES
          ? boundFunction(anObject(step = iterable[index])[0], step[1])
          : boundFunction(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};

iterate.stop = function (result) {
  return new Result(true, result);
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/map-upsert.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/map-upsert.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// `Map.prototype.upsert` method
// https://github.com/thumbsupep/proposal-upsert
module.exports = function upsert(key, updateFn /* , insertFn */) {
  var map = anObject(this);
  var insertFn = arguments.length > 2 ? arguments[2] : undefined;
  var value;
  if (typeof updateFn != 'function' && typeof insertFn != 'function') {
    throw TypeError('At least one callback required');
  }
  if (map.has(key)) {
    value = map.get(key);
    if (typeof updateFn == 'function') {
      value = updateFn(value);
      map.set(key, value);
    }
  } else if (typeof insertFn == 'function') {
    value = insertFn();
    map.set(key, value);
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/microtask.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/microtask.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var macrotask = __webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set;
var IS_IOS = __webpack_require__(/*! ../internals/is-ios */ "./node_modules/core-js/internals/is-ios.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  } else if (MutationObserver && !IS_IOS) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "./node_modules/core-js/internals/native-promise-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/native-promise-constructor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "./node_modules/core-js/internals/native-symbol.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/native-symbol.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "./node_modules/core-js/internals/native-weak-map.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/native-weak-map.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/new-promise-capability.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/new-promise-capability.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/internals/not-a-regexp.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/not-a-regexp.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "./node_modules/core-js/internals/is-regexp.js");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var IE_PROTO = sharedKey('IE_PROTO');

var PROTOTYPE = 'prototype';
var Empty = function () { /* empty */ };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var length = enumBugKeys.length;
  var lt = '<';
  var script = 'script';
  var gt = '>';
  var js = 'java' + script + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  iframe.src = String(js);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
  return createDict();
};

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : defineProperties(result, Properties);
};

hiddenKeys[IE_PROTO] = true;


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = __webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf;
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/perform.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/perform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-resolve.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/promise-resolve.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/internals/redefine-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/redefine-all.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/internals/redefine.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/redefine.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/same-value-zero.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/same-value-zero.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `SameValueZero` abstract operation
// https://tc39.github.io/ecma262/#sec-samevaluezero
module.exports = function (x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y || x != x && y != y;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-global.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/set-global.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-species.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f;
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.4.8',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/internals/sloppy-array-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/sloppy-array-method.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !method || !fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/species-constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/species-constructor.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/task.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var IS_IOS = __webpack_require__(/*! ../internals/is-ios */ "./node_modules/core-js/internals/is-ios.js");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (classof(process) == 'process') {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol() == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/user-agent.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/user-agent.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-version.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/v8-version.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "./node_modules/core-js/internals/user-agent.js");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var has = __webpack_require__(/*! ../internals/has */ "./node_modules/core-js/internals/has.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.concat.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.concat.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/v8-version */ "./node_modules/core-js/internals/v8-version.js");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.copy-within.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.copy-within.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var copyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "./node_modules/core-js/internals/array-copy-within.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
$({ target: 'Array', proto: true }, {
  copyWithin: copyWithin
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('copyWithin');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.every.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.every.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $every = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").every;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: sloppyArrayMethod('every') }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.fill.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.fill.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fill = __webpack_require__(/*! ../internals/array-fill */ "./node_modules/core-js/internals/array-fill.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
$({ target: 'Array', proto: true }, {
  fill: fill
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('fill');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.filter.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.filter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $filter = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").filter;
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {
  [].filter.call({ length: -1, 0: 1 }, function (it) { throw it; });
});

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.find-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.find-index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $findIndex = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").findIndex;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.find.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.find.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $find = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").find;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

var FIND = 'find';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.flat-map.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.flat-map.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "./node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flatMap` method
// https://github.com/tc39/proposal-flatMap
$({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A;
    aFunction(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.flat.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.flat.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "./node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flat` method
// https://github.com/tc39/proposal-flatMap
$({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.for-each.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.for-each.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.from.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.from.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/array-from */ "./node_modules/core-js/internals/array-from.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.includes.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.includes.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $includes = __webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").includes;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.index-of.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.index-of.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $indexOf = __webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var SLOPPY_METHOD = sloppyArrayMethod('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.is-array.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

// `Array.isArray` method
// https://tc39.github.io/ecma262/#sec-array.isarray
$({ target: 'Array', stat: true }, {
  isArray: isArray
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.join.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.join.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

var nativeJoin = [].join;

var ES3_STRINGS = IndexedObject != Object;
var SLOPPY_METHOD = sloppyArrayMethod('join', ',');

// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {
  join: function join(separator) {
    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.last-index-of.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.last-index-of.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "./node_modules/core-js/internals/array-last-index-of.js");

// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: lastIndexOf
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.map.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.map.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $map = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").map;
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {
  [].map.call({ length: -1, 0: 1 }, function (it) { throw it; });
});

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.of.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.of.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

var ISNT_GENERIC = fails(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
});

// `Array.of` method
// https://tc39.github.io/ecma262/#sec-array.of
// WebKit Array.of isn't generic
$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {
  of: function of(/* ...args */) {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);
    while (argumentsLength > index) createProperty(result, index, arguments[index++]);
    result.length = argumentsLength;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.reduce-right.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.reduce-right.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $reduceRight = __webpack_require__(/*! ../internals/array-reduce */ "./node_modules/core-js/internals/array-reduce.js").right;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.reduceRight` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduceRight') }, {
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.reduce.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.reduce.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $reduce = __webpack_require__(/*! ../internals/array-reduce */ "./node_modules/core-js/internals/array-reduce.js").left;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduce') }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.reverse.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.reverse.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

var nativeReverse = [].reverse;
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign
    if (isArray(this)) this.length = this.length;
    return nativeReverse.call(this);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.slice.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.slice.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('slice') }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.some.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.some.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $some = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").some;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: sloppyArrayMethod('some') }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.sort.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.sort.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "./node_modules/core-js/internals/sloppy-array-method.js");

var test = [];
var nativeSort = test.sort;

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var SLOPPY_METHOD = sloppyArrayMethod('sort');

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;

// `Array.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? nativeSort.call(toObject(this))
      : nativeSort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.species.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.species.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");

// `Array[@@species]` getter
// https://tc39.github.io/ecma262/#sec-get-array-@@species
setSpecies('Array');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.splice.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.splice.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "./node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('splice') }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.unscopables.flat-map.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.unscopables.flat-map.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

addToUnscopables('flatMap');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.unscopables.flat.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.unscopables.flat.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

addToUnscopables('flat');


/***/ }),

/***/ "./node_modules/core-js/modules/es.map.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/es.map.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "./node_modules/core-js/internals/collection-strong.js");

// `Map` constructor
// https://tc39.github.io/ecma262/#sec-map-objects
module.exports = collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.all-settled.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.all-settled.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Promise.allSettled` method
// https://github.com/tc39/proposal-promise-allSettled
$({ target: 'Promise', stat: true }, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'fulfilled', value: value };
          --remaining || resolve(values);
        }, function (e) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'rejected', reason: e };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.finally.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.finally.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "./node_modules/core-js/internals/native-promise-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/core-js/internals/promise-resolve.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// patch native Promise.prototype for native async functions
if (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {
  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "./node_modules/core-js/internals/native-promise-constructor.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "./node_modules/core-js/internals/redefine-all.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var task = __webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set;
var microtask = __webpack_require__(/*! ../internals/microtask */ "./node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "./node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/v8-version */ "./node_modules/core-js/internals/v8-version.js");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var IS_NODE = classof(process) == 'process';
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (promise, state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(promise, state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (handler = global['on' + name]) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (promise, state) {
  task.call(global, function () {
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (promise, state) {
  task.call(global, function () {
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, promise, state, unwrap) {
  return function (value) {
    fn(promise, state, value, unwrap);
  };
};

var internalReject = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(promise, state, true);
};

var internalResolve = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, promise, wrapper, state),
            bind(internalReject, promise, wrapper, state)
          );
        } catch (error) {
          internalReject(promise, wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(promise, state, false);
    }
  } catch (error) {
    internalReject(promise, { done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, this, state), bind(internalReject, this, state));
    } catch (error) {
      internalReject(this, state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(this, state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, promise, state);
    this.reject = bind(internalReject, promise, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.set.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/es.set.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "./node_modules/core-js/internals/collection-strong.js");

// `Set` constructor
// https://tc39.github.io/ecma262/#sec-set-objects
module.exports = collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt;
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.starts-with.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.starts-with.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "./node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "./node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var nativeStartsWith = ''.startsWith;
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.github.io/ecma262/#sec-string.prototype.startswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = String(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return nativeStartsWith
      ? nativeStartsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.aggregate-error.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.aggregate-error.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var getInternalAggregateErrorState = InternalStateModule.getterFor('AggregateError');

var $AggregateError = function AggregateError(errors, message) {
  var that = this;
  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);
  if (setPrototypeOf) {
    that = setPrototypeOf(new Error(message), getPrototypeOf(that));
  }
  var errorsArray = [];
  iterate(errors, errorsArray.push, errorsArray);
  if (DESCRIPTORS) setInternalState(that, { errors: errorsArray, type: 'AggregateError' });
  else that.errors = errorsArray;
  if (message !== undefined) createNonEnumerableProperty(that, 'message', String(message));
  return that;
};

$AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(5, $AggregateError),
  message: createPropertyDescriptor(5, ''),
  name: createPropertyDescriptor(5, 'AggregateError')
});

if (DESCRIPTORS) defineProperty.f($AggregateError.prototype, 'errors', {
  get: function () {
    return getInternalAggregateErrorState(this).errors;
  },
  configurable: true
});

$({ global: true }, {
  AggregateError: $AggregateError
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.array.is-template-object.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.array.is-template-object.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

var isFrozen = Object.isFrozen;

var isFrozenStringArray = function (array, allowUndefined) {
  if (!isFrozen || !isArray(array) || !isFrozen(array)) return false;
  var index = 0;
  var length = array.length;
  var element;
  while (index < length) {
    element = array[index++];
    if (!(typeof element === 'string' || (allowUndefined && typeof element === 'undefined'))) {
      return false;
    }
  } return length !== 0;
};

// `Array.isTemplateObject` method
// https://github.com/tc39/proposal-array-is-template-object
$({ target: 'Array', stat: true }, {
  isTemplateObject: function isTemplateObject(value) {
    if (!isFrozenStringArray(value, true)) return false;
    var raw = value.raw;
    if (raw.length !== value.length || !isFrozenStringArray(raw, false)) return false;
    return true;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.array.last-index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.array.last-index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f;

// `Array.prototype.lastIndex` getter
// https://github.com/keithamus/proposal-array-last
if (DESCRIPTORS && !('lastIndex' in [])) {
  defineProperty(Array.prototype, 'lastIndex', {
    configurable: true,
    get: function lastIndex() {
      var O = toObject(this);
      var len = toLength(O.length);
      return len == 0 ? 0 : len - 1;
    }
  });

  addToUnscopables('lastIndex');
}


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.array.last-item.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.array.last-item.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f;

// `Array.prototype.lastIndex` accessor
// https://github.com/keithamus/proposal-array-last
if (DESCRIPTORS && !('lastItem' in [])) {
  defineProperty(Array.prototype, 'lastItem', {
    configurable: true,
    get: function lastItem() {
      var O = toObject(this);
      var len = toLength(O.length);
      return len == 0 ? undefined : O[len - 1];
    },
    set: function lastItem(value) {
      var O = toObject(this);
      var len = toLength(O.length);
      return O[len == 0 ? 0 : len - 1] = value;
    }
  });

  addToUnscopables('lastItem');
}


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.delete-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.delete-all.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var collectionDeleteAll = __webpack_require__(/*! ../internals/collection-delete-all */ "./node_modules/core-js/internals/collection-delete-all.js");

// `Map.prototype.deleteAll` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  deleteAll: function deleteAll(/* ...elements */) {
    return collectionDeleteAll.apply(this, arguments);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.every.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.every.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.every` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  every: function every(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return !iterate(iterator, function (key, value) {
      if (!boundFunction(value, key, map)) return iterate.stop();
    }, undefined, true, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.filter.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.filter` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  filter: function filter(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();
    var setter = aFunction(newMap.set);
    iterate(iterator, function (key, value) {
      if (boundFunction(value, key, map)) setter.call(newMap, key, value);
    }, undefined, true, true);
    return newMap;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.find-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.find-key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.findKey` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  findKey: function findKey(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return iterate(iterator, function (key, value) {
      if (boundFunction(value, key, map)) return iterate.stop(key);
    }, undefined, true, true).result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.find.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.find.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.find` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  find: function find(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return iterate(iterator, function (key, value) {
      if (boundFunction(value, key, map)) return iterate.stop(value);
    }, undefined, true, true).result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.from.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.from.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/collection-from */ "./node_modules/core-js/internals/collection-from.js");

// `Map.from` method
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
$({ target: 'Map', stat: true }, {
  from: from
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.group-by.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.group-by.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// `Map.groupBy` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', stat: true }, {
  groupBy: function groupBy(iterable, keyDerivative) {
    var newMap = new this();
    aFunction(keyDerivative);
    var has = aFunction(newMap.has);
    var get = aFunction(newMap.get);
    var set = aFunction(newMap.set);
    iterate(iterable, function (element) {
      var derivedKey = keyDerivative(element);
      if (!has.call(newMap, derivedKey)) set.call(newMap, derivedKey, [element]);
      else get.call(newMap, derivedKey).push(element);
    });
    return newMap;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.includes.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.includes.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var sameValueZero = __webpack_require__(/*! ../internals/same-value-zero */ "./node_modules/core-js/internals/same-value-zero.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.includes` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  includes: function includes(searchElement) {
    return iterate(getMapIterator(anObject(this)), function (key, value) {
      if (sameValueZero(value, searchElement)) return iterate.stop();
    }, undefined, true, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.key-by.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.key-by.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// `Map.keyBy` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', stat: true }, {
  keyBy: function keyBy(iterable, keyDerivative) {
    var newMap = new this();
    aFunction(keyDerivative);
    var setter = aFunction(newMap.set);
    iterate(iterable, function (element) {
      setter.call(newMap, keyDerivative(element), element);
    });
    return newMap;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.key-of.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.key-of.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.includes` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  keyOf: function keyOf(searchElement) {
    return iterate(getMapIterator(anObject(this)), function (key, value) {
      if (value === searchElement) return iterate.stop(key);
    }, undefined, true, true).result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.map-keys.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.map-keys.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.mapKeys` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  mapKeys: function mapKeys(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();
    var setter = aFunction(newMap.set);
    iterate(iterator, function (key, value) {
      setter.call(newMap, boundFunction(value, key, map), value);
    }, undefined, true, true);
    return newMap;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.map-values.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.map-values.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.mapValues` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  mapValues: function mapValues(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();
    var setter = aFunction(newMap.set);
    iterate(iterator, function (key, value) {
      setter.call(newMap, key, boundFunction(value, key, map));
    }, undefined, true, true);
    return newMap;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.merge.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.merge` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  // eslint-disable-next-line no-unused-vars
  merge: function merge(iterable /* ...iterbles */) {
    var map = anObject(this);
    var setter = aFunction(map.set);
    var i = 0;
    while (i < arguments.length) {
      iterate(arguments[i++], setter, map, true);
    }
    return map;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.of.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.of.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var of = __webpack_require__(/*! ../internals/collection-of */ "./node_modules/core-js/internals/collection-of.js");

// `Map.of` method
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
$({ target: 'Map', stat: true }, {
  of: of
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.reduce.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.reduce.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Map.prototype.reduce` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var noInitial = arguments.length < 2;
    var accumulator = noInitial ? undefined : arguments[1];
    aFunction(callbackfn);
    iterate(iterator, function (key, value) {
      if (noInitial) {
        noInitial = false;
        accumulator = value;
      } else {
        accumulator = callbackfn(accumulator, value, key, map);
      }
    }, undefined, true, true);
    if (noInitial) throw TypeError('Reduce of empty map with no initial value');
    return accumulator;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.some.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.some.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getMapIterator = __webpack_require__(/*! ../internals/get-map-iterator */ "./node_modules/core-js/internals/get-map-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.some` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  some: function some(callbackfn /* , thisArg */) {
    var map = anObject(this);
    var iterator = getMapIterator(map);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return iterate(iterator, function (key, value) {
      if (boundFunction(value, key, map)) return iterate.stop();
    }, undefined, true, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.update-or-insert.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.update-or-insert.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: remove from `core-js@4`
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var $upsert = __webpack_require__(/*! ../internals/map-upsert */ "./node_modules/core-js/internals/map-upsert.js");

// `Map.prototype.updateOrInsert` method (replaced by `Map.prototype.upsert`)
// https://github.com/thumbsupep/proposal-upsert
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  updateOrInsert: $upsert
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.update.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.update.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");

// `Set.prototype.update` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  update: function update(key, callback /* , thunk */) {
    var map = anObject(this);
    var length = arguments.length;
    aFunction(callback);
    var isPresentInMap = map.has(key);
    if (!isPresentInMap && length < 3) {
      throw TypeError('Updating absent value');
    }
    var value = isPresentInMap ? map.get(key) : aFunction(length > 2 ? arguments[2] : undefined)(key, map);
    map.set(key, callback(value, key, map));
    return map;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.map.upsert.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.map.upsert.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var $upsert = __webpack_require__(/*! ../internals/map-upsert */ "./node_modules/core-js/internals/map-upsert.js");

// `Map.prototype.upsert` method
// https://github.com/thumbsupep/proposal-upsert
$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {
  upsert: $upsert
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.promise.all-settled.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.promise.all-settled.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// TODO: Remove from `core-js@4`
__webpack_require__(/*! ./es.promise.all-settled.js */ "./node_modules/core-js/modules/es.promise.all-settled.js");


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.promise.any.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.promise.any.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://github.com/tc39/proposal-promise-any
$({ target: 'Promise', stat: true }, {
  any: function any(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        errors.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (e) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = e;
          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.promise.try.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.promise.try.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");

// `Promise.try` method
// https://github.com/tc39/proposal-promise-try
$({ target: 'Promise', stat: true }, {
  'try': function (callbackfn) {
    var promiseCapability = newPromiseCapabilityModule.f(this);
    var result = perform(callbackfn);
    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);
    return promiseCapability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.add-all.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.add-all.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var collectionAddAll = __webpack_require__(/*! ../internals/collection-add-all */ "./node_modules/core-js/internals/collection-add-all.js");

// `Set.prototype.addAll` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  addAll: function addAll(/* ...elements */) {
    return collectionAddAll.apply(this, arguments);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.delete-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.delete-all.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var collectionDeleteAll = __webpack_require__(/*! ../internals/collection-delete-all */ "./node_modules/core-js/internals/collection-delete-all.js");

// `Set.prototype.deleteAll` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  deleteAll: function deleteAll(/* ...elements */) {
    return collectionDeleteAll.apply(this, arguments);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.difference.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.difference.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.difference` method
// https://github.com/tc39/proposal-set-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  difference: function difference(iterable) {
    var set = anObject(this);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);
    var remover = aFunction(newSet['delete']);
    iterate(iterable, function (value) {
      remover.call(newSet, value);
    });
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.every.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.every.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.every` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  every: function every(callbackfn /* , thisArg */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return !iterate(iterator, function (value) {
      if (!boundFunction(value, value, set)) return iterate.stop();
    }, undefined, false, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.filter.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.filter` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  filter: function filter(callbackfn /* , thisArg */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();
    var adder = aFunction(newSet.add);
    iterate(iterator, function (value) {
      if (boundFunction(value, value, set)) adder.call(newSet, value);
    }, undefined, false, true);
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.find.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.find.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.find` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  find: function find(callbackfn /* , thisArg */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return iterate(iterator, function (value) {
      if (boundFunction(value, value, set)) return iterate.stop(value);
    }, undefined, false, true).result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.from.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.from.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/collection-from */ "./node_modules/core-js/internals/collection-from.js");

// `Set.from` method
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
$({ target: 'Set', stat: true }, {
  from: from
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.intersection.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.intersection.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.intersection` method
// https://github.com/tc39/proposal-set-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  intersection: function intersection(iterable) {
    var set = anObject(this);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();
    var hasCheck = aFunction(set.has);
    var adder = aFunction(newSet.add);
    iterate(iterable, function (value) {
      if (hasCheck.call(set, value)) adder.call(newSet, value);
    });
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.is-disjoint-from.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.is-disjoint-from.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.isDisjointFrom` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  isDisjointFrom: function isDisjointFrom(iterable) {
    var set = anObject(this);
    var hasCheck = aFunction(set.has);
    return !iterate(iterable, function (value) {
      if (hasCheck.call(set, value) === true) return iterate.stop();
    }).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.is-subset-of.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.is-subset-of.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.isSubsetOf` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  isSubsetOf: function isSubsetOf(iterable) {
    var iterator = getIterator(this);
    var otherSet = anObject(iterable);
    var hasCheck = otherSet.has;
    if (typeof hasCheck != 'function') {
      otherSet = new (getBuiltIn('Set'))(iterable);
      hasCheck = aFunction(otherSet.has);
    }
    return !iterate(iterator, function (value) {
      if (hasCheck.call(otherSet, value) === false) return iterate.stop();
    }, undefined, false, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.is-superset-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.is-superset-of.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.isSupersetOf` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  isSupersetOf: function isSupersetOf(iterable) {
    var set = anObject(this);
    var hasCheck = aFunction(set.has);
    return !iterate(iterable, function (value) {
      if (hasCheck.call(set, value) === false) return iterate.stop();
    }).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.join.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.join.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.join` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  join: function join(separator) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var sep = separator === undefined ? ',' : String(separator);
    var result = [];
    iterate(iterator, result.push, result, false, true);
    return result.join(sep);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.map.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.map.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.map` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  map: function map(callbackfn /* , thisArg */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();
    var adder = aFunction(newSet.add);
    iterate(iterator, function (value) {
      adder.call(newSet, boundFunction(value, value, set));
    }, undefined, false, true);
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.of.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.of.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var of = __webpack_require__(/*! ../internals/collection-of */ "./node_modules/core-js/internals/collection-of.js");

// `Set.of` method
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
$({ target: 'Set', stat: true }, {
  of: of
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.reduce.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.reduce.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.reduce` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var noInitial = arguments.length < 2;
    var accumulator = noInitial ? undefined : arguments[1];
    aFunction(callbackfn);
    iterate(iterator, function (value) {
      if (noInitial) {
        noInitial = false;
        accumulator = value;
      } else {
        accumulator = callbackfn(accumulator, value, value, set);
      }
    }, undefined, false, true);
    if (noInitial) throw TypeError('Reduce of empty set with no initial value');
    return accumulator;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.some.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.some.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "./node_modules/core-js/internals/bind-context.js");
var getSetIterator = __webpack_require__(/*! ../internals/get-set-iterator */ "./node_modules/core-js/internals/get-set-iterator.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.some` method
// https://github.com/tc39/proposal-collection-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  some: function some(callbackfn /* , thisArg */) {
    var set = anObject(this);
    var iterator = getSetIterator(set);
    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
    return iterate(iterator, function (value) {
      if (boundFunction(value, value, set)) return iterate.stop();
    }, undefined, false, true).stopped;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.symmetric-difference.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.symmetric-difference.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.symmetricDifference` method
// https://github.com/tc39/proposal-set-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  symmetricDifference: function symmetricDifference(iterable) {
    var set = anObject(this);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);
    var remover = aFunction(newSet['delete']);
    var adder = aFunction(newSet.add);
    iterate(iterable, function (value) {
      remover.call(newSet, value) || adder.call(newSet, value);
    });
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/esnext.set.union.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/esnext.set.union.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "./node_modules/core-js/internals/a-function.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");

// `Set.prototype.union` method
// https://github.com/tc39/proposal-set-methods
$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {
  union: function union(iterable) {
    var set = anObject(this);
    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);
    iterate(iterable, aFunction(newSet.add), newSet);
    return newSet;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/element-closest/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/element-closest/index.mjs ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function polyfill(window) {
  var ElementPrototype = window.Element.prototype;

  if (typeof ElementPrototype.matches !== 'function') {
    ElementPrototype.matches = ElementPrototype.msMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.webkitMatchesSelector || function matches(selector) {
      var element = this;
      var elements = (element.document || element.ownerDocument).querySelectorAll(selector);
      var index = 0;

      while (elements[index] && elements[index] !== element) {
        ++index;
      }

      return Boolean(elements[index]);
    };
  }

  if (typeof ElementPrototype.closest !== 'function') {
    ElementPrototype.closest = function closest(selector) {
      var element = this;

      while (element && element.nodeType === 1) {
        if (element.matches(selector)) {
          return element;
        }

        element = element.parentNode;
      }

      return null;
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (polyfill);
//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./node_modules/ff-web-components/dist/bundle.js":
/*!*******************************************************!*\
  !*** ./node_modules/ff-web-components/dist/bundle.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! For license information please see bundle.js.LICENSE */
!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=112)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return y})),n.d(t,"b",(function(){return b}));var i=n(27),r=n.n(i),a=n(46),o=n.n(a),s=n(18),c=n.n(s),u=n(68),l=n.n(u),d=n(2),f=n.n(d),h=n(4),p=n.n(h),m=n(24),g=n.n(m),v=function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===g()(e)&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e){e.exports=JSON.parse('{"a":"4.0.5"}')},function(e,t,n){var i;n.r(t),n.d(t,"internal",(function(){return ha})),n.d(t,"factfinder",(function(){return pa}));var a={};n.r(a),n.d(a,"isLogLevelActive",(function(){return j})),n.d(a,"trace",(function(){return R})),n.d(a,"debug",(function(){return M})),n.d(a,"info",(function(){return A})),n.d(a,"log",(function(){return N})),n.d(a,"warn",(function(){return D})),n.d(a,"error",(function(){return F})),n.d(a,"logMessage",(function(){return V})),n.d(a,"emitDeprecationWarning",(function(){return U}));var s={};n.r(s),n.d(s,"compose",(function(){return q})),n.d(s,"pipe",(function(){return B})),n.d(s,"scanl",(function(){return z})),n.d(s,"isNullish",(function(){return W})),n.d(s,"fswitch",(function(){return H})),n.d(s,"escapeRegex",(function(){return K}));var u={};n.r(u),n.d(u,"find",(function(){return G})),n.d(u,"flatMap",(function(){return X})),n.d(u,"values",(function(){return Z})),n.d(u,"includes",(function(){return J}));var d={};n.r(d),n.d(d,"encodeURIComponent",(function(){return $})),n.d(d,"decodeURIComponent",(function(){return Q})),n.d(d,"fixedEncodeURIComponent",(function(){return ee})),n.d(d,"fixedDecodeURIComponent",(function(){return te})),n.d(d,"percent20ToPlus",(function(){return ne})),n.d(d,"uriPlusEncode",(function(){return ie})),n.d(d,"encodeCategoryV4",(function(){return re})),n.d(d,"encodeAssociatedFieldName",(function(){return ae})),n.d(d,"ngEncode",(function(){return oe})),n.d(d,"ngCategoryPageEncode",(function(){return se}));var h={};n.r(h),n.d(h,"Versions",(function(){return ce})),n.d(h,"getApiString",(function(){return ue})),n.d(h,"isSupported",(function(){return le}));var m={};n.r(m),n.d(m,"pppConf",(function(){return fe}));var v={};n.r(v),n.d(v,"esPolyfills",(function(){return u})),n.d(v,"util",(function(){return s})),n.d(v,"Encoding",(function(){return d})),n.d(v,"NgApiVersions",(function(){return h})),n.d(v,"getFixedFilters",(function(){return Ge}));var y={};n.r(y),n.d(y,"addParam",(function(){return at})),n.d(y,"deduplicate",(function(){return ot})),n.d(y,"HistoryEntry",(function(){return st})),n.d(y,"getHistoryState",(function(){return ct})),n.d(y,"executeCallback",(function(){return ut})),n.d(y,"elementToString",(function(){return lt})),n.d(y,"stringToElement",(function(){return dt})),n.d(y,"isArray",(function(){return ft})),n.d(y,"isObject",(function(){return ht})),n.d(y,"isFunction",(function(){return pt})),n.d(y,"transitionEndEventName",(function(){return mt})),n.d(y,"setStyleProperty",(function(){return gt})),n.d(y,"concatFunctions",(function(){return vt})),n.d(y,"addEventListener",(function(){return yt})),n.d(y,"cloneObject",(function(){return bt})),n.d(y,"copyHTMLAttributes",(function(){return _t})),n.d(y,"isCustomElement",(function(){return kt})),n.d(y,"whichTransitionEvent",(function(){return wt})),n.d(y,"getParentElementByName",(function(){return Ct})),n.d(y,"urlStringToDict",(function(){return St})),n.d(y,"getParameterString",(function(){return Pt})),n.d(y,"parameterStringToDict",(function(){return Et})),n.d(y,"keys",(function(){return xt})),n.d(y,"sortStringArrayAlphabetically",(function(){return Ot})),n.d(y,"isFilterParameter",(function(){return Lt})),n.d(y,"dictToParameterString",(function(){return It})),n.d(y,"sortFilterValuesAlphabetically",(function(){return Tt})),n.d(y,"setUrlParameter",(function(){return jt})),n.d(y,"getKeyByPattern",(function(){return Rt})),n.d(y,"mergeProperties",(function(){return Mt})),n.d(y,"getCurrentEndPathString",(function(){return At})),n.d(y,"fireCustomEvent",(function(){return Nt})),n.d(y,"replaceAt",(function(){return Dt})),n.d(y,"removeAt",(function(){return Ft})),n.d(y,"randomString",(function(){return Vt})),n.d(y,"isFFParameter",(function(){return Ut})),n.d(y,"searchParams",(function(){return qt})),n.d(y,"localStorage",(function(){return Bt})),n.d(y,"removeChildNodes",(function(){return zt})),n.d(y,"isOk",(function(){return Wt})),n.d(y,"getMetaElementKey",(function(){return Ht}));var b={};n.r(b),n.d(b,"encodeUrl",(function(){return Kt})),n.d(b,"fixedEncodeURIComponent",(function(){return Yt})),n.d(b,"fixedDecodeURIComponent",(function(){return Gt})),n.d(b,"encodeDict",(function(){return Xt})),n.d(b,"_canEncode",(function(){return Zt})),n.d(b,"decodeUrl",(function(){return Jt})),n.d(b,"decodeDict",(function(){return $t}));var _={};n.r(_),n.d(_,"FFEvent",(function(){return an})),n.d(_,"FilterEvent",(function(){return on})),n.d(_,"BreadCrumbEvent",(function(){return sn})),n.d(_,"GlobalSearchParameter",(function(){return cn}));var k={};n.r(k),n.d(k,"sessionManager",(function(){return dn}));var w={};n.r(w),n.d(w,"startDispatching",(function(){return ei})),n.d(w,"setShouldDeferDispatches",(function(){return ti})),n.d(w,"invokeCallbacks",(function(){return ni})),n.d(w,"addCallback",(function(){return ii})),n.d(w,"removeCallback",(function(){return ri})),n.d(w,"subscribe",(function(){return ai})),n.d(w,"unsubscribe",(function(){return oi})),n.d(w,"dispatch",(function(){return ci})),n.d(w,"dispatchResultByTopic",(function(){return ui})),n.d(w,"dispatchSearchResult",(function(){return li})),n.d(w,"dispatchResult",(function(){return di})),n.d(w,"dispatchRaw",(function(){return fi})),n.d(w,"dispatchResultInternal",(function(){return hi})),n.d(w,"dispatchRecords",(function(){return pi})),n.d(w,"dispatchBreadcrumbTrail",(function(){return mi})),n.d(w,"dispatchSorting",(function(){return gi})),n.d(w,"dispatchProductsPerPage",(function(){return vi})),n.d(w,"dispatchPaging",(function(){return yi})),n.d(w,"dispatchPagingItems",(function(){return bi})),n.d(w,"dispatchAsn",(function(){return _i})),n.d(w,"dispatchSingleWordSearch",(function(){return ki})),n.d(w,"dispatchProductDetail",(function(){return wi})),n.d(w,"dispatchCampaigns",(function(){return Ci})),n.d(w,"dispatchPageCampaigns",(function(){return Si})),n.d(w,"dispatchProductCampaigns",(function(){return Pi})),n.d(w,"dispatchShoppingCartCampaign",(function(){return Ei})),n.d(w,"_doCampaingDispatch",(function(){return xi})),n.d(w,"dispatchSuggest",(function(){return Oi})),n.d(w,"dispatchRecommendations",(function(){return Li})),n.d(w,"dispatchSimilarProducts",(function(){return Ii})),n.d(w,"dispatchPredictiveBasket",(function(){return Ti})),n.d(w,"dispatchCompare",(function(){return ji})),n.d(w,"dispatchTagCloud",(function(){return Ri})),n.d(w,"dispatchQuery",(function(){return Mi})),n.d(w,"dispatchNavigationFrame",(function(){return Ai}));var C={};n.r(C),n.d(C,"getSearchParamString",(function(){return Di})),n.d(C,"handleSeoSearch",(function(){return Fi})),n.d(C,"replaceHistoryState",(function(){return Ui})),n.d(C,"replaceDocumentLocation",(function(){return qi})),n.d(C,"pushParameterToHistory",(function(){return Bi})),n.d(C,"getBrowserURL",(function(){return Wi})),n.d(C,"pushSeoToHistory",(function(){return Hi})),n.d(C,"pushFilterUrlToHistory",(function(){return Ki})),n.d(C,"extractCategoryPathFieldName",(function(){return Yi})),n.d(C,"changeRecordPropertyName",(function(){return Gi})),n.d(C,"getQueryFromSearchParams",(function(){return Xi})),n.d(C,"addRenameRecordFields",(function(){return Zi})),n.d(C,"removeRenameRecordFields",(function(){return Ji})),n.d(C,"isNg",(function(){return $i})),n.d(C,"isPriceField",(function(){return Qi})),n.d(C,"trackingHelper",(function(){return er}));var S={};n.r(S),n.d(S,"addFFEvent",(function(){return Tr})),n.d(S,"addFailCallback",(function(){return jr})),n.d(S,"removeFailCallback",(function(){return Rr})),n.d(S,"addBeforeHistoryPushCallback",(function(){return Mr})),n.d(S,"removeBeforeHistoryPushCallback",(function(){return Ar})),n.d(S,"addBeforeDispatchingCallback",(function(){return Nr})),n.d(S,"removeBeforeDispatchingCallback",(function(){return Dr})),n.d(S,"getCurrentResult",(function(){return Fr}));var P={};n.r(P),n.d(P,"click",(function(){return Gr})),n.d(P,"cart",(function(){return Xr})),n.d(P,"checkout",(function(){return Zr})),n.d(P,"login",(function(){return Jr})),n.d(P,"recommendationClick",(function(){return $r})),n.d(P,"searchFeedback",(function(){return Qr})),n.d(P,"landingPageClick",(function(){return ea}));var E={};n.r(E),n.d(E,"Tracking12",(function(){return aa})),n.d(E,"trackingManager",(function(){return oa}));var x={};n.r(x),n.d(x,"sortboxConf",(function(){return sa}));var O={};n.r(O),n.d(O,"MultiAttributeParsing",(function(){return tn})),n.d(O,"ProductTeaserCampaignProcessor",(function(){return nn})),n.d(O,"use",(function(){return da}));var L={};n.r(L),n.d(L,"response",(function(){return O}));var I={common:{logLevel:"warn"},communication:{fieldRoles:void 0,currentSearchResult:void 0,navigationLayer:{},navigationResult:{},eventCounter:0,beforeHistoryPushCallbacks:[],globalCommunicationParameter:new(function(){function e(){p()(this,e),this.ajax=!0,this.useUrlParameters=!0,this.useBrowserHistory=!0,this.useCache=!1,this.appendUnknownParameter=!0,this.isSessionIdDisabled=!1,this.keepFilters=!1,this.useAsn=!0,this.useFoundWords=!1,this.useCampaigns=!0,this.generateAdvisorTree=!1,this.disableCache=!1,this.usePersonalization=!0,this.useSemanticEnhancer=!0,this.useAso=!0,this.useSeo=!1,this.seoPrefix="",this.sid="",this.currencyCountryCode="",this.currencyCode="",this.currencyFields="price",this.currencyMinDigits="2",this.currencyMaxDigits="2",this.useFilterUrl=!1,this.filterUrlPrefix="",this.onlySearchParams=!1,this.parameterWhitelist="",this.sortUrlParametersAlphabetically=!1,this.categoryPage="",this.ngApi=""}return f()(e,[{key:"useUrlParameter",set:function(e){U("useUrlParameter","useUrlParameters"),this.useUrlParameters=e},get:function(){return U("useUrlParameter","useUrlParameters"),this.useUrlParameters}},{key:"useFilterURL",set:function(e){U("useFilterURL","useFilterUrl"),this.useFilterUrl=e},get:function(){return U("useFilterURL","useFilterUrl"),this.useFilterUrl}}]),e}()),globalElementValues:new function e(){p()(this,e),this.currentFFSearchBoxValue=""},globalCustomUrls:new function e(){p()(this,e)},globalSearchParameter:void 0}},T={trace:5,debug:4,info:3,warn:2,error:1};function j(e){return T[I.common.logLevel]>=T[e]}function R(e){if(j("trace")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["trace",e].concat(n))}}function M(e){if(j("debug")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["debug",e].concat(n))}}function A(e){if(j("info")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["info",e].concat(n))}}function N(e){if(j("info")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["log",e].concat(n))}}function D(e){if(j("warn")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["warn",e].concat(n))}}function F(e){if(j("error")){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];V.apply(void 0,["error",e].concat(n))}}function V(e,t){for(var n=arguments.length,i=new Array(2<n?n-2:0),r=2;r<n;r++)i[r-2]=arguments[r];var a,o;"function"==typeof console[e]?(a=console)[e].apply(a,[t].concat(i)):(o=console).log.apply(o,[t].concat(i))}function U(e,t){var n=t?" Use '".concat(t,"' instead."):"";D("'".concat(e,"' is deprecated and may be removed in a future release.").concat(n))}var q=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduceRight((function(e,t){return t(e)}),e)}},B=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduce((function(e,t){return t(e)}),e)}},z=function(e){return function(t){return function(n){return n.reduce((function(t,n){var i=l()(t),r=i[0],a=i.slice(1);return[e(r,n),r].concat(c()(a))}),[t]).reverse().slice(1)}}},W=function(e){return null==e},H=function(e){return function t(n,i,r){return Object.freeze({case:function(a,o){return n||!0!==a(e)?t(n,i,r):t(!0,o,!0)},case_:function(a,o){return n||!0!==a(e)?t(n,i,r):t(!0,o,!1)},otherwise:function(t){return n?r?i:i(e):t},otherwise_:function(t){return n?r?i:i(e):t(e)}})}(!1,void 0,!1)},K=function(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")},Y=function(e){return"__NO_ENC_".concat(e)},G=function(e){return function(t){if("function"==typeof Array.prototype.find)return t.find(e);for(var n=0;n<t.length;++n)if(e(t[n]))return t[n]}},X=function(e){return function(t){return t.reduce((function(t,n){return t.push.apply(t,c()(e(n))),t}),[])}},Z=function(e){if("function"==typeof Object.values)return Object.values(e);var t=[];return Object.keys(e).forEach((function(n){return t.push(e[n])})),t},J=function(e,t){return"function"==typeof Array.prototype.includes?e.includes(t):e.some((function(e){return e===t}))},$=window.encodeURIComponent,Q=window.decodeURIComponent,ee=function(e){return $(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16)})).replace(/~/g,"%7E")},te=function(e){return"string"==typeof e?Q(e.replace(/\+/g," ")):e},ne=function(e){return e.replace(/%20/g,"+")},ie=B(ee,ne),re=function(e){return e.replace(/\//g,"%2F")},ae=ie,oe=ie,se=ie,ce=Object.freeze({v4:"v4",v3:"v3",v2:"v2"}),ue=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";return ce[e.toLowerCase()]},le=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";return 0<=Object.keys(ce).indexOf(e.toLowerCase())},de=[{value:12,default:!0,selected:!0},{value:24,default:!1,selected:!1},{value:36,default:!1,selected:!1}],fe={get entries(){return de},set entries(e){de=e.slice().map((function(e){return e.default=!1,e}))}};function he(e){return"filter".concat(e)}function pe(e){var t=e.split("/")[0];return/ROOT$/.test(t)?t:"".concat(t,"ROOT")}function me(e){return ge(e,{campaign:ve,count:ye,id:ve,masterId:ve,price:ye,purchaserId:ve,sid:ve,title:ve,userId:ve})}function ge(e,t){var n=Object.assign({},e);return Object.keys(t).forEach((function(e){n.hasOwnProperty(e)&&g()(n[e])!==t[e].type&&(n[e]=t[e].convert(n[e]))})),n}var ve={type:"string",convert:String},ye={type:"number",convert:function(e){return"string"!=typeof e?(D("Could not parse value ".concat(e,". Expected value of type String.")),e):parseFloat(e)}},be={type:"boolean",convert:function(e){return"true"!==e&&"false"!==e?(D("Could not parse value ".concat(e,". Expected value to be either 'true' or 'false'.")),e):"true"===e}},_e=function(e){return"string"==typeof e&&"ng"===e.toLowerCase()},ke=Ie,we=function(e,t){return i=e,r=ue(t),n=H(i).case(Pe.isSuggest,Te).case(Pe.isSimilarProducts,je).case(Pe.isRecommendation,Re).case(Pe.isCompare,Ae).case(Pe.isNavigation,(o=r,function(e){ze(e,"facets","groups"),e.groups.forEach(Ue(o,e.filters));var t=We({},e);for(var n in e)delete e[n];return e.searchResult=t,e})).case(Pe.isAnyCampaign,Ne).case(Pe.isGetRecords,function(e){return function(n){return(e===ce.v4?n.records:n).map(t)};function t(e){var t=Object.keys(e).reduce((function(t,n){var i=e[n];if(Array.isArray(i))if(Array.isArray(i[0])){var r=i[0],a=[""].concat(c()(z((function(e,t){return"".concat(e,"/").concat(t)}))("")(r))),o=r.map((function(e,t){return"".concat(n,"ROOT").concat(a[t],"=").concat(e)}));t[n]="|"+o.join("|")+"|"}else t[n]=i.join("|");else if("object"==typeof i){var s=X((function(e){return i[e].map((function(t){return"".concat(e,"=").concat(t)}))}))(Object.keys(i));t[n]="|"+s.join("|")+"|"}else t[n]=i;return t}),{});return{record:t,id:Ye(I.communication.fieldRoles)("trackingProductNumber").map((function(e){return t[e]}))}}}(r)).case(Pe.isPredBasket,Me).otherwise((a=r,function(e){var t,n,i,r;for(var o in ze(e,"breadCrumbTrail","breadCrumbTrailItems"),function(e){function t(e){e.answers.forEach((function(e){return ze(e,"searchParams","params")}))}(e||[]).forEach((function(e){"ADVISOR"===(e.flavour||"").toUpperCase()&&(e.activeQuestions.forEach(t),e.advisorTree.forEach(t)),e.hits&&(ze(e,"hits","pushedProductsRecords"),e.pushedProductsRecords.forEach((function(e){ze(e,"values","record"),e.masterValues&&We(e.masterValues,Ve(e))})))}))}(e.campaigns),e.channel=e.searchParams.channel,t=e.facets,n=e.filters,i=t.reduce((function(e,t){return e[t.name]=t.filterStyle,e}),{}),n.forEach((function(e){"SLIDER"===(i[e.name]||"").toUpperCase()&&e.values.forEach((function(e){return e.value=e.value.replace(/^\[((?:\d+\.)?\d+),((?:\d+\.)?\d+)]$/,"$1-$2")})),ze(e,"values","valueList")})),ze(e,"facets","groups"),e.groups.forEach(Ue(a,e.filters)),e.fieldRoles={brand:(r=e.fieldRoles).brand,campaignProductNumber:r.productNumber,deeplink:r.deeplink,description:r.description,displayProductNumber:r.productNumber,ean:r.ean,imageUrl:r.imageUrl,masterArticleNumber:r.masterId,price:r.price,productName:r.productName,trackingProductNumber:r.productNumber},function(e){var t,n,i,r,a,o,s,c=fe.entries;t=c,o=(a=(r=e).paging).hitsPerPage,s=a.defaultHitsPerPage,n={value:s,default:!0,selected:o===s,searchParams:We({},r.searchParams)},(i=G((function(e){return e.value===n.value}))(t))?t[t.indexOf(i)]=n:t.splice(0,1,n),e.resultsPerPageList=[];var u=function(e){var t=e.searchParams[Se.productsPerPage];if(t)return t;for(var n=0;n<fe.entries.length;n++){var i=fe.entries[n];if(!0===i.default)return i.value}}(e);c.forEach((function(t){var n=We({},t);n.searchParams=Ke("page")(e.searchParams),n.searchParams[Se.productsPerPage]=n.value,n.selected=n.value===u,e.resultsPerPageList.push(n)}))}(e),e.paging=function(e){return{currentPage:e.currentPage,firstLink:t(n(e,1)),lastLink:t(n(e,e.pageCount)),nextLink:t(e.nextLink),pageCount:e.pageCount,pageLinks:function(){if(e.pageCount<=1)return[];for(var i=[],r=Math.max(e.currentPage-4,0),a=Math.min(r+9,e.pageCount);r<a;r++)i.push(t(n(e,r+1)));return i}(),previousLink:t(e.previousLink),resultsPerPage:e.hitsPerPage};function t(e){if(e)return{caption:e.number+"",number:e.number,searchParams:bt(e.searchParams),currentPage:e.currentPage}}function n(e,t){var n=e.nextLink||e.previousLink;if(n&&!(e.pageCount<t)){var i=bt(n);return i.number=t,i.caption=i.number+"",i.currentPage=e.currentPage===t,i.searchParams&&(i.searchParams.page=t),i}}}(e.paging),ze(e,"hits","records"),De(e.records),ze(e,"articleNumberSearch","resultArticleNumberStatus",{modifier:qe}),ze(e,"totalHits","resultCount"),e.resultStatus=e.resultCount?"resultsFound":void 0,ze(e,"tookTotal","searchTime"),ze(e,"scoreFirstHit","simiFirstRecord"),ze(e,"scoreLastHit","simiLastRecord"),e.singleWordResults=e.singleWordResults.map((function(e){return ze(e,"totalHits","recordCount"),De(e.previewRecords),e})),ze(e,"sortItems","sortsList",{modifier:Be}),e.searchResult={},We(e.searchResult,e),e)"searchResult"!==o&&delete e[o];return delete e.searchResult.searchResult,e})),function(e){var i=n(e);return function e(n){null!=n&&"object"==typeof n&&(Array.isArray(n)?n.forEach(e):Object.keys(n).forEach((function(i){"searchParams"===i||"params"===i?(n.__ngSearchParams=n[i],n[i]=function(e){if(null!=e){var n=Ye(e),i=["articleNumberSearch","hitsPerPage","maxCountVariants","page","query","searchField"].reduce((function(e,t){return e+n(t).map((function(e,t){return"".concat(oe(t),"=").concat(oe(e),"&")}))}),""),r=n("filters").map((function(e){var n=ue(t);return e.map((function(e){return e.values.map((function(t){return"filter=".concat(oe(e.name+":"+(r=(i=t).value,a=i.exclude,o=n===ce.v4&&Array.isArray(r)?r.map(re).join("/"):r,a?"!"+o:o)),"&");var i,r,a,o})).join("")})).join("")})),a=n("marketIds").map((function(e){return e.map((function(e){return"marketId=".concat(e,"&")})).join("")})),o=n("advisorStatus").map((function(e,t){var n=e.answerPath,i=e.id;return"".concat(oe(t),"=").concat(oe(i),"-").concat(oe(n),"&")})),s=n("sortItems").map((function(e){return e.map((function(e){var t=e.name,n=e.order;return"sort=".concat(oe(t),":").concat(oe(n),"&")})).join("")})),c=n("customParameters").map((function(e){return e.map((function(e){var t=e.name,n=e.values;return"".concat(oe(t),"=").concat(oe(n[0]),"&")})).join("")}));return Ie({type:"search",url:I.communication.globalSearchParameter.url,channel:e.channel},t).url+"?"+i+r+a+o+s+c.slice(0,-1)}}(n[i])):e(n[i])})))}(i),M("[NgAdapter] normalized result:",i),i};var n,i,r,a,o},Ce=function(e){return e.replace(/ROOT\b/,"")},Se={query:"query",page:"page",productsPerPage:"hitsPerPage",sort:"sort",filter:"filter",searchField:"searchField",noArticleNumberSearch:"articleNumberSearch",useASN:"useAsn",useFoundWords:"useFoundWords",useCampaigns:"useCampaigns",navigation:"navigation",idsOnly:"idsOnly",useKeywords:"useKeywords",generateAdvisorTree:"generateAdvisorTree",disableCache:"useCache",sid:"sid",purchaserId:"purchaserId",marketId:"marketId"},Pe=Object.freeze({isSuggest:function(e){return"suggest"===e.type},isAnyCampaign:function(e){var t=e.type;return/campaigns?$/i.test(t)},isProductCampaign:function(e){return"productCampaign"===e.type},isPageCampaign:function(e){return"pageCampaigns"===e.type},isShoppingCartCampaign:function(e){return"shoppingCartCampaign"===e.type},isSimilarProducts:function(e){var t=e.type;return/^similarProducts($|:.+)/i.test(t)},isTracking:function(e){var t=e.event;return-1<Ee.indexOf(t)},isGetRecords:function(e){return"getRecords"===e.type},isRecommendation:function(e){var t=e.type;return/^recommendation($|:.+)/i.test(t)},isCompare:function(e){var t=e.type;return/^compare($|:.+)/i.test(t)},isNavigation:function(e){return"navigation"===e.type},isNavigationSearch:function(e){return!0===e.navigation||"true"===e.navigation||"true"===(e.navigation||e[Y("navigation")]||[])[0]},isPredBasket:function(e){return"predictiveBasket"===e.type},isSort:function(e){return"sort"===e.type}}),Ee=["cart","checkout","click","feedback","log","login","recommendationClick","landingPageClick"],xe=Object.freeze({cart:me,checkout:me,click:function(e){return ge(e,{campaign:ve,id:ve,masterId:ve,page:ye,pageSize:ye,pos:ye,purchaserId:ve,query:ve,score:ye,sid:ve,title:ve,userId:ve})},feedback:function(e){return ge(e,{message:ve,positive:be,query:ve,sid:ve})},landingPageClick:function(e){return ge(e,{campaign:ve,id:ve,masterId:ve,pageId:ve,purchaserId:ve,sid:ve,title:ve,userId:ve})},login:function(e){return ge(e,{purchaserId:ve,sid:ve,userId:ve})},recommendationClick:function(e){return ge(e,{id:ve,mainId:ve,masterId:ve,purchaserId:ve,sid:ve,title:ve,userId:ve})}}),Oe=Object.freeze({compare:function(e){return e.ids.map((function(e){return"&id=".concat(e)})).join("")},getRecords:function(e){return(Array.isArray(e.recordId)?e.recordId:[e.recordId]).map((function(e){return"&productNumber=".concat(e)})).join("")}}),Le=Object.freeze({getRecords:Ke("recordId"),tracking:Ke("url","version","event","channel"),navigationSearch:Ke("query"),sort:Ke("name","order")});function Ie(e,t){if(!le(t))throw Error("Requested NG API version (".concat(t,") is not supported by this version of WebComponents. Choose one of [").concat(Object.keys(ce).join(", "),"] for the NG API setting or try updating your WebComponents. https://github.com/FACT-Finder-Web-Components/ff-web-components/releases"));var n=e.url.replace(/\/*$/,"/"),i=ue(t);return H(e).case_(Pe.isNavigation,(function(){return r("".concat(n,"rest/").concat(i,"/navigation/category/").concat(e.channel))})).case_(Pe.isSuggest,(function(){return r("".concat(n,"rest/").concat(i,"/suggest/").concat(e.channel))})).case_(Pe.isProductCampaign,(function(){return r("".concat(n,"rest/").concat(i,"/campaign/").concat(e.channel,"/product"))})).case_(Pe.isPageCampaign,(function(){return r("".concat(n,"rest/").concat(i,"/campaign/").concat(e.channel,"/page"))})).case_(Pe.isShoppingCartCampaign,(function(){return r("".concat(n,"rest/").concat(i,"/campaign/").concat(e.channel,"/shoppingcart"))})).case_(Pe.isSimilarProducts,(function(){return r("".concat(n,"rest/").concat(i,"/records/").concat(e.channel,"/similar"))})).case_(Pe.isRecommendation,(function(){return r("".concat(n,"rest/").concat(i,"/records/").concat(e.channel,"/recommendation"))})).case_(Pe.isCompare,(function(){return r("".concat(n,"rest/").concat(i,"/records/").concat(e.channel,"/compare"),Oe.compare(e))})).case_(Pe.isGetRecords,(function(){return r("".concat(n,"rest/").concat(i,"/records/").concat(e.channel),Oe.getRecords(e),Le.getRecords(e))})).case_(Pe.isTracking,(function(){return r("".concat(n,"rest/").concat(i,"/track/").concat(e.channel,"/").concat(e.event),"",Le.tracking(e))})).case_(Pe.isPredBasket,(function(){return r("".concat(n,"rest/").concat(i,"/predictivebasket/").concat(e.channel))})).case_(Pe.isNavigationSearch,(function(){return r("".concat(n,"rest/").concat(i,"/navigation/").concat(e.channel),"",Le.navigationSearch(e))})).case_(Pe.isSort,(function(){return r("".concat(n,"rest/").concat(i,"/search/").concat(e.channel),"",Le.sort(e))})).otherwise_((function(){return r("".concat(n,"rest/").concat(i,"/search/").concat(e.channel))}));function r(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:e;return{url:t,addlParams:n,ngEvent:Ke("navigation",Y("navigation"))(i)}}}function Te(e){return e}function je(e){return ze(e,"hits","records",{modifier:Fe}),e}function Re(e){return ze(e,"hits","resultRecords",{modifier:Fe}),e}function Me(e){return e}function Ae(e){return e.attributes.forEach((function(e){return ze(e,"name","attributeName")})),e.records.forEach((function(e){return ze(e,"values","record")})),e}function Ne(e){return e.forEach((function(e){ze(e,"hits","pushedProductsRecords",{modifier:Fe})})),e}function De(e){e.forEach((function(e){We(e.masterValues,Ve(e)),ze(e,"masterValues","record"),ze(e,"score","searchSimilarity")}))}function Fe(e){return e.forEach((function(e){return ze(e,"values","record"),e})),e}function Ve(e){var t=e.variantValues,n=void 0===t?{}:t,i=Object.keys(n),r=i.filter((function(e){return"true"===n[e].isMaster}))[0];return n[r||i[0]]||{}}function Ue(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],n=function(e){return function(t){return e===t}};return function(i,r){var a,o=H(e).case(n(ce.v4),B((a=i.associatedFieldName,function(e){return e.associatedFieldName=a,e}),c,s)).case(n(ce.v3),B(c,s)).otherwise(s);function s(e){if(i.__associatedFieldNameV4=e.associatedFieldName,"TREE"===i.filterStyle){var n=pe(e.associatedFieldName);if(0===e.clusterLevel)e.associatedFieldName=n;else if(e.searchParams&&e.searchParams.filters){var r=G((function(t){return t.name===e.associatedFieldName}))(e.searchParams.filters.concat(t)),a=r?(r.values||r.valueList)[0].value:e.searchParams.filters[0].values[0].value,o="".concat(n,"/").concat(ft(a)?a.map(re).join("/"):a),s=o.split("/").length===e.clusterLevel+2;e.associatedFieldName=s?o.substring(0,o.lastIndexOf("/")):o}}return ze(e,"text","name"),e.hasOwnProperty("totalHits")&&ze(e,"totalHits","recordCount",{defaultVal:0}),e}function c(e){return"IMPLICIT"===e.selected?(e.selected=!0,e.implicitSelection=!0):"TRUE"===e.selected?(e.selected=!0,e.implicitSelection=!1):"FALSE"===e.selected?(e.selected=!1,e.implicitSelection=!1):console.warn("[NgAdapter/renameProperty] FacetElement property 'selected' has unknown value \"".concat(e.selected,'". Property not converted.')),e}i.groupOrder=r,(i.elements||[]).forEach(o),(i.selectedElements||[]).forEach(o),"SLIDER"===i.filterStyle&&0===i.elements.length&&(i.elements=bt(i.selectedElements)),"CATEGORY_PATH"===i.type&&(i.type="categoryPath")}}function qe(e){return e?"resultsFound":"noArticleNumberSearch"}function Be(e){return e.map((function(e){var t=bt(e);return t.name="Relevancy"===t.name?null:t.name,t}))}function ze(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},r=i.modifier,a=void 0===r?He:r,o=i.defaultVal,s=void 0===o?void 0:o;if(t&&n){var c=Object.getOwnPropertyDescriptor(e,t);if(void 0!==c)return delete e[t],void(e[n]=a(c.value));void 0!==s?(console.warn('[NgAdapter/renameProperty] No property "'.concat(t,'" on provided object. Creating new property "').concat(n,'" with default value "').concat(s,'".'),e),e[n]=s):console.warn('[NgAdapter/renameProperty] No property "'.concat(t,'" on provided object. New property "').concat(n,'" was not created.'),e)}}function We(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(n[a]=r[a])}return n}function He(e){return e}function Ke(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){var n=bt(e);return t.forEach((function(e){return delete n[e]})),n}}function Ye(e){return function(t){return{map:e&&e.hasOwnProperty(t)?function(n){return n(e[t],t)}:function(){return""}}}}function Ge(){if(!_e(I.communication.globalSearchParameter.version))return[];var e=I.communication.globalCommunicationParameter.categoryPage;return e?e.split(","):[]}var Xe="NG",Ze=Object.freeze({predBasket:"predictiveBasket"}),Je=Object.freeze({predBasket:Ze.predBasket}),$e=Object.freeze({predBasket:"predictiveBasket",sandboxMode:"sandboxMode"}),Qe=Object.freeze((i={},o()(i,$e.predBasket,{enable:!1,topic:Ze.predBasket,eventType:Je.predBasket}),o()(i,$e.sandboxMode,{enable:!1}),i));function et(e,t){if(e===Ze.predBasket){if(!Qe[$e.predBasket].enable)throw it($e.predBasket);nt(t)<nt(Xe)&&D("".concat(Ze.predBasket," requires FACT-Finder version ").concat(Xe," or higher."))}}function tt(e,t){if(e===Je.predBasket){if(!Qe[$e.predBasket].enable)throw it($e.predBasket);if(nt(t)<nt(Xe))throw Error("".concat(Je.predBasket," requires FACT-Finder version ").concat(Xe," or higher."))}}function nt(e){if(_e(e))return 1e3;var t=parseFloat(e);return isNaN(t)?-1/0:t}function it(e){return Error("To use this experimental API you have to set `factfinder.__experimental.".concat(e,".enable = true`."))}var rt=function(e,t,n){en.fireCustomEvent("ffUrlWrite",!0,!1,document,{urlDict:e,url:t,historyState:n})};function at(e,t,n){var i=Y(t),r=e[i]||[];return Array.isArray(r)||(r=[r]),r.push(n),e[i]=ot(r),e}function ot(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];return e.filter((function(t,n){return e.indexOf(t)===n}))}var st={_typeFlag:"HistoryEvent",create:function(e){return{searchParams:e.searchParams||(e.searchResult?e.searchResult.searchParams:"")}}};function ct(){try{return window.history.state||{}}catch(e){return M(e),{}}}function ut(e){if(e)try{e()}catch(e){F("could not execute callback: ",e)}}function lt(e){if(e&&1===e.nodeType){var t=document.createElement("div");return t.appendChild(e),t.innerHTML}return""}function dt(e){var t=document.createElement("div");return t.innerHTML=e,1<t.childElementCount?t.children:t.firstElementChild}function ft(e){return"[object Array]"===Object.prototype.toString.call(e)}function ht(e){return"[object Object]"===Object.prototype.toString.call(e)}function pt(e){return"[object Function]"===Object.prototype.toString.call(e)}function mt(){var e=document.createElement("div"),t={transition:"transitionend",OTransition:"otransitionend",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(var n in t)if(t.hasOwnProperty(n)&&void 0!==e.style[n])return t[n]}function gt(e,t,n){n.style[e]=t}function vt(e,t){return function(){if(e)try{e.apply(window,arguments)}catch(t){F("could not invoke function fn1 ["+e+"] got error: ",t)}if(t)try{t.apply(window,arguments)}catch(t){F("could not invoke function fn2 ["+e+"] got error: ",t)}}}function yt(e,t,n){try{return e.addEventListener?e.addEventListener(t,n):e.attachEvent?e.attachEvent("on"+t,n):e[t]=n,!0}catch(e){return F("could not add eventlistener: ",e),!1}}function bt(e){var t;if(null==e||"object"!=g()(e))return e;if(e instanceof Array){t=[];for(var n=0,i=e.length;n<i;n++)t[n]=bt(e[n]);return t}if(e instanceof Object){for(var r in t={},e)e.hasOwnProperty(r)&&(t[r]=bt(e[r]));return t}throw new Error("Unable to copy obj! Its type isn't supported.")}function _t(e,t){try{for(var n=e.attributes,i=0;i<n.length;i++){var r=n[i];try{"for-group"!==r.name&&t.setAttribute(r.name,r.value)}catch(e){F(e)}}}catch(e){F("could not copy attribute: ",e)}}function kt(e){return 1===e.nodeType&&-1<e.tagName.indexOf("-")}function wt(){var e,t=document.createElement("fakeelement"),n={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",MSTransition:"msTransitionEnd",OTransition:"oTransitionEnd",transition:"transitionend"};for(e in n)if(void 0!==t.style[e])return n[e]}function Ct(e,t){t=t.toUpperCase();var n=e.parentNode;return n&&n.nodeName?n.nodeName===t?n:Ct(n,t):void 0}function St(e){var t=Pt(e);return t?Et(t):{}}function Pt(e){return e||(e=window.location.href),e.split("?")[1]}function Et(e,t){var n={};if(e)for(var i=e.split("&"),r=0;r<i.length;r++){var a=i[r],o=(a=a.split("="))[0],s=!0===t?d.fixedDecodeURIComponent(a[1]):a[1];s&&(n[o]?n[o].push(s):n[o]=[s])}return n}function xt(e){if(e!==Object(e))throw new TypeError("Object.keys called on a non-object");var t,n=[];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.push(t);return n}function Ot(e){return e.sort((function(e,t){var n=e.toLowerCase().trim(),i=t.toLowerCase().trim();return n<i?-1:i<n?1:0}))}function Lt(e){return-1<e.indexOf("filter")}function It(e,t){var n=q((function(e){return t?Ot(e):e}),(function(t){return t.filter((function(t){return!ht(e[t])}))}),xt)(JSON.parse(JSON.stringify(e))),i=[];return n.forEach((function(n){var r,a=e[n];!0===t&&Lt(n)&&(a[0]=q(d.fixedEncodeURIComponent,Tt,d.fixedDecodeURIComponent)(a[0])),ft(a)?i.push(a.reduce((r=n,function(e,t){return e+(e?"&":"")+r+"="+t}),"")):i.push(n+"="+a)})),"?"+i.join("&")}function Tt(e){if(-1<e.indexOf("~~~")||1<e.indexOf("___")){var t=-1<e.indexOf("~~~")?"~~~":"___";return Ot(e.split(t)).join(t)}return e}function jt(e,t,n){var i=window.location.href.split("?"),r=Et(i[1]);void 0!==t?r[e]=t:delete r[e];var a=i[0]+It(r,n);if(Qe[$e.sandboxMode].enable){var o=function(){var e={historyState:{}};return en.fireCustomEvent("ffGetHistory",!0,!1,document,e),e}();rt(r,a,o)}else history.replaceState(ct(),"",a)}function Rt(e,t){var n,i=[];for(n in e)e.hasOwnProperty(n)&&t.test(n)&&i.push(n);return i}function Mt(e,t){var n={};for(var i in t){var r=t[i];void 0!==r&&""!==r&&(n[i]=t[i])}for(var a in e)void 0===n[a]&&(n[a]=e[a]);return n}function At(e){e||(e=window.location.href),-1<e.indexOf("http://")?e=e.replace("http://",""):-1<e.indexOf("https://")&&(e=e.replace("https://",""));var t=e.split("/");return 1===t.length?Pt(t[0]):t[t.length-1]}function Nt(e,t,n,i,r){var a=Object.assign(document.createEvent("Event"),r);a.initEvent(e,t,n),i=i||document;try{i.dispatchEvent(a)}catch(e){F(e)}}function Dt(e,t,n){var i=n.length;return 0===n.length&&(i=1),e.substr(0,t)+n+e.substr(t+i)}function Ft(e,t,n){if(!(t+n>e.length))return e.substr(0,t)+e.substr(t+n)}function Vt(e){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n="",i=0;i<e;i++)n+=t.charAt(Math.floor(Math.random()*t.length));return n}function Ut(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return e&&(e.match(/^filter.+/g)||e.match(/^sort.+/g)||"channel"===e||"query"===e||"sid"===e||"productsPerPage"===e||"page"===e||"searchField"===e||"noArticleNumberSearch"===e||"useAsn"===e||"useFoundWords"===e||"useCampaigns"===e||"navigation"===e||"idsOnly"===e||"useKeywords"===e||"generateAdvisorTree="===e||"disableCache"===e||"followSearch"===e||"usePersonalization"===e||"useSemanticEnhancer"===e||"useAso"===e||"omitContextName"===e||"log"===e||t&&"filter"===e||t&&"sort"===e||t&&"marketId"===e||t&&"hitsPerPage"===e)}var qt=["query","filter","sort","page","productsPerPage"],Bt={store:{},setItem:function(e,t){this.isSupported()?void 0!==t?window.localStorage.setItem(e,t):window.localStorage.removeItem(e):void 0!==t?this.store[e]=t:delete this.store[e],"ff-basket"===e&&Nt("ff-basket-changed",!0,!1,document)},getItem:function(e){return this.isSupported()?window.localStorage.getItem(e):this.store[e]},isSupported:function(){try{var e="__TEST__KEY__",t=window.localStorage;return t.setItem(e,"1"),t.removeItem(e),!0}catch(e){return!1}}};function zt(e){if(e)for(;e.firstChild;)e.removeChild(e.firstChild)}function Wt(e){return null!=e&&""!==e}function Ht(e){if(e)return"".concat(e.associatedFieldName,"/").concat(e.name)}function Kt(e,t){var n=e.split("?"),i=(e=n[0],Et(n[1]));return Xt(i),e+It(i,t)}var Yt=ee,Gt=te;function Xt(e){return Object.keys(e).forEach((function(t){var n=e[t];if(function(e){return/^__NO_ENC_/.test(e)}(t))return e[function(e){return e.replace(/^__NO_ENC_/,"")}(t)]=n,void delete e[t];ft(n)?e[t]=n.filter((function(e){return Zt(t,e)})).map(Yt).map(ne):Zt(t,n)&&(e[t]=ne(Yt(n)))})),e}function Zt(e,t){return void 0!==t&&!/^ff-.*/.test(e)&&!ht(t)&&!pt(t)&&"number"!=typeof t}function Jt(e,t){var n=e.split("?"),i=(e=n[0],Et(n[1]));return $t(i),e+It(i,t)}function $t(e){return Object.keys(e).forEach((function(t){var n=e[t];e[t]=ft(n)?n.map(Gt):Gt(n)})),e}var Qt=Object.assign({},a);Object.defineProperty(Qt,"logLevel",{get:function(){return I.common.logLevel},set:function(e){return I.common.logLevel=e}});var en=Object.assign(Object.assign({Logger:Qt},y),b);function tn(e){var t=e||{},n=t.srcProperty,i=void 0===n?void 0:n,a=t.storeInProperty,o=void 0===a?void 0:a,s=t.keepOriginalInProperty,c=void 0===s?void 0:s,u=t.entrySeparator,l=void 0===u?"|":u,d=t.keyValueSeparator,f=void 0===d?"=":d;if(!i||"string"!=typeof i)throw h("srcProperty");if(!o||"string"!=typeof o)throw h("storeInProperty");if(void 0!==c&&("string"!=typeof c||""===c))throw p("keepOriginalInProperty");if("string"!=typeof l||""===l)throw p("entrySeparator");if("string"!=typeof f||""===f)throw p("keyValueSeparator");return Object.freeze({topic:"records",handler:function(e){0!==e.length&&(e[0].record.hasOwnProperty(i)?e.forEach((function(e){var t=e.record,n=t[i];"string"==typeof n?(t.hasOwnProperty([o])&&o!==i&&m("Overwriting storeInProperty '".concat(o,"'")),t[o]=n.split(l).filter((function(e){return!!e})).map((function(e){return e.split(f)})).reduce((function(e,t){var n=t[0].split("~~"),i=r()(n,2),a=i[0],o=i[1];return e[a]=e[a]||[],e[a].push({unit:o,value:t[1]}),e}),{}),c&&(t[c]=n)):m("Cannot parse srcProperty '".concat(i,"'. Must be of type 'string', but was '").concat(g()(n),"'. Check if srcProperty is configured correctly"))})):m("srcProperty '".concat(i,"' not found on record")))}});function h(e){return Error(v("Required attribute options.".concat(e," must be a non-empty string")))}function p(e){return Error(v("Optional attribute options.".concat(e," was set to invalid value. Must be a non-empty string")))}function m(e){D(v(e))}function v(e){return"[Middleware:MultiAttributeParsing] ".concat(e)}}function nn(){return Object.freeze({topic:"result",handler:rn})}function rn(e){var t;(t=e.campaigns,t.reduce((function(e,t){return e.concat(t.feedbackTexts.filter((function(e){return!0===e.teaser})))}),[])).forEach((function(t){e.records.splice(t.position-1,0,t);for(var n=t.position;n<e.records.length;n++){var i=e.records[n];i.__ORIG_POSITION__=i.__ORIG_POSITION__||i.position,i.position+=1}}))}function an(){var e=function(){this.type=void 0},t=function(e){return ft(e)?e[0]:e},n=void 0;return{url:void 0,type:void 0,success:void 0,fail:void 0,always:void 0,version:void 0,sid:void 0,query:void 0,channel:void 0,page:void 0,productsPerPage:void 0,sort:void 0,filter:void 0,searchField:void 0,articleNumberSearch:void 0,useASN:void 0,useFoundWords:void 0,useCampaigns:void 0,navigation:void 0,idsOnly:void 0,useKeywords:void 0,generateAdvisorTree:void 0,disableCache:void 0,purchaserId:void 0,marketId:void 0,get cancel(){return e},set cancel(n){W(e)||e===t(n)||D("Property 'cancel' is already set. Overriding."),e=n},get searchImmediate(){return n},set searchImmediate(e){W(n)||n.toString()===t(e)||D("Property 'searchImmediate' is already set. Overriding."),n=e}}}function on(){return Object.assign(Object.assign({},an()),{groupName:void 0,filterName:void 0,selectedMaxValue:void 0,selectedMinValue:void 0,removeAll:void 0,clusterLevel:void 0})}function sn(){return Object.assign(Object.assign({},an()),{value:void 0})}function cn(){var e=an();return e.query="*",e}I.communication.globalSearchParameter=cn();var un="ff_sid",ln="sid",dn={LOCALSTORAGE_SID_PARAM_NAME:un,REQUEST_SID_PARAM_NAME:ln,SESSION_ID_LENGTH:30,setOrCreateSid:function(e){if(!0!==I.communication.globalCommunicationParameter.isSessionIdDisabled){var t=Bt,n=I.communication.globalCommunicationParameter.sid,i=fn(),r=pn();if(n)return e.sid=n,void(i!==n&&t.setItem(un,n));i||(r?(ft(r)&&(r=r[0]),t.setItem(un,r)):fn(!0)),e.sid=fn()}},validateSidLength:function(e){30!==e.length&&F("sid must be exactly ".concat(30," characters long. Was: ").concat(e.length))},readSessionIdFromLocalstorage:fn,writeSessionIdToUrl:hn,readSessionIdFromRequestParams:pn};function fn(e){if(!0!==I.communication.globalCommunicationParameter.isSessionIdDisabled){var t=Bt;return t.getItem(un)||!0!==e||t.setItem(un,Vt(30)),t.getItem(un)}}function hn(e){var t=I.communication.globalCommunicationParameter;if(!0!==t.isSessionIdDisabled&&!0===t.useUrlParameters){var n=pn(!1);if(n&&void 0!==n[0]&&n[0]===e)return;if(e)Bt.setItem(e),jt(ln,e,t.sortUrlParametersAlphabetically);else if(!n){var i=fn(!0);jt(ln,i,t.sortUrlParametersAlphabetically)}}}function pn(e){var t=St().sid;return t||!0!==e||hn(t=fn(!0)),t}var mn={query:"query",channel:"channel",page:"page",productsPerPage:"productsPerPage",sort:"sort",filter:"filter",searchField:"searchField",articleNumberSearch:"noArticleNumberSearch",useASN:"useAsn",useFoundWords:"useFoundWords",useCampaigns:"useCampaigns",navigation:"navigation",idsOnly:"idsOnly",useKeywords:"useKeywords",generateAdvisorTree:"generateAdvisorTree",disableCache:"disableCache",sid:"sid"},gn={query:"query",channel:"channel",page:"page",productsPerPage:"productsPerPage",sort:"sort",filter:"filter",searchField:"searchField",articleNumberSearch:"noArticleNumberSearch",useASN:"useAsn",useFoundWords:"useFoundWords",useCampaigns:"useCampaigns",navigation:"navigation",idsOnly:"idsOnly",useKeywords:"useKeywords",generateAdvisorTree:"generateAdvisorTree",disableCache:"disableCache",sid:"sid"},vn=["dispatchId"],yn=sn(),bn=on(),_n=["url","sid","purchaserId"];function kn(e,t,n){return 6.9==n?Ln(e,t,mn):6.11==n?Ln(e,t,gn):_e(n)?Ln(function(e){var t=e.disableCache;return"true"!==t&&!0!==t||(e.disableCache="false"),delete e.useCache,e}(e),t,Se):Ln(e,t,mn)}function wn(e){return Pn(e=Mt(I.communication.globalSearchParameter,e),I.communication.globalCustomUrls.serachUrl),_e(e.version)?On(e):(En(e,"Search.ff"),kn(e,e.url,e.version))}function Cn(e,t){return xn(t,e)}function Sn(e){var t=Xt(e),n=t.version?t.version:t.version=I.communication.globalSearchParameter.version;if(6.9==n)return Tn(t,mn);if(6.11==n)return Tn(t,gn);if(_e(n)){var i=Mt(jn(I.communication.globalSearchParameter),t);"feedback"===i.event&&delete i.purchaserId,Pn(i,I.communication.globalCustomUrls.trackingUrl);var r=ke(i,I.communication.globalCommunicationParameter.ngApi);return r.url+It(r.ngEvent)}return Tn(t,gn)}function Pn(e,t){void 0!==t&&""!==t&&(e.url=t)}function En(e,t){"/"===e.url[e.url.length-1]?e.url=e.url+t:e.url="".concat(e.url,"/").concat(t)}function xn(e,t){return t=Mt(Et(Pt(e),!0),t),Pn(t=Mt(I.communication.globalSearchParameter,t),I.communication.globalCustomUrls.serachUrl),_e(t.version)?On(t):(En(t,"Search.ff"),kn(t,t.url,t.version))}function On(e){var t,n=(!(t=function(e){if(!ft(e.filter))return e;var t=ot(e.filter);return e.filter=t.filter((function(e,t,n){var i=e+"/";return!n.some((function(e){return 0===e.indexOf(i)}))})),e}(e)).marketId||ft(t.marketId)||(t.marketId=t.marketId.toString().split(",")),t),i=ke(n,I.communication.globalCommunicationParameter.ngApi),r=i.url,a=i.addlParams,o=i.ngEvent;return kn(o,r,o.version)+a}function Ln(e,t,n){var i="?"===t[t.length-1]?t:t+"?";if(e){var r=JSON.parse(JSON.stringify(e));if(vn.forEach((function(e){return delete r[e]})),r.type){var a=r.type;Xt(r),r.type=a}var o=!0===I.communication.globalCommunicationParameter.useSeo&&-1!==t.indexOf("Search.ff"),s="true"===String(r.navigation);for(var c in(o||s)&&delete r.query,n)r[c]&&(ft(r[c])?i=In(c,r[c],i):"function"!=typeof r[c]&&"object"!=typeof r[c]&&(i+=n[c]+"="+r[c]+"&"));if(!0===I.communication.globalCommunicationParameter.appendUnknownParameter)for(var c in r)c in yn||c in bn||(ft(r[c])?i=In(c,r[c],i):"function"!=typeof r[c]&&"object"!=typeof r[c]&&(i+=c+"="+r[c]+"&"));i=i.substring(0,i.length-1)}return i}function In(e,t,n){for(var i=0;i<t.length;i++){var r=t[i];"function"!=typeof r&&"object"!=typeof r&&(n+="".concat(e,"=").concat(r,"&"))}return n}function Tn(e,t){return Pn(e=Mt(jn(I.communication.globalSearchParameter),e),I.communication.globalCustomUrls.trackingUrl),En(e,"Tracking.ff"),Ln(e,e.url,t)}function jn(e){var t={};if(e)for(var n=0;n<_n.length;n++){var i=_n[n];e[i]&&(t[i]=e[i])}return t}var Rn=Object.freeze({isSearchResult:function(e){var t=e.type;return-1<["search","filter","sort","ppp","paging","navigation","bct"].indexOf(t)},isSuggest:function(e){return"suggest"===e.type},isRecommendation:function(e){var t=e.type;return/^recommendation/i.test(t)},isSimilarProducts:function(e){var t=e.type;return/^similarProducts/i.test(t)},isPredictiveBasket:function(e){return"predictiveBasket"===e.type},isProductCampaign:function(e){return"productCampaign"===e.type},isPageCampaign:function(e){return"pageCampaigns"===e.type},isShoppingCartCampaign:function(e){return"shoppingCartCampaign"===e.type},isGetRecords:function(e){return"getRecords"===e.type}});function Mn(e){return"__ORIG_".concat(e.toUpperCase(),"__")}function An(e,t){if(I.communication.globalCommunicationParameter.currencyCode&&I.communication.globalCommunicationParameter.currencyCountryCode){if(!I.communication.fieldRoles||!I.communication.fieldRoles.price)return void D("No field role for price configured. Skipping localization. See https://web-components.fact-finder.de/documentation/field-roles");n=function(e){Fn("record")(e.resultRecords||e.records||e)},H(e).case(Rn.isSearchResult,Dn).case(Rn.isSuggest,(function(e){Fn("attributes")(e.suggestions||e)})).case(Rn.isRecommendation,n).case(Rn.isSimilarProducts,n).case(Rn.isPageCampaign,Nn).case(Rn.isShoppingCartCampaign,Nn).case(Rn.isProductCampaign,Nn).case(Rn.isPredictiveBasket,(function(e){Fn("values")(e.hits)})).case(Rn.isGetRecords,n).otherwise((function(e){}))(t)}var n}var Nn=function(e){(e=e.campaigns||e)&&e.forEach((function(e){e.pushedProductsRecords&&Fn("record")(e.pushedProductsRecords)}))},Dn=function(e){[function(e){var t=Un();e.groups&&e.groups.forEach((function(e){var n=e.elements[0]||e.selectedElements[0];if(n){var i,r=J(t,n.associatedFieldName),a=(i=e,function(e){e.__ORIG_NAME__=e.name,i.unit&&(e.name=e.name.replace(i.unit,"")),e.name=Vn(e.name)});r&&"SLIDER"!==e.filterStyle&&(e.elements.forEach(a),e.selectedElements.forEach(a))}}))},function(e){Fn("record")(e.records)},Nn].forEach((function(t){return t(e.searchResult||e)}))},Fn=function(e){return function(t){var n=Un();t.forEach((function(t){n.forEach((function(n){var i=t[e][n];i&&(t[e][Mn(n)]=i,t[e][n]=Vn(i))}))}))}},Vn=function(e){if(null!=e){var t=I.communication.globalCommunicationParameter.currencyCode,n=I.communication.globalCommunicationParameter.currencyCountryCode,i=parseInt(I.communication.globalCommunicationParameter.currencyMaxDigits),r=parseInt(I.communication.globalCommunicationParameter.currencyMinDigits),a=e.toString();if(a.match(/[^$,.\d]/g)){var o=a.replace(/[^0-9.]+/g," ").split(" "),s=[];o.forEach((function(e){if(e){var t=parseFloat(e);isNaN(t)||s.push(e)}}));var c=s.slice();return s=s.map((function(e){return parseFloat(e).toLocaleString(n,{style:"currency",currency:t,maximumFractionDigits:i,minimumFractionDigits:r})})),c.forEach((function(e,t){a=a.replace(e,s[t])})),a}var u=parseFloat(a).toLocaleString(n,{style:"currency",currency:t,maximumFractionDigits:i,minimumFractionDigits:r});return u+""=="NaN"?a:u}},Un=function(){var e=I.communication.globalCommunicationParameter.currencyFields.split(","),t=I.communication.fieldRoles.price;return J(e,t)||e.push(t),e},qn=function(e){var t=e.response,n=e.request,i=t.length&&n.getResponseHeader("content-type")&&-1<n.getResponseHeader("content-type").toLowerCase().indexOf("application/json")?JSON.parse(t):t;return Object.assign(Object.assign({},e),{response:i})},Bn=B((function(e){var t=e.ffEvent,n=e.response,i=_e(I.communication.globalSearchParameter.version)&&t?we(t,I.communication.globalCommunicationParameter.ngApi)(n):n;return Object.assign(Object.assign({},e),{response:i})}),(function(e){var t=e.url,n=e.ffEvent,i=e.response,r=e.pushToHistory;return r&&!n.topics&&I.communication.beforeHistoryPushCallbacks.forEach((function(e){try{!1===e.fn(i,n,t)&&(r=!1)}catch(e){F("Could not execute beforeHistoryPushCallbacks: ",e)}})),r&&Bi(i,t,n),Object.assign(Object.assign({},e),{pushToHistory:r})})),zn=function(e){return function(t){var n,i,r=t.ffEvent,a=t.response;if(function(e,t){return t?e===ce.v4&&t.fieldRoles?[t.fieldRoles]:t.searchResult&&t.searchResult.fieldRoles?[t.searchResult.fieldRoles]:[]:[]}(I.communication.globalCommunicationParameter.ngApi,a).map((function(e){return I.communication.fieldRoles=e})),An(r,a),function(e,t){var n;t&&((n="productCampaign"!==e.type&&"pageCampaigns"!==e.type&&t.searchResult?t.searchResult:t)&&ft(n)&&n.forEach((function(e){var t=e.pushedProductsRecords;t&&t.forEach((function(e,t){e.position=t+1}))})))}(r,a),a.searchResult){if(a.timedOut&&M("FACT-Finder Timeout for request: "+r.type),"sort"===r.type||"ppp"===r.type||"paging"===r.type){var o=I.communication.currentSearchResult;I.communication.currentSearchResult=a.searchResult,o&&(I.communication.currentSearchResult.groups=o.groups,I.communication.currentSearchResult.breadCrumbTrailItems=o.breadCrumbTrailItems)}else r.topics||(I.communication.currentSearchResult=a.searchResult);if(!1!==I.communication.globalCommunicationParameter.useBrowserHistory){var s=St(window.location.href),c=I.communication.globalCommunicationParameter.useUrlParameters,u=I.communication.globalCommunicationParameter.parameterWhitelist.split(",");ua.Util.replaceHistoryState(a,Wi(s,r,!c,u),r)}}return ua.ResultDispatcher.dispatch(a,r,(i=e,(n=r).topics&&pt(n.topics)?n.topics():i)),t}},Wn=Object.freeze({Callback:"callback",Subscribe:"subscribe"}),Hn={},Kn={},Yn=!0,Gn=[],Xn={result:hi,records:pi,asn:_i,sort:gi,paging:yi,suggest:Oi,bct:mi,ppp:vi,pagingItems:bi,productDetail:wi,singleWordSearch:ki,query:Mi,campaign:Ci,productCampaign:Pi,shoppingCartCampaign:Ei,pageCampaigns:Si,navigation:Ai,tagCloud:Ri,similarProducts:Ii,predictiveBasket:Ti};function Zn(e){return e===Wn.Callback?Kn:Hn}function Jn(e,t,n,i){if(Yn)Gn.push({type:e,topic:t,data:n,event:i});else{var r=Zn(e)[t];r&&r.length&&r.slice().forEach((function(t){try{t.fn.call(t.ctx,n,i)}catch(n){F("could not invoke ".concat(e," function  ").concat(t),n)}}))}}function $n(e,t,n,i){var r=Zn(e);r[t]=r[t]||[];var a=Vt(20);return r[t].push({fn:n,ctx:i,key:a}),a}function Qn(e,t,n){for(var i=Zn(e)[t]||[],r=0;r<i.length;r++)if(i[r].key===n)return i.splice(r,1),!0;return!1}function ei(){ti(!1),Gn.forEach((function(e){Jn(e.type,e.topic,e.data,e.event)})),Gn=[]}function ti(e){Yn=e}function ni(e,t,n){Jn(Wn.Callback,e,t,n)}function ii(e,t,n){return et(e,I.communication.globalSearchParameter.version),$n(Wn.Callback,e,t,n)}function ri(e,t){return Qn(Wn.Callback,e,t)}function ai(e,t,n){return et(e,I.communication.globalSearchParameter.version),$n(Wn.Subscribe,e,t,n)}function oi(e,t){return Qn(Wn.Subscribe,e,t)}function si(e,t,n){Jn(Wn.Subscribe,e,t,n)}function ci(e,t,n){e?n?(n instanceof Array?M("dispatch topics: "+n):n=[n],n.forEach((function(n){"recommendation"===n?Li(e.resultRecords?e.resultRecords:e,t):"compare"===n?ji(e,t):"suggest"===n?Oi(e.suggestions?e.suggestions:e,t):"predictiveBasket"===n?ui(e.hits,n,t):Xn[n]?Xn[n](e.searchResult||e,t):ui(e,n,t)}))):li(e.searchResult||e,t):F("No response to dispatch for topics: "+n)}function ui(e,t,n){try{ni(t,e,n)}catch(e){F("Unexpected error while invoking callbacks:",e)}try{M("dispatching topic: "+t),si(t,e,n)}catch(e){F("Unexpected error while dispatching data:",e)}}function li(e,t){di(e,t)}function di(e,t){var n,i,r,a,o;(n=e.campaigns,i=Hn,r=(n||[]).filter((function(e){return"redirect"===e.flavour.toLowerCase()}))[0],a=(i["campaign:redirect"]||[])[0],o=!!r&&!!a,Object.freeze({then:function(e){try{o&&e(a.fn.call(a.ctx,r))}catch(e){F("could not invoke subscriber for redirect campaign. error: ",e,a)}return this},otherwise:function(e){return o||e(),this}})).then(Ni).otherwise((function(){hi(e,t),Ci(e,t),pi(e,t),mi(e,t),gi(e,t),vi(e,t),yi(e,t),bi(e,t),_i(e,t),ki(e,t),Mi(e,t)}))}function fi(e,t){if(!W(e)&&Object.keys(e).length){var n=I.communication.globalSearchParameter.version,i={type:"search",version:$i()?n:parseFloat(n),dispatchId:++I.communication.eventCounter},r={url:wn(i),ffEvent:i,response:e,pushToHistory:!1};B(Bn,zn(t))(r)}else D("Empty response passed as an argument. Dispatching stopped")}function hi(e,t){ni("result",e,t),M("dispatching result"),si("result",e,t)}function pi(e,t){ni("records",e.records,t),M("dispatching records"),si("records",e.records,t)}function mi(e,t){ni("bct",e.breadCrumbTrailItems,t),M("dispatching bread crumb trail"),si("bct",e.breadCrumbTrailItems,t)}function gi(e,t){ni("sort",e.sortsList,t),M("dispatching sort items"),si("sort",e.sortsList,t)}function vi(e,t){ni("ppp",e.resultsPerPageList,t),M("dispatching results per page items"),si("ppp",e.resultsPerPageList,t)}function yi(e,t){ni("paging",e.paging,t),M("dispatching paging"),si("paging",e.paging,t)}function bi(e,t){var n=e&&e.paging?e.paging:void 0;ni("pagingItems",n,t),M("dispatching paging items"),si("pagingItems",n,t)}function _i(e,t){ni("asn",e.groups,t),M("dispatching asn"),si("asn",e.groups,t)}function ki(e,t){ni("singleWordSearch",e.singleWordResults,t),M("dispatching singleWordSearch"),si("singleWordSearch",e.singleWordResults,t)}function wi(e,t){var n;e&&e.records instanceof Array&&(n=e.records[0]),ni("productDetail",n,t),M("dispatching productDetail"),si("productDetail",n,t)}function Ci(e,t){ni("campaign",e.campaigns,t),M("dispatching campaigns"),xi(e.campaigns,"campaign",t)}function Si(e,t){ni("pageCampaigns",e,t),M("dispatching page campaigns"),xi(e,"pageCampaign",t)}function Pi(e,t){ni("productCampaign",e,t),M("dispatching productCampaign"),xi(e,"productCampaign",t)}function Ei(e,t){ni("shoppingCartCampaign",e,t),M("dispatching shoppingCartCampaign"),xi(e,"shoppingCartCampaign",t)}function xi(e,t,n){try{var i=[];i.push(t);for(var r=0;r<e.length;r++){var a=e[r];a.pushedProductsRecords&&0<a.pushedProductsRecords.length&&(i.push(t+":pushedProducts"),i.push(t+":pushedProducts:"+a.name)),i.push(t+":"+a.name),i.push(t+":"+a.flavour.toLowerCase()),i.push(t+":"+a.flavour.toLowerCase()+":"+a.name),a.feedbackTexts&&(i.push(t+":feedbacktext"),a.feedbackTexts.forEach((function(e){i.push(t+":feedbacktext:"+a.name),i.push(t+":feedbacktext:"+e.label)})))}var o=Rt(Hn,new RegExp(t)).filter((function(e){return-1===i.indexOf(e)}));for(r=0;r<o.length;r++)si(o[r],void 0,n);for(r=0;r<e.length;r++){var s=e[r];try{s.pushedProductsRecords&&0<s.pushedProductsRecords.length&&(si(t+":pushedProducts",s.pushedProductsRecords,n),si(t+":pushedProducts:"+s.name,s.pushedProductsRecords,n))}catch(e){}si(t,s,n),si(t+":"+s.name,s,n),si(t+":"+s.flavour.toLowerCase(),s,n),si(t+":"+s.flavour.toLowerCase()+":"+s.name,s,n);var c=s.feedbackTexts;if(c)for(var u=0;u<c.length;u++){var l=c[u];si(t+":feedbacktext",l,n),si(t+":feedbacktext:"+s.name,l,n),si(t+":feedbacktext:"+l.label,l,n)}}}catch(e){}}function Oi(e,t){ni("suggest",e,t),M("dispatching suggest"),si("suggest",e,t)}function Li(e,t){ni("recommendation",e,t),M("dispatching recommendations"),si("recommendation",e,t),si(t.type,e,t)}function Ii(e,t){ni("similarProducts",e,t),M("dispatching similarProducts"),si("similarProducts",e,t),t&&si(t.type,e,t)}function Ti(e,t){!function(e){if(!Qe.hasOwnProperty(e))throw Error("".concat(e," is not an experimental feature and cannot be guarded."));if(!Qe[e].enable)throw it(e)}($e.predBasket),ni("predictiveBasket",e,t),M("dispatching predictiveBasket"),si("predictiveBasket",e,t)}function ji(e,t){ni("compare",e,t),M("dispatching compare"),si("compare",e,t),si(t.type,e,t)}function Ri(e,t){ni("tagCloud",e,t),M("dispatching tag cloud items"),si("tagCloud",e,t)}function Mi(e,t){if(e&&e.searchParams)try{var n=Et(e.searchParams.split("?")[1]).query;if(n){try{ni("query",n,t)}catch(e){}try{M("dispatching query"),si("query",n,t)}catch(e){}}}catch(e){M("result.searchParams from query has no params")}}function Ai(e,t){ni("navigation",e,t);try{if(!e.searchResult.groups||!e.searchResult.groups.length)return;e.searchResult.groups[0].elements.forEach((function(e){var n;e.__TARGET_URL__=(n={url:Wi(Et(e.searchParams.split("?")[1]),void 0,!1),isCustomized:!1},Object.freeze({setUrl:function(e){if("string"!=typeof e)throw new Error("customUrl must be a string.");n.url=e,n.isCustomized=!0},get url(){return n.url},get isCustomized(){return n.isCustomized}})),e.__SUB_ELEMENTS__=[];var i=Ht(e);I.communication.navigationResult[t.key]=I.communication.navigationResult[t.key]||{},I.communication.navigationResult[t.key][i]={element:e,subelements:e.__SUB_ELEMENTS__},I.communication.navigationLayer[t.key]=I.communication.navigationLayer[t.key]||{},I.communication.navigationLayer[t.key][e.clusterLevel]=I.communication.navigationLayer[t.key][e.clusterLevel]||[],I.communication.navigationLayer[t.key][e.clusterLevel].push(e);var r=I.communication.navigationResult[t.key][e.associatedFieldName];r&&r.subelements.push(e)})),setTimeout((function(){var e;si("navigation",(e=I.communication.navigationLayer[t.key],Object.keys(e).sort((function(e,t){return e-t})).map((function(t){return e[t]}))),t)}),0)}catch(e){D("dispatchNavigation",e)}}function Ni(e){ua.Util.replaceDocumentLocation(e.target.destination)}function Di(){var e=I.communication.currentSearchResult;if(e)return Pt(e.searchParams)}function Fi(e){if(e.seoPath)e.seoPath=Q(e.seoPath);else{var t,n=e.query;if(I.communication.globalCommunicationParameter.keepFilters){var i=Vi(t=e.seoPath?Q(e.seoPath):Q(window.location.pathname).replace(I.communication.globalCommunicationParameter.seoPrefix+"",""));n&&"*"!==n&&0!=n.length?t=i?t.replace("/"+i+"/q","/"+n+"/q"):t+"/"+n+"/q":i&&(t=t.replace("/"+i+"/q","")),e.seoPath=$(t)}else e["ff-seo-initial"]?(delete e["ff-seo-initial"],e.seoPath||(e.seoPath=$("/"))):e.seoPath=$(n&&"*"!==n?"/"+Q(n)+"/q":"/")}}function Vi(e){var t=Q(e);if(-1==t.lastIndexOf("/q"))return null;var n=t.split("/");return n[n.length-2]}function Ui(e,t,n){n&&!n.topics&&zi(e,t,!0,n.type)}function qi(e){M("redirecting to: ".concat(e)),document.location.replace(e)}function Bi(e,t,n){if(!t||!(-1<t.indexOf("Suggest.ff")||-1<t.indexOf("Tracking.ff"))){var i=I.communication.globalCommunicationParameter,r=i.onlySearchParams,a=i.parameterWhitelist,o=i.useBrowserHistory,s=i.useFilterUrl,u=i.useSeo,l=i.useUrlParameters;if(!1!==l||!1!==o){var d=Et(Pt(t));if(u&&-1!==t.indexOf("Search.ff"))Hi(e,n.type);else if(1!=s||-1===["search","filter","bct"].lastIndexOf(n.type)){var f=[].concat(c()(a?a.split(","):[]),c()(r?qt:[]));!l&&0<f.length&&D('URL parameters whitelist is set (through either "parameter-whitelist" or "only-search-params"). use-url-parameters="false" will be ignored'),zi(e,o?Wi(d,n,!l||0<f.length,f):window.location.href.split("?")[0],n.searchImmediate,n.type,d)}else Ki(e,n.type,d)}}}function zi(e,t,n,i,r){if(Qe[$e.sandboxMode].enable){if(r){var a=JSON.parse(JSON.stringify(e));An({type:i},a),rt(r,t,a)}}else{var o=(n?history.replaceState:history.pushState).bind(history);try{o(e,"",t)}catch(n){N("Result is too big for history - falling back to FF-Request instead of cached result");try{o(st.create(e),"",t)}catch(n){N("could not",n)}}}}function Wi(e,t,n){var i,r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:[];t&&-1<["ppp","sort","paging"].indexOf(t.type)&&(delete e.useAsn,delete e.useCampaigns),Object.keys(e).forEach((function(t){var i,a;Ut(t,$i())&&n&&(i=t,a=!1,r.forEach((function(e){-1<i.indexOf(e)&&(a=!0)})),!a)&&delete e[t]})),("*"===(i=e.query)||"string"==typeof i&&"%2a"===i.toLowerCase())&&delete e.query,delete e.format,delete e.purchaserId;var a=It(e,I.communication.globalCommunicationParameter.sortUrlParametersAlphabetically);return window.location.href.split("?")[0]+a.replace(/\?$/,"")}function Hi(e,t){var n=I.communication.globalCommunicationParameter,i=Et(Pt(e.searchResult.searchParams));zi(e,!1===n.useUrlParameters&&!0===n.useBrowserHistory?window.location.origin+n.seoPrefix+B((function(e){return void 0!==e.seoPath?"/".concat(Q(e.seoPath)):"/"}),(function(e){return i.seoPath,i.query,i.format,e+It(function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(e);r<i.length;r++)t.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(e,i[r])&&(n[i[r]]=e[i[r]])}return n}(i,["seoPath","query","format"]),n.sortUrlParametersAlphabetically)}))(i):window.location.href.split("?")[0],!1,t,i)}function Ki(e,t,n){var i=window.location.origin,r=I.communication.globalCommunicationParameter;r.filterUrlPrefix&&(i+="/"+r.filterUrlPrefix),i+=function(e){var t="";for(var n in e)if(e.hasOwnProperty(n)){var i=Yi();0===n.indexOf(he(i))&&(t+=te(e[n][0])+"/",delete e[n])}return"/"+t}(n),zi(e,i+=It(n,r.sortUrlParametersAlphabetically),!1,t,n)}function Yi(){var e="CategoryPathROOT",t=I.communication.currentSearchResult.groups,n=G((function(e){return"categoryPath"===e.type}))(t)||G((function(e){return"TREE"===e.filterStyle}))(t);if(!n)return D("Cannot find categoryPath type field name, ".concat(e," will be used")),e;var i=n.elements.concat(n.selectedElements);return pe(r()(i,1)[0].associatedFieldName)}function Gi(e,t){if(e)for(var n=0;n<e.length;n++){var i=e[n].record;for(var r in t){var a=t[r];a!==r&&i[r]&&(i[a]=i[r],delete i[r])}}}function Xi(){try{var e=Et(I.communication.currentSearchResult.searchParams.split("?")[1]),t="";if(e.query&&(t=te(e.query[0])),!0!==I.communication.globalCommunicationParameter.useSeo)return t;var n=e.seoPath,i=te(Vi(n));return i||t||M("whether seoPath param is set nor query param. Maybe FACT-Finder SEO is not active "),i||t}catch(e){return""}}function Zi(e){var t=ii("productCampaign",(function(t){if(t)for(var n=0;n<t.length;n++){var i=t[n];if(i.pushedProductsRecords){var r=i.pushedProductsRecords;this.changeRecordPropertyName(r,e)}}}),this),n=ii("result",(function(t){var n=t.records;try{this.changeRecordPropertyName(n,e)}catch(t){console.log(t)}try{if(t.campaigns)for(var i in t.campaigns){var r=t.campaigns[i];r.pushedProductsRecords&&this.changeRecordPropertyName(r.pushedProductsRecords,e)}}catch(t){console.log(t)}if(t.singleWordResults)for(var a=t.singleWordResults,o=0;o<a.length;o++){var s=a[o];if(s.previewRecords)try{this.changeRecordPropertyName(s.previewRecords,e)}catch(t){console.log(t)}}}),this),i=ii("recommendation",(function(t){this.changeRecordPropertyName(t,e)}),this),r=ii("similarProducts",(function(t){this.changeRecordPropertyName(t.records,e)}),this);if(Qe[$e.predBasket].enable)var a=ii("predictiveBasket",(function(t){this.changeRecordPropertyName(t,e)}),this);return{productCampaign:t,result:n,recommendation:i,similarProducts:r,predictiveBasket:a}}function Ji(e){for(var t in e)!0!==oi(t,e[t])&&M("Could not remove renameRecordField callback for topic ["+t+"] with key")}function $i(){return _e(I.communication.globalSearchParameter.version)}function Qi(e){return I.communication.fieldRoles&&I.communication.fieldRoles.price===e||I.communication.globalCommunicationParameter.currencyFields.split(",").some((function(t){return t===e}))}var er={getTrackingProductId:function(e){return I.communication.fieldRoles&&I.communication.fieldRoles.trackingProductNumber?e.record[I.communication.fieldRoles.trackingProductNumber]:e.id},getPrice:function(e){if(I.communication.fieldRoles&&I.communication.fieldRoles.price){var t=I.communication.fieldRoles.price;return e.record[Mn(t)]||e.record[t]}return""},getTitle:function(e){return I.communication.fieldRoles&&I.communication.fieldRoles.productName?e.record[I.communication.fieldRoles.productName]:""},getMasterArticleNumber:function(e){return I.communication.fieldRoles&&I.communication.fieldRoles.masterArticleNumber?e.record[I.communication.fieldRoles.masterArticleNumber]:""},getUserId:function(){var e=I.communication.globalCommunicationParameter;return e&&e.userId?e.userId:void 0},getCampaignProductNumber:function(e){return I.communication.fieldRoles.campaignProductNumber?e.record[I.communication.fieldRoles.campaignProductNumber]:e.id}},tr={U2VhcmNoLmZm:!0,"VHJhY2tpbmcuZmY=":!0,cmVzdC92MS9yZWNvcmRz:!0,"cmVzdC92MS9zZWFyY2g=":!0,"cmVzdC92MS90cmFja2luZw==":!0,"cmVzdC92Mi9kZXRhaWw=":!0,cmVzdC92Mi9yZWNvcmRz:!0,"cmVzdC92Mi9yZWNvcmRzL2NvbXBhcmU=":!0,cmVzdC92Mi9yZWNvcmRzL3JlY29tbWVuZGF0aW9u:!0,"cmVzdC92Mi9yZWNvcmRzL3NpbWlsYXI=":!0,cmVzdC92Mi9uYXZpZ2F0aW9u:!0,cmVzdC92Mi9uYXZpZ2F0aW9uL2NhdGVnb3J5:!0,"cmVzdC92Mi9zZWFyY2g=":!0,cmVzdC92Mi9zdWdnZXN0:!0,cmVzdC92Mi9jYW1wYWlnbi9wYWdl:!0,cmVzdC92Mi9jYW1wYWlnbi9wcm9kdWN0:!0,"cmVzdC92Mi9jYW1wYWlnbi9zaG9wcGluZ2NhcnQ=":!0,cmVzdC92Mi90cmFjay9jYXJ0:!0,"cmVzdC92Mi90cmFjay9jaGVja291dA==":!0,"cmVzdC92Mi90cmFjay9jbGljaw==":!0,"cmVzdC92Mi90cmFjay9mZWVkYmFjaw==":!0,"cmVzdC92Mi90cmFjay9sb2c=":!0,"cmVzdC92Mi90cmFjay9sb2dpbg==":!0,cmVzdC92Mi90cmFjay9yZWNvbW1lbmRhdGlvbkNsaWNr:!0,cmVzdC92Mi9wcmVkaWN0aXZlYmFza2V0:!0,"cmVzdC92My9kZXRhaWw=":!0,cmVzdC92My9yZWNvcmRz:!0,"cmVzdC92My9yZWNvcmRzL2NvbXBhcmU=":!0,cmVzdC92My9yZWNvcmRzL3JlY29tbWVuZGF0aW9u:!0,"cmVzdC92My9yZWNvcmRzL3NpbWlsYXI=":!0,cmVzdC92My9uYXZpZ2F0aW9u:!0,cmVzdC92My9uYXZpZ2F0aW9uL2NhdGVnb3J5:!0,"cmVzdC92My9zZWFyY2g=":!0,cmVzdC92My9zdWdnZXN0:!0,cmVzdC92My9jYW1wYWlnbi9wYWdl:!0,cmVzdC92My9jYW1wYWlnbi9wcm9kdWN0:!0,"cmVzdC92My9jYW1wYWlnbi9zaG9wcGluZ2NhcnQ=":!0,cmVzdC92My90cmFjay9jYXJ0:!0,"cmVzdC92My90cmFjay9jaGVja291dA==":!0,"cmVzdC92My90cmFjay9jbGljaw==":!0,"cmVzdC92My90cmFjay9mZWVkYmFjaw==":!0,"cmVzdC92My90cmFjay9sb2c=":!0,"cmVzdC92My90cmFjay9sb2dpbg==":!0,cmVzdC92My90cmFjay9yZWNvbW1lbmRhdGlvbkNsaWNr:!0,cmVzdC92My9wcmVkaWN0aXZlYmFza2V0:!0,"cmVzdC92NC9kZXRhaWw=":!0,cmVzdC92NC9yZWNvcmRz:!0,"cmVzdC92NC9yZWNvcmRzL2NvbXBhcmU=":!0,cmVzdC92NC9yZWNvcmRzL3JlY29tbWVuZGF0aW9u:!0,"cmVzdC92NC9yZWNvcmRzL3NpbWlsYXI=":!0,cmVzdC92NC9uYXZpZ2F0aW9u:!0,cmVzdC92NC9uYXZpZ2F0aW9uL2NhdGVnb3J5:!0,"cmVzdC92NC9zZWFyY2g=":!0,cmVzdC92NC9zdWdnZXN0:!0,cmVzdC92NC9jYW1wYWlnbi9wYWdl:!0,cmVzdC92NC9jYW1wYWlnbi9wcm9kdWN0:!0,"cmVzdC92NC9jYW1wYWlnbi9zaG9wcGluZ2NhcnQ=":!0,cmVzdC92NC90cmFjay9jYXJ0:!0,"cmVzdC92NC90cmFjay9jaGVja291dA==":!0,"cmVzdC92NC90cmFjay9jbGljaw==":!0,"cmVzdC92NC90cmFjay9mZWVkYmFjaw==":!0,cmVzdC92NC90cmFjay9sYW5kaW5nUGFnZUNsaWNr:!0,"cmVzdC92NC90cmFjay9sb2c=":!0,"cmVzdC92NC90cmFjay9sb2dpbg==":!0,cmVzdC92NC90cmFjay9yZWNvbW1lbmRhdGlvbkNsaWNr:!0,cmVzdC92NC9wcmVkaWN0aXZlYmFza2V0:!0};function nr(e,t,n,i,r){var a=r.split("?")[0].split("/");if("number"==typeof t&&(t=t.toString()),-1<a.indexOf("rest")&&4<=a.length){var o=function(e){var t=e.slice(e.indexOf("rest"));if(!(3<t.length))return t;var n=t[2];if("detail"===n)return t.slice(0,3);var i=/records|campaign|track/.test(n)?3:t.length-1;return t.splice(i,1),t}(a).join("/");return btoa(o)in tr?""+i.setRequestHeader(e,t):""}return btoa(a[a.length-1])in tr?""+i.setRequestHeader(e,t):""}var ir=String.prototype;function rr(){return Vt(30,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 ")}var ar=rr(),or=rr();ir[or]=function(){return"abcdefghijklmnopqrstuvwxyz"};var sr="_ffo",cr="_fft",ur=rr(),lr=rr(),dr=rr(),fr=rr(),hr=rr(),pr=rr(),mr=rr(),gr=rr(),vr=rr(),yr=rr();ir[yr]=function(){var e,t,n=0;if(0===this.length)return n;for(e=0,t=this.length;e<t;e++)n=(n<<5)-n+this.charCodeAt(e),n|=0;return n},ir[pr]=function(){var e="";""[lr]();for(var t=e.concat(this[ur](),this[or](),""[lr]()),n=0;n<t.length;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e},ir[dr]=function(){return Math.random()},ir[fr]=function(){return(new Date).getTime()},ir[hr]=function(){return this[yr]()},ir[lr]=function(){return"0123456789"};var br=window.btoa(window.location.origin);ir[ur]=function(){return"ABCDEFGHIJKLMNOPQRSTUVWXYZ"},ir[mr]=function(e){return e[0].concat(e[1]).concat(e[2])},ir[ar]=function(e){var t={};e.setOrCreateSid(t);for(var n=[],i=0;i<t.sid.length;i++)n.push(t.sid.charCodeAt(i).toString(16));return n.join("$")},ir[gr]=function(e){for(var t=this[pr](),n=[],i=0;i<3;i++){var r="";e[i].forEach((function(e){for(var n=0;n<6;n++)r+=t.charAt(+e+10*n)})),n.push(r)}return n.push(t),n},ir[vr]=function(e,t,n,i){for(var r=[[],[],[]],a=2;a<this.length;a++){var o=a;r[0][a-2]=e.toString().charAt(a),r[0][a-2]&&o--;var s=t.toString().length-2;if(r[1][a-2]=t.toString().charAt(s-a),r[1][a-2]&&o--,r[2][a-2]=n.toString().charAt(a),r[2][a-2]&&o--,1==o)break}return this[gr](r)};var _r=Object.freeze({Get:"GET",Post:"POST"});function kr(e){var t,n,i,r=e.url,a=e.pushParametersToHistory,o=void 0!==a&&a,s=e.ffEvent,c=e.success,u=e.fail,l=e.always,d=(t=r,_e(I.communication.globalSearchParameter.version)&&-1<t.indexOf("/track/")),f=_r.Get;if(i=d?(f=_r.Post,n=$t(St(r)),r.split("?")[0]):r,d){var h=r.split("?")[1].split("&").filter((function(e){return 0===e.indexOf("sid=")}))[0];r=r.split("?")[0]+"?"+h}else{var p=St(r);p.format="json",r=r.split("?")[0]+It(p,I.communication.globalCommunicationParameter.sortUrlParametersAlphabetically)}var m=function(e,t){var n=new XMLHttpRequest;return"withCredentials"in n?(n.open(e,t,!0),n.setRequestHeader("Accept","application/json")):"undefined"!=typeof XDomainRequest?(n=new XDomainRequest).open(e,t,!0):n=null,n}(f,r);if(!m)throw Error("CORS is not supported");if(d&&m.setRequestHeader("Content-Type","application/json"),($i()||7.2<=parseFloat(I.communication.globalSearchParameter.version))&&function(e,t){var n=[];!function(e,t,n){for(var i=n[ar](t).split("$"),r=0;r<3;r++){for(var a=10*r,o="",s=a;s<a+10;s++)o+=i[s];e.push(o)}}(n,dn,t);var i=t[dr]();nr(n[0],i,1,e,t);var r=t[pr]();nr(n[1],r,1,e,t);var a=t[fr](),o=t[vr](+i,a,t[hr](),r);nr(n[2],t[mr](o),1,e,t),nr(n[1],o[3],1,e,t),nr(sr,br,1,e,t);var s=a%99;a=50<=s?(a+="").slice(2,a.length)+(a[0]+a[1]):(a+="").slice(a.length-2,a.length)+a.slice(0,a.length-2),s<10&&(s="0"+s),nr(cr,a+s,1,e,t)}(m,r),m.onload=function(e){200===e.target.status?(wr(y,m.responseText,e,m),wr(l,e)):v(e)},m.onerror=v,d){var g=function(e,t){var n=t.type,i={feedback:["id"]},r=Array.isArray(n)&&i.hasOwnProperty(n[0])?i[n[0]]:[],a=["campaign","count","id","mainId","masterId","message","page","pageId","pageSize","pos","positive","price","purchaserId","query","score","sid","title","userId"].filter((function(e){return r.indexOf(e)<0})),o={};return a.forEach((function(e){return t.hasOwnProperty(e)?o[e]=t[e][0]:void 0})),o.masterId=o.masterId||o.id,(xe[e]||function(e){return e})(o)}(s.event,n);m.send(JSON.stringify([g]))}else m.send();function v(e){wr(u,m.responseText,e),wr(l,m.responseText,e)}function y(e,t,n){try{var r={request:n,url:i,ffEvent:d?void 0:s,response:e,pushToHistory:o};B(qn,Bn,c)(r)}catch(e){F("Could not process response.",e),v(t)}}}function wr(e){if(e)try{for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];e.apply(void 0,n)}catch(e){F(e)}}function Cr(e){var t=I.communication.globalCommunicationParameter;if(xr(e,t.addParams),_e(e.version)&&e.navigation&&xr(e,t.categoryPage),!0===t.keepFilters){var n=I.communication.currentSearchResult;n&&(n.filters||[]).forEach((function(t){e["filter"+t.name]=t.valueList[0].value}))}if(t.keepUrlParams){var i=t.keepUrlParams.trim().split(","),r=St();try{if(1===i.length&&"all"===i[0])for(var a in r)Ut(a)||(e[a]=r[a]);else for(var o=0;o<i.length;o++){var s=i[o].trim();s&&r&&r[s]&&(e[s]=r[s])}}catch(t){}}!1===t.useAsn&&(e.useAsn="false"),1==t.useFoundWords&&(e.useFoundWords="true"),0==t.useCampaigns&&(e.useCampaigns="false"),1==t.generateAdvisorTree&&(e.generateAdvisorTree="true"),1==t.disableCache&&(e.disableCache="true"),0==t.usePersonalization&&(e.usePersonalization="false"),0==t.useSemanticEnhancer&&(e.useSemanticEnhancer="false"),0==t.useAso&&(e.useAso="false"),1==t.useSeo&&Fi(e),Er(e,zn()),Pr(e.url?e.url:wn(e),e,!0)}var Sr={};function Pr(e,t,n){kr({url:e,pushParametersToHistory:n,ffEvent:t,success:t.success,fail:t.fail,always:t.always})}function Er(e,t){e.success?e.success=B(t,(function(e){return e.response}),e.success):e.success=t}function xr(e,t){t&&t.trim().split(",").forEach((function(t){try{var n=t.split("="),i=n[0].trim(),r=n[1].trim();"filter"===i?(a=e,o=te(r),void 0===a.filter?a.filter=o:Array.isArray(a.filter)?J(a.filter,o)||a.filter.push(o):a.filter=[a.filter,o]):at(e,i,r)}catch(t){}var a,o}))}function Or(e){return function(t){return 0===e.indexOf(t)}}Sr.search=Cr,Sr.filter=function(e){if(I.communication.currentSearchResult&&I.communication.currentSearchResult.groups){var t=function(){Er(e,zn());var t,n,i=St(I.communication.currentSearchResult.searchParams);for(var r in i)i.hasOwnProperty(r)&&/^sort/i.test(r)&&(e[r]=i[r]);n=i,_e((t=e).version)?n.hitsPerPage&&(t.hitsPerPage=n.hitsPerPage):n.productsPerPage&&(t.productsPerPage=n.productsPerPage);for(var a=function(t){var n=I.communication.currentSearchResult.groups[t];if(e.groupName!==n.name)return"continue";if("true"===e.removeAll||!0===e.removeAll){delete e.removeAll;var r=!1,a=function(t){if(_e(e.version)){var n=Ge().map((function(e){return e.replace(/^filter=/,"")})),a=B(ae,Ce)(t.associatedFieldName);if(ft(i.filter)){var o=i.filter.filter((function(e){return!new RegExp("^".concat(K(a),"%3A"),"i").test(e)||n.some(Or(e))}));i.filter=r?o.map((function(e){return G(Or(e))(n)||e})):o}}else if(r)for(var s in i){var c=he(ae(pe(t.associatedFieldName)));i.hasOwnProperty(s)&&0===s.indexOf(c)&&delete i[s]}else{var u=ae(t.associatedFieldName);delete i[he(u)]}};return"SLIDER"===n.filterStyle?n.elements.forEach(a):(r="TREE"===n.filterStyle,n.selectedElements.forEach(a)),Pr(Cn(e,It(i,I.communication.globalCommunicationParameter.sortUrlParametersAlphabetically)),e,!0),{v:{v:void 0}}}var o=e.clusterLevel||0;delete e.clusterLevel;var s=n.selectedElements.concat(n.elements),c=G((function(t){return t.name===e.filterName&&t.clusterLevel===o||"SLIDER"===n.filterStyle}))(s);c&&Pr(Cn(e,c.searchParams),e,!0)},o=0;o<I.communication.currentSearchResult.groups.length;o++){var s=a(o);switch(s){case"continue":continue;default:if("object"===g()(s))return s.v}}N("filter ["+e.filterName+"] in group ["+e.groupName+"] not found.")}();if("object"===g()(t))return t.v}else N("discard filter event. no result available, you need to search before you can filter the result.")},Sr.clearFilter=function(e){var t=St(I.communication.currentSearchResult.searchParams),n=he(Yi());function i(){var i=n.match(/^filter(.*)ROOT$/)[1],r=Ge().map((function(e){return e.replace(/^filter=/,"")}));return(t.filter||[]).filter((function(t){return!0===e.keepCategoryPath&&Or(t)(i)||r.some(Or(t))})).map((function(e){return G(Or(e))(r)||e}))}!0===e.removeParams?_e(I.communication.globalSearchParameter.version)?Tr({type:"search",query:Xi(),filter:i().map(te)}):Tr(Object.keys(t).reduce((function(i,r){return!0===e.keepCategoryPath&&0===r.indexOf(n)&&(i[r]=t[r][0]),i}),{type:"search",query:Xi()})):(_e(I.communication.globalSearchParameter.version)?t.filter=i():Object.keys(t).forEach((function(i){var r=!0===e.keepCategoryPath&&0===i.indexOf(n);0!==i.indexOf("filter")||r||delete t[i]})),e.type="search",delete e.removeParams,delete e.keepCategoryPath,Er(e,zn()),Pr(xn(It(t,I.communication.globalCommunicationParameter.sortUrlParametersAlphabetically),e),e,!0))},Sr.bct=function(e){if(I.communication.currentSearchResult&&I.communication.currentSearchResult.breadCrumbTrailItems){for(var t=0;t<I.communication.currentSearchResult.breadCrumbTrailItems.length;t++){var n=I.communication.currentSearchResult.breadCrumbTrailItems[t];if(e.value===n.value){var i=_e(e.version)?n.searchParams+"&"+I.communication.globalCommunicationParameter.categoryPage:n.searchParams;return Er(e,zn()),void Pr(xn(i,e),e,!0)}}N("no bread crumb trail item found for value: "+e.value)}else N("discard breadCrumbTrail event. no result available, you need to search before you can use the bct.")},Sr.sort=function(e){if(I.communication.currentSearchResult&&I.communication.currentSearchResult.sortsList){for(var t=0;t<I.communication.currentSearchResult.sortsList.length;t++){var n=I.communication.currentSearchResult.sortsList[t];if(e.order===n.order&&e.name===n.name)return e.useAsn="false",Er(e,zn(["result","campaign","records","sort","ppp","paging","pagingItems","singleWordSearch"])),void Pr((i=e,xn(n.searchParams,i)),e,!0)}N("no sort item found for value: ".concat(e.value))}else N("discard sort event. no result available, you need to search before you can sort the result.");var i},Sr.ppp=function(e){if(I.communication.currentSearchResult&&I.communication.currentSearchResult.resultsPerPageList){for(var t=0;t<I.communication.currentSearchResult.resultsPerPageList.length;t++){var n=I.communication.currentSearchResult.resultsPerPageList[t];if(e.value===n.value)return e.useAsn="false",Er(e,zn(["result","campaign","records","ppp","paging","pagingItems","singleWordSearch"])),void Pr((i=e,xn(n.searchParams,i)),e,!0)}N("No products per page item found for value: ".concat(e.value," "))}else N("Discard products per page event. No result available, you need to search before you can use products per page.");var i},Sr.paging=function(e){if(I.communication.currentSearchResult&&I.communication.currentSearchResult.paging){var t,n=function(e,t){return e&&e.number===t.number},i=I.communication.currentSearchResult.paging;n(i.firstLink,e)?t=i.firstLink:n(i.lastLink,e)?t=i.lastLink:n(i.previousLink,e)?t=i.previousLink:n(i.nextLink,e)&&(t=i.nextLink),t||i.pageLinks&&i.pageLinks.forEach((function(i){n(i,e)&&(t=i)})),t?(e.useAsn="false",delete e.number,Er(e,zn(["result","campaign","records","ppp","paging","pagingItems","singleWordSearch"])),Pr((r=e,xn(t.searchParams,r)),e,!0)):N("No paging item found for value: ".concat(e.number," "))}var r},Sr.suggest=function(e){var t;Er(e,zn(["suggest"])),Pr(e.url?e.url:(t=e,Pn(t=Mt(I.communication.globalSearchParameter,t),I.communication.globalCustomUrls.suggestUrl),_e(t.version)?On(t):(En(t,"Suggest.ff"),kn(t,t.url,t.version))),e,!1)},Sr.suggestItem=function(e){var t,n,i,r,a=(t=e["ff-suggestParams"],n=I.communication.globalSearchParameter.url,r={removeFFPrefix:!0},6.9==(i=I.communication.globalSearchParameter.version)||6.11==i||_e(i),function(e,t,n){return n&&n.removeFFPrefix&&(e="/"+(e="/"!==e[0]?"/"+e:e).replace(/(\/.*?\/)/,"")),("/"===t[t.length-1]?t=t.substring(0,t.length-1):t)+e}(t,n,r));delete e["ff-suggestParams"],e.type="search",e.url=a,Cr(e)},Sr.productDetail=function(e){var t;Er(e,zn(["productDetail"])),Pr(e.url?e.url:((t=e).id||M("No id specified for Product Detail request"),t.query=t.id,delete t.id,t.useAsn="false",t.useCampaigns="false",t.isArticleNumber="true",Pn(t=Mt(I.communication.globalSearchParameter,t),I.communication.globalCustomUrls.serachUrl),En(t,"Search.ff"),kn(t,t.url,t.version)),e,!1)},Sr.tagCloud=function(e){var t;Er(e,zn(["tagCloud"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.tagCloudUrl),En(t,"TagCloud.ff"),t.do="getTagCloud",kn(t,t.url,t.version)),e,!1)},Sr.navigation=function(e){I.communication.navigationResult={},I.communication.navigationLayer={};var t=Number(e.firstFetch);t<0&&(t=0);var n=Number(e.fetchSize);n<0&&(n=1);var i=Number(e.maxFetch);10<i&&(i=10);var r=Number(e.fetchTime);r<0&&(r=100),function e(t,n,i,r,a,o){var s={};dn.setOrCreateSid(s),s.type="navigation",isNaN(t)||(s.startLevel=t),isNaN(n)||(s.endLevel=n),s.initialNavigation=!0,s.navigation=!0,s.key=o.key,"function"==typeof o.fail&&(s.fail=o.fail),"function"==typeof o.always&&(s.always=o.always);var c,u;s.success=function(t){var c=t.response,u=n+1,l=u+r;l<=i+r&&(10<l&&(l=10),i<l&&(l=i),window.setTimeout((function(){e(u,l,i,r,a,o)}),a)),ua.ResultDispatcher.dispatchNavigationFrame(c,s)},o.success&&(s.success=vt(s.success,o.success)),Pr((u=s).url?u.url:(c=u,Pn(c=Mt(I.communication.globalSearchParameter,c),I.communication.globalCustomUrls.serachUrl),_e(c.version)?On(c):(En(c,"Search.ff"),kn(c,c.url,c.version))),u,!1)}(0,t,i,n,r,e)},Sr["navigation-search"]=function(e){e.type="search",e.navigation="true";var t,n=[];for(var i in e)0===i.indexOf("filter")&&n.push({key:i,value:e[i]});Er(e,zn()),Pr(e.url?e.url:(t=e,Pn(t=Mt(I.communication.globalSearchParameter,t),I.communication.globalCustomUrls.serachUrl),_e(t.version)?On(t):(En(t,"Search.ff"),kn(t,t.url,t.version))),e,!0)},Sr.similarProducts=function(e){var t;Er(e,zn(["similarProducts"])),Pr((t=e,Pn(t=Mt(I.communication.globalSearchParameter,t),I.communication.globalCustomUrls.similarRecordsUrl),_e(t.version)?On(t):(t.maxRecordCount=t.maxResults,delete t.maxResults,En(t,"SimilarRecords.ff"),kn(t,t.url,t.version))),e,!1)},Sr.predictiveBasket=function(e){Er(e,zn(["predictiveBasket"])),Pr(function(e){tt(e.type,e.version);var t=Mt(I.communication.globalSearchParameter,e);if(Pn(t,I.communication.globalCustomUrls.predictiveBasketUrl),_e(t.version))return On(t)}(e),e,!1)},Sr.advisor=function(e){var t=Mt(e,Et(Pt(e.answer.params)));delete t.answer,delete t.type,Cr(t),t.type="search"},Sr.productCampaign=function(e){var t;Er(e,zn(["productCampaign"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.campaignUrl),_e(t.version)?On(t):(En(t,"ProductCampaign.ff"),t.do="getProductCampaigns",kn(t,t.url,t.version))),e,!1)},Sr.shoppingCartCampaign=function(e){var t;Er(e,zn(["shoppingCartCampaign"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.campaignUrl),_e(t.version)?On(t):(En(t,"ProductCampaign.ff"),t.do="getShoppingCartCampaigns",kn(t,t.url,t.version))),e,!1)},Sr.pageCampaigns=function(e){var t;Er(e,zn(["pageCampaigns"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.campaignUrl),_e(t.version)?On(t):(En(t,"ProductCampaign.ff"),t.do="getPageCampaigns",kn(t,t.url,t.version))),e,!1)},Sr.recommendation=function(e){var t;Er(e,zn(["recommendation"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.recommendationUrl),_e(t.version)?On(t):(En(t,"Recommender.ff"),t.do="getRecommendation",kn(t,t.url,t.version))),e,!1)},Sr.compare=function(e){ft(e.ids)?e.ids.length<2?D("Not at least 2 ids in this compare event",e):(Er(e,zn(["compare"])),Pr(function(e){if(e=Mt(jn(I.communication.globalSearchParameter),e),_e(e.version)){Pn(e,I.communication.globalCustomUrls.compareUrl);var t=ke(e,I.communication.globalCommunicationParameter.ngApi),n=t.url,i=t.addlParams;return delete e.ids,kn(e,n,e.version)+i}var r="&ids="+e.ids.join(";");return delete e.ids,Pn(e,I.communication.globalCustomUrls.compareUrl),En(e,"Compare.ff"),kn(e,e.url,e.version)+r}(e),e,!1)):D("No ids in this compare event",e)},Sr.getRecords=function(e){var t;Er(e,zn(["getRecords"])),Pr((t=e,Pn(t=Mt(jn(I.communication.globalSearchParameter),t),I.communication.globalCustomUrls.getRecordsUrl),_e(t.version)?On(t):(En(t,"rest/v1/records/"+t.channel),delete t.channel,kn(t,t.url,t.version))),e,!1)};var Lr=[],Ir=[];function Tr(e){(e=Object.assign(an(),e)).dispatchId=++I.communication.eventCounter;var t,n=I.communication.globalSearchParameter;if(!e.version){var i=parseFloat(n.version);_e(n.version)?e.version=n.version:isNaN(i)?D("Global search parameter 'version' ".concat(n.version?"has invalid format.":"is not defined.")):e.version=i}if(_e(e.version)&&!I.communication.globalCommunicationParameter.ngApi&&D("Global communication parameter 'api' is not defined."),tt(e.type,e.version),!e.channel){var r=Pt();if(r){var a=Et(r);a.channel&&(e.channel=a.channel,n.channel=e.channel)}e.channel||(e.channel=n.channel)}_e(e.version)&&I.communication.globalCommunicationParameter.categoryPage&&"suggest"!==e.type&&("search"===e.type?e.searchImmediate:!1!==e.navigation&&"false"!==e.navigation)&&(e.navigation="true");for(var o=0;o<Lr.length;o++){var s=Lr[o];e.fail?e.fail=vt(e.fail,s.fn):e.fail=s.fn}for(dn.setOrCreateSid(e),dn.validateSidLength(e.sid),o=0;o<Ir.length;o++){s=Ir[o];try{s.fn(e)}catch(e){console.log("Could not execute beforeDispatchingCallback: "+e)}}return e.query&&(e.query=("string"==typeof e.query?e.query:e.query[0]).replace(/<[\0-\uFFFF]*>/g,"")),n.url&&e.channel&&e.version||(F('Required search params are not available: [url(globalSearchParameter): "'.concat(n.url,'"], [url(event): "').concat(e.url,'"], [channel: "').concat(e.channel,'"], [version: "').concat(e.version,'"]')),D("At the time this event was emitted no configuration was available, See https://web-components.fact-finder.de/documentation/ready-events",e)),(t=e).type?-1<t.type.indexOf("recommendation")?Sr.recommendation(t):-1<t.type.indexOf("similarProducts")?Sr.similarProducts(t):-1<t.type.indexOf("compare")?Sr.compare(t):null!=Sr[t.type]?Sr[t.type](t):N("Event could not be delegated. No valid type specified - type ["+t.type+"]"):N("Event could not be delegated. No type specified"),e.dispatchId}function jr(e){if(e){var t=Vt(20);return Lr.push({fn:e,key:t}),t}M("addFailCallback: fn is undefined")}function Rr(e){var t=Lr.length;return(Lr=Lr.filter((function(t){return t.key!==e}))).length!==t}function Mr(e){if(e){var t=Vt(20);return I.communication.beforeHistoryPushCallbacks.push({fn:e,key:t}),t}M("addBeforeHistoryPushCallback: fn is undefined")}function Ar(e){var t=I.communication.beforeHistoryPushCallbacks;return I.communication.beforeHistoryPushCallbacks=t.filter((function(t){return t.key!==e})),I.communication.beforeHistoryPushCallbacks.length!==t.length}function Nr(e){if(e){var t=Vt(20);return Ir.push({fn:e,key:t}),t}M("addBeforeDispatchingCallback: fn is undefined")}function Dr(e){var t=Ir.length;return(Ir=Ir.filter((function(t){return t.key!==e}))).length!==t}function Fr(e){return I.communication.currentSearchResult}var Vr=["id","sid","query","pos","origPos","page","origPageSize"],Ur=["id","sid","query","pos","page"],qr=["id","sid","count"],Br=["id","sid","count"],zr=["id","sid","mainId"],Wr=["userId","sid"],Hr=["id","sid","query","positive"],Kr=["sid","query","positive"],Yr=["campaign","id","pageId","sid"];function Gr(e){var t=$i()?Ur:Vr;ia("click",e,t),ta(t,e)||"function"!=typeof e.always||e.always()}function Xr(e){ia("cart",e,qr)}function Zr(e){ia("checkout",e,Br)}function Jr(e){var t=Wr;if(dn.setOrCreateSid(e),ta(t,e)){var n="".concat(e.sid,":").concat(e.userId),i=Bt.getItem(n);i&&i===e.userId||(Bt.setItem(n,e.userId),e.event="login",na(e))}else D(ra("login",e,t))}function $r(e){ia("recommendationClick",e,zr)}function Qr(e){ia("feedback",e,$i()?Kr:Hr)}function ea(e){I.communication.globalCommunicationParameter.ngApi===ce.v4?ia("landingPageClick",e,Yr):D("Landing Page Click tracking is not supported in used API Version.")}function ta(e,t){return e.every((function(e){return t.hasOwnProperty(e)}))}function na(e){if(!e.channel){var t=Pt();if(t){var n=Et(t);n.channel&&(e.channel=n.channel)}e.channel||(e.channel=I.communication.globalSearchParameter.channel)}var i=I.communication.globalCommunicationParameter.addTrackingParams;if(i)try{for(var r=i.trim().split(","),a=0;a<r.length;a++){var o=r[a];try{var s=o.split("="),c=s[0].trim(),u=s[1].trim();e[c]=u}catch(e){}}}catch(e){}var l=Sn(e);e.success||(e.success=function(){}),kr({url:l,pushParametersToHistory:!1,ffEvent:e,success:e.success,fail:e.fail,always:e.always})}function ia(e,t,n){dn.setOrCreateSid(t),ta(n,t)?(t.event=e,na(t)):D(ra(e,t,n))}function ra(e,t,n){var i=n.filter((function(e){return!t.hasOwnProperty(e)}));return"The following parameters for ".concat(e," event are missing: ").concat(i.join(", "),".")}var aa=function(){function e(){p()(this,e),this.storage=Bt,this.neededClickInfo=["id","sid","query","pos","origPos","page","origPageSize"],this.neededClickInfoNG=["id","sid","query","pos","page"],this.neededCartInfo=["id","sid","count"],this.neededCheckoutInfo=["id","sid","count"],this.neededRecoInfo=["id","sid","mainId"],this.neededLoginInfo=["userId","sid"],this.neededSearchFeedbackInfo=["id","sid","query","positive"],this.neededSearchFeedbackInfoNG=["sid","query","positive"],this.neededLandingPageInfo=["campaign","id","pageId","sid"],U("Tracking12","Tracking")}return f()(e,[{key:"click",value:function(e){var t=$i()?this.neededClickInfoNG:this.neededClickInfo;this.handleEventRequest("click",e,t),!0!==this.checkNeededParamsAvailable(t,e)&&"function"==typeof e.always&&e.always()}},{key:"cart",value:function(e){this.handleEventRequest("cart",e,this.neededCartInfo)}},{key:"checkout",value:function(e){this.handleEventRequest("checkout",e,this.neededCheckoutInfo)}},{key:"login",value:function(e){var t=this.neededLoginInfo;if(dn.setOrCreateSid(e),!0===this.checkNeededParamsAvailable(t,e)){var n="".concat(e.sid,":").concat(e.userId),i=this.storage.getItem(n);i&&i===e.userId||(this.storage.setItem(n,e.userId),e.event="login",this._sendRequest(e))}else D(this.getWarningMessage("login",e,t))}},{key:"recommendationClick",value:function(e){this.handleEventRequest("recommendationClick",e,this.neededRecoInfo)}},{key:"searchFeedback",value:function(e){var t=$i()?this.neededSearchFeedbackInfoNG:this.neededSearchFeedbackInfo;this.handleEventRequest("feedback",e,t)}},{key:"landingPageClick",value:function(e){I.communication.globalCommunicationParameter.ngApi===ce.v4?this.handleEventRequest("landingPageClick",e,this.neededLandingPageInfo):D("Landing page tracking is not supported in used API Version.")}},{key:"checkNeededParamsAvailable",value:function(e,t){for(var n=0;n<e.length;n++){var i=e[n];if(!t.hasOwnProperty(i))return!1}return!0}},{key:"_sendRequest",value:function(e){if(!e.channel){var t=Pt();if(t){var n=Et(t);n.channel&&(e.channel=n.channel)}e.channel||(e.channel=I.communication.globalSearchParameter.channel)}var i=I.communication.globalCommunicationParameter.addTrackingParams;if(i)try{for(var r=i.trim().split(","),a=0;a<r.length;a++){var o=r[a];try{var s=o.split("="),c=s[0].trim(),u=s[1].trim();e[c]=u}catch(e){}}}catch(e){}var l=Sn(e);e.success||(e.success=function(){}),kr({url:l,pushParametersToHistory:!1,ffEvent:e,success:e.success,fail:e.fail,always:e.always})}},{key:"handleEventRequest",value:function(e,t,n){dn.setOrCreateSid(t),!0===this.checkNeededParamsAvailable(n,t)?(t.event=e,this._sendRequest(t)):D(this.getWarningMessage(e,t,n))}},{key:"getWarningMessage",value:function(e,t,n){var i=n.filter((function(e){return!1===t.hasOwnProperty(e)}));return"The following parameters for ".concat(e," event are missing: ").concat(i.join(", "),".")}}]),e}(),oa=Object.assign({},P),sa={entries:[]},ca=Object.assign({},S);["currentSearchResult","navigationResult","navigationLayer","eventCounter"].forEach((function(e){return la(ca,e)}));var ua=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},_),k),E),{Tracking:P}),x),m),{EventAggregator:ca,ResultDispatcher:w,Util:C});function la(e,t){Object.defineProperty(e,t,{get:function(){return I.communication[t]},set:function(e){return I.communication[t]=e}})}function da(e){ua.ResultDispatcher.addCallback(e.topic,e.handler,void 0)}["fieldRoles","globalCommunicationParameter","globalElementValues","globalCustomUrls","globalSearchParameter"].forEach((function(e){return la(ua,e)}));var fa=n(0),ha=ga(v),pa=ga({version:fa.a,common:en,middleware:L,communication:ua,isReady:!0});pa.__experimental=Qe;var ma={trackingManager:oa};function ga(e){var t="[object Module]"===e.toString()?Object.assign({},e):e;for(var n in t)"object"==typeof t[n]&&null!==t[n]&&(t[n]=ga(t[n]));return t}Object.defineProperty(ua,"trackingManager",{get:function(){return en.Logger.emitDeprecationWarning("factfinder.communication.trackingManager","factfinder.communication.Tracking"),ma.trackingManager},set:function(e){ma.trackingManager=e}}),window.factfinder=pa,en.fireCustomEvent("ffReady",!0,!1,document,{factfinder:pa,resultDispatcher:ua.ResultDispatcher,eventAggregator:ua.EventAggregator})}]),y=v.factfinder,b=v.internal},function(e,t){function n(t){return e.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},n(t)}e.exports=n},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}e.exports=function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}},function(e,t,n){n(1);var i=n(80);function r(t,n,a){return"undefined"!=typeof Reflect&&Reflect.get?e.exports=r=Reflect.get:e.exports=r=function(e,t,n){var r=i(e,t);if(r){var a=Object.getOwnPropertyDescriptor(r,t);return a.get?a.get.call(n):a.value}},r(t,n,a||t)}e.exports=r},function(e,t){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return S})),n.d(t,"e",(function(){return P})),n.d(t,"d",(function(){return E})),n.d(t,"c",(function(){return x})),n.d(t,"b",(function(){return O}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(2),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(0),b=n(9),_=n(28),k=n(41);function w(){var e=r()([""]);return w=function(){return e},e}var C=Object.freeze({Comment:8}),S=function(e){function t(){return o()(this,t),l()(this,f()(t).apply(this,arguments))}return g()(t,e),c()(t,[{key:"createRenderRoot",value:function(){return this}},{key:"showSelf",value:function(){this.classList.remove("ffw-hidden")}},{key:"hideSelf",value:function(){this.classList.add("ffw-hidden")}},{key:"shouldUpdate",value:function(e){return this._preprocessBooleanProperties(e),!0}},{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._preprocessBooleanProperties(this.constructor._classProperties)}},{key:"_preprocessBooleanProperties",value:function(e){var t=this;e.forEach((function(e,n){var i,r,a;t.constructor._classProperties.get(n).type===x&&(i=t[n],"true"!==(r=String(i).toLowerCase())&&"false"!==r&&y.a.common.Logger.error("".concat(t.constructor.is,": ")+"StringyBoolean property [".concat(n,"] is expected to be either true or false, but is [").concat(t[n],"]. ")+"Falling back to false."),t[n]=(a=t[n],"true"===String(a).toLowerCase()))}))}}]),t}(Object(b.a)([Object(k.a)()],v.a));function P(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(null==e)return Object(v.b)(w());if("string"==typeof e)return Object(v.b)([Object(_.a)(e,t)]);var n=document.createElement("div");return n.appendChild(e),Object(v.b)([Object(_.a)(n.innerHTML,t)])}function E(e){return!e.innerHTML.trim()||Array.from(e.childNodes).every((function(e){return e.nodeType===C.Comment}))}var x=String.bind({});function O(e){return null==e?e:String(e)}},function(e,t,n){var i=n(24),r=n(20);e.exports=function(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?r(e):t}},function(e,t,n){var i=n(62);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}},function(e,t){e.exports=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var i=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=1<arguments.length?arguments[1]:void 0;return e.reduce((function(e,t){var n=t(e);return n===e||e.prototype instanceof n?e:n}),t)}},function(e,t,n){"use strict";var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(7),p=n.n(h),m=n(12),g=n(24),v=n.n(g),y=n(25),b=n(16);function _(e,t){for(var n=e.element.content,i=e.parts,r=document.createTreeWalker(n,133,null,!1),a=w(i),o=i[a],s=-1,c=0,u=[],l=null;r.nextNode();){s++;var d=r.currentNode;for(d.previousSibling===l&&(l=null),t.has(d)&&(u.push(d),null===l&&(l=d)),null!==l&&c++;void 0!==o&&o.index===s;)o.index=null!==l?-1:o.index-c,o=i[a=w(i,a)]}u.forEach((function(e){return e.parentNode.removeChild(e)}))}var k=function(e){for(var t=11===e.nodeType?0:1,n=document.createTreeWalker(e,133,null,!1);n.nextNode();)t++;return t},w=function(e){for(var t=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:-1)+1;t<e.length;t++){var n=e[t];if(Object(b.d)(n))return t}return-1},C=n(37),S=n(34),P=n(33),E=function(e,t){return"".concat(e,"--").concat(t)},x=!0;void 0===window.ShadyCSS?x=!1:void 0===window.ShadyCSS.prepareTemplateDom&&(console.warn("Incompatible ShadyCSS version detected. Please update to at least @webcomponents/webcomponentsjs@2.0.2 and @webcomponents/shadycss@1.3.1."),x=!1);var O=["html","svg"],L=new Set,I=n(18),T=n.n(I),j=n(63),R=n.n(j),M=n(69),A=n.n(M),N=n(26),D=n.n(N);window.JSCompiler_renameProperty=function(e,t){return e};var F={toAttribute:function(e,t){switch(t){case Boolean:return e?"":null;case Object:case Array:return null==e?e:JSON.stringify(e)}return e},fromAttribute:function(e,t){switch(t){case Boolean:return null!==e;case Number:return null===e?null:Number(e);case Object:case Array:return JSON.parse(e)}return e}},V=function(e,t){return t!==e&&(t==t||e==e)},U={attribute:!0,type:String,converter:F,reflect:!1,hasChanged:V},q=Promise.resolve(!0),B="finalized",z=function(e){function t(){var e;return r()(this,t),(e=c()(this,l()(t).call(this)))._updateState=0,e._instanceProperties=void 0,e._updatePromise=q,e._hasConnectedResolver=void 0,e._changedProperties=new Map,e._reflectingProperties=void 0,e.initialize(),e}var n;return p()(t,e),o()(t,[{key:"initialize",value:function(){this._saveInstanceProperties(),this._requestUpdate()}},{key:"_saveInstanceProperties",value:function(){var e=this;this.constructor._classProperties.forEach((function(t,n){if(e.hasOwnProperty(n)){var i=e[n];delete e[n],e._instanceProperties||(e._instanceProperties=new Map),e._instanceProperties.set(n,i)}}))}},{key:"_applyInstanceProperties",value:function(){var e=this;this._instanceProperties.forEach((function(t,n){return e[n]=t})),this._instanceProperties=void 0}},{key:"connectedCallback",value:function(){this._updateState=32|this._updateState,this._hasConnectedResolver&&(this._hasConnectedResolver(),this._hasConnectedResolver=void 0)}},{key:"disconnectedCallback",value:function(){}},{key:"attributeChangedCallback",value:function(e,t,n){t!==n&&this._attributeToProperty(e,n)}},{key:"_propertyToAttribute",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:U,i=this.constructor,r=i._attributeNameForProperty(e,n);if(void 0!==r){var a=i._propertyValueToAttribute(t,n);if(void 0===a)return;this._updateState=8|this._updateState,null==a?this.removeAttribute(r):this.setAttribute(r,a),this._updateState=-9&this._updateState}}},{key:"_attributeToProperty",value:function(e,t){if(!(8&this._updateState)){var n=this.constructor,i=n._attributeToPropertyMap.get(e);if(void 0!==i){var r=n._classProperties.get(i)||U;this._updateState=16|this._updateState,this[i]=n._propertyValueFromAttribute(t,r),this._updateState=-17&this._updateState}}}},{key:"_requestUpdate",value:function(e,t){var n=!0;if(void 0!==e){var i=this.constructor,r=i._classProperties.get(e)||U;i._valueHasChanged(this[e],t,r.hasChanged)?(this._changedProperties.has(e)||this._changedProperties.set(e,t),!0!==r.reflect||16&this._updateState||(void 0===this._reflectingProperties&&(this._reflectingProperties=new Map),this._reflectingProperties.set(e,r))):n=!1}!this._hasRequestedUpdate&&n&&this._enqueueUpdate()}},{key:"requestUpdate",value:function(e,t){return this._requestUpdate(e,t),this.updateComplete}},{key:"_enqueueUpdate",value:(n=A()(R.a.mark((function e(){var t,n,i,r,a=this;return R.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this._updateState=4|this._updateState,i=this._updatePromise,this._updatePromise=new Promise((function(e,i){t=e,n=i})),e.prev=3,e.next=6,i;case 6:e.next=10;break;case 8:e.prev=8,e.t0=e.catch(3);case 10:if(this._hasConnected){e.next=13;break}return e.next=13,new Promise((function(e){return a._hasConnectedResolver=e}));case 13:if(e.prev=13,null!=(r=this.performUpdate()))return e.next=18,r;e.next=18;break;case 18:e.next=23;break;case 20:e.prev=20,e.t1=e.catch(13),n(e.t1);case 23:t(!this._hasRequestedUpdate);case 24:case"end":return e.stop()}}),e,this,[[3,8],[13,20]])}))),function(){return n.apply(this,arguments)})},{key:"performUpdate",value:function(){this._instanceProperties&&this._applyInstanceProperties();var e=!1,t=this._changedProperties;try{(e=this.shouldUpdate(t))&&this.update(t)}catch(t){throw e=!1,t}finally{this._markUpdated()}e&&(1&this._updateState||(this._updateState=1|this._updateState,this.firstUpdated(t)),this.updated(t))}},{key:"_markUpdated",value:function(){this._changedProperties=new Map,this._updateState=-5&this._updateState}},{key:"_getUpdateComplete",value:function(){return this._updatePromise}},{key:"shouldUpdate",value:function(e){return!0}},{key:"update",value:function(e){var t=this;void 0!==this._reflectingProperties&&0<this._reflectingProperties.size&&(this._reflectingProperties.forEach((function(e,n){return t._propertyToAttribute(n,t[n],e)})),this._reflectingProperties=void 0)}},{key:"updated",value:function(e){}},{key:"firstUpdated",value:function(e){}},{key:"_hasConnected",get:function(){return 32&this._updateState}},{key:"_hasRequestedUpdate",get:function(){return 4&this._updateState}},{key:"hasUpdated",get:function(){return 1&this._updateState}},{key:"updateComplete",get:function(){return this._getUpdateComplete()}}],[{key:"_ensureClassProperties",value:function(){var e=this;if(!this.hasOwnProperty(JSCompiler_renameProperty("_classProperties",this))){this._classProperties=new Map;var t=Object.getPrototypeOf(this)._classProperties;void 0!==t&&t.forEach((function(t,n){return e._classProperties.set(n,t)}))}}},{key:"createProperty",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:U;if(this._ensureClassProperties(),this._classProperties.set(e,t),!t.noAccessor&&!this.prototype.hasOwnProperty(e)){var n="symbol"===v()(e)?Symbol():"__".concat(e);Object.defineProperty(this.prototype,e,{get:function(){return this[n]},set:function(t){var i=this[e];this[n]=t,this._requestUpdate(e,i)},configurable:!0,enumerable:!0})}}},{key:"finalize",value:function(){var e=Object.getPrototypeOf(this);if(e.hasOwnProperty(B)||e.finalize(),this[B]=!0,this._ensureClassProperties(),this._attributeToPropertyMap=new Map,this.hasOwnProperty(JSCompiler_renameProperty("properties",this))){var t=this.properties,n=[].concat(T()(Object.getOwnPropertyNames(t)),T()("function"==typeof Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(t):[])),i=!0,r=!1,a=void 0;try{for(var o,s=n[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var c=o.value;this.createProperty(c,t[c])}}catch(e){r=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(r)throw a}}}}},{key:"_attributeNameForProperty",value:function(e,t){var n=t.attribute;return!1===n?void 0:"string"==typeof n?n:"string"==typeof e?e.toLowerCase():void 0}},{key:"_valueHasChanged",value:function(e,t){return(2<arguments.length&&void 0!==arguments[2]?arguments[2]:V)(e,t)}},{key:"_propertyValueFromAttribute",value:function(e,t){var n=t.type,i=t.converter||F,r="function"==typeof i?i:i.fromAttribute;return r?r(e,n):e}},{key:"_propertyValueToAttribute",value:function(e,t){if(void 0!==t.reflect){var n=t.type,i=t.converter;return(i&&i.toAttribute||F.toAttribute)(e,n)}}},{key:"observedAttributes",get:function(){var e=this;this.finalize();var t=[];return this._classProperties.forEach((function(n,i){var r=e._attributeNameForProperty(i,n);void 0!==r&&(e._attributeToPropertyMap.set(r,i),t.push(r))})),t}}]),t}(D()(HTMLElement));z.finalized=!0;var W="adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype;Symbol(),n.d(t,"a",(function(){return H})),n.d(t,"b",(function(){return m.g})),(window.litElementVersions||(window.litElementVersions=[])).push("2.2.1");var H=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return p()(t,e),o()(t,[{key:"initialize",value:function(){f()(l()(t.prototype),"initialize",this).call(this),this.renderRoot=this.createRenderRoot(),window.ShadowRoot&&this.renderRoot instanceof window.ShadowRoot&&this.adoptStyles()}},{key:"createRenderRoot",value:function(){return this.attachShadow({mode:"open"})}},{key:"adoptStyles",value:function(){var e=this.constructor._styles;0!==e.length&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow?W?this.renderRoot.adoptedStyleSheets=e.map((function(e){return e.styleSheet})):this._needsShimAdoptedStyleSheets=!0:window.ShadyCSS.ScopingShim.prepareAdoptedCssText(e.map((function(e){return e.cssText})),this.localName))}},{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this.hasUpdated&&void 0!==window.ShadyCSS&&window.ShadyCSS.styleElement(this)}},{key:"update",value:function(e){var n=this;f()(l()(t.prototype),"update",this).call(this,e);var i=this.render();i instanceof m.d&&this.constructor.render(i,this.renderRoot,{scopeName:this.localName,eventContext:this}),this._needsShimAdoptedStyleSheets&&(this._needsShimAdoptedStyleSheets=!1,this.constructor._styles.forEach((function(e){var t=document.createElement("style");t.textContent=e.cssText,n.renderRoot.appendChild(t)})))}},{key:"render",value:function(){}}],[{key:"finalize",value:function(){f()(l()(t),"finalize",this).call(this),this._styles=this.hasOwnProperty(JSCompiler_renameProperty("styles",this))?this._getUniqueStyles():this._styles||[]}},{key:"_getUniqueStyles",value:function(){var e=this.styles,t=[];return Array.isArray(e)?function(e){return e.flat?e.flat(1/0):function e(t){for(var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],i=0,r=t.length;i<r;i++){var a=t[i];Array.isArray(a)?e(a,n):n.push(a)}return n}(e)}(e).reduceRight((function(e,t){return e.add(t),e}),new Set).forEach((function(e){return t.unshift(e)})):e&&t.push(e),t}}]),t}(z);H.finalized=!0,H.render=function(e,t,n){if(!n||"object"!==v()(n)||!n.scopeName)throw new Error("The `scopeName` option is required.");var i,r=n.scopeName,a=C.a.has(t),o=x&&11===t.nodeType&&!!t.host,s=o&&!L.has(r),c=s?document.createDocumentFragment():t;if(Object(C.b)(e,c,Object.assign({templateFactory:(i=r,function(e){var t=E(e.type,i),n=S.a.get(t);void 0===n&&(n={stringsArray:new WeakMap,keyString:new Map},S.a.set(t,n));var r=n.stringsArray.get(e.strings);if(void 0!==r)return r;var a=e.strings.join(b.f);if(void 0===(r=n.keyString.get(a))){var o=e.getTemplateElement();x&&window.ShadyCSS.prepareTemplateDom(o,i),r=new b.a(e,o),n.keyString.set(a,r)}return n.stringsArray.set(e.strings,r),r})},n)),s){var u=C.a.get(c);C.a.delete(c),function(e,t,n){L.add(e);var i=n?n.element:document.createElement("template"),r=t.querySelectorAll("style"),a=r.length;if(0!==a){for(var o,s=document.createElement("style"),c=0;c<a;c++){var u=r[c];u.parentNode.removeChild(u),s.textContent+=u.textContent}o=e,O.forEach((function(e){var t=S.a.get(E(e,o));void 0!==t&&t.keyString.forEach((function(e){var t=e.element.content,n=new Set;Array.from(t.querySelectorAll("style")).forEach((function(e){n.add(e)})),_(e,n)}))}));var l=i.content;n?function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,i=e.element.content,r=e.parts;if(null!=n)for(var a=document.createTreeWalker(i,133,null,!1),o=w(r),s=0,c=-1;a.nextNode();)for(c++,a.currentNode===n&&(s=k(t),n.parentNode.insertBefore(t,n));-1!==o&&r[o].index===c;){if(0<s){for(;-1!==o;)r[o].index+=s,o=w(r,o);return}o=w(r,o)}else i.appendChild(t)}(n,s,l.firstChild):l.insertBefore(s,l.firstChild),window.ShadyCSS.prepareTemplateStyles(i,e);var d=l.querySelector("style");if(window.ShadyCSS.nativeShadow&&null!==d)t.insertBefore(d.cloneNode(!0),t.firstChild);else if(n){l.insertBefore(s,l.firstChild);var f=new Set;f.add(s),_(n,f)}}else window.ShadyCSS.prepareTemplateStyles(i,e)}(r,c,u.value instanceof P.a?u.value.template:void 0),Object(y.b)(t,t.firstChild),t.appendChild(c),C.a.set(t,u)}!a&&o&&window.ShadyCSS.styleElement(t.host)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return g})),n.d(t,"a",(function(){return v}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(35).a,v=function(e){return function(t){return function(t){function n(){var e;return r()(this,n),(e=c()(this,l()(n).call(this)))._subscriptionKey=void 0,e._subscribedTopic=void 0,e}return p()(n,t),o()(n,[{key:"connectedCallback",value:function(){"function"==typeof f()(l()(n.prototype),"connectedCallback",this)&&f()(l()(n.prototype),"connectedCallback",this).call(this),this._subscriptionKey||!1===this.subscribe||y(this,this.topic||e)}},{key:"update",value:function(){var t=this.topic||e;!1===this.subscribe?b(this):t!==this._subscribedTopic&&_(this,t),"function"==typeof f()(l()(n.prototype),"update",this)&&f()(l()(n.prototype),"update",this).call(this)}},{key:"disconnectedCallback",value:function(){"function"==typeof f()(l()(n.prototype),"disconnectedCallback",this)&&f()(l()(n.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&b(this)}},{key:"_subscriptionCallback",value:function(){throw new Error("'_subscriptionCallback' function not implemented")}}]),n}(t)}},y=function(e,t){e._subscribedTopic=t,e._subscriptionKey=m.a.communication.ResultDispatcher.subscribe(t,e._subscriptionCallback,e)},b=function(e){m.a.communication.ResultDispatcher.unsubscribe(e._subscribedTopic,e._subscriptionKey),e._subscriptionKey=void 0,e._subscribedTopic=void 0},_=function(e,t){e._subscribedTopic&&b(e),y(e,t)}},function(e,t,n){"use strict";var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(19),c=new(function(){function e(){r()(this,e)}return o()(e,[{key:"handleAttributeExpressions",value:function(e,t,n,i){var r=t[0];return"."===r?new s.f(e,t.slice(1),n).parts:"@"===r?[new s.d(e,t.slice(1),i.eventContext)]:"?"===r?[new s.c(e,t.slice(1),n)]:new s.a(e,t,n).parts}},{key:"handleTextExpression",value:function(e){return new s.e(e)}}]),e}()),u=n(40),l=n(36),d=n(25),f=(n(22),n(37)),h=(n(34),n(33),n(16));n.d(t,"g",(function(){return p})),n.d(t,"f",(function(){return l.a})),n.d(t,"h",(function(){return d.b})),n.d(t,"j",(function(){return d.c})),n.d(t,"a",(function(){return s.b})),n.d(t,"b",(function(){return s.e})),n.d(t,"c",(function(){return s.g})),n.d(t,"i",(function(){return f.b})),n.d(t,"d",(function(){return u.b})),n.d(t,"e",(function(){return h.c})),(window.litHtmlVersions||(window.litHtmlVersions=[])).push("1.1.2");var p=function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return new u.b(e,n,"html",c)}},function(e,t,n){"use strict";n.r(t),n.d(t,"ElementLog",(function(){return p}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=function(){return function(e){return function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"trace",value:function(e){e=this._createMsg("trace",e),h.a.common.Logger.trace(e)}},{key:"info",value:function(e){e=this._createMsg("info",e),h.a.common.Logger.info(e)}},{key:"debug",value:function(e){e=this._createMsg("debug",e),h.a.common.Logger.debug(e)}},{key:"warn",value:function(e){e=this._createMsg("warn",e),h.a.common.Logger.warn(e)}},{key:"error",value:function(e){e=this._createMsg("error",e),h.a.common.Logger.error(e)}},{key:"_createMsg",value:function(e,t){return"".concat(e.toUpperCase()," ").concat(this.constructor.is,": ").concat(t)}}]),t}(e)}}},function(e,t,n){"use strict";function i(e){var t=document.createElement("div");t.innerHTML=e;var n=t.firstElementChild;return t.removeChild(n),n}function r(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return n.reduce((function(t,n,i){return t+n+e[i+1]}),e[0])}function a(e,t){var n=e.parentNode||t,i=e.nextSibling,r=e.cloneNode(!0);return function(e,t,a){for(var o=Math.max(e.length,t.length),s=0;s<o;s++){var c=e[s];c||(c=r.cloneNode(!0),n.insertBefore(c,i)),a&&a(c,t[s])}}}function o(e){var t=getComputedStyle(e);if("fixed"===t.position)return window;for(var n="absolute"===t.position,i=/(auto|scroll)/,r=e;r&&"BODY"!==r.tagName.toUpperCase()&&"HTML"!==r.tagName.toUpperCase();r=r.parentElement){var a=getComputedStyle(r);if((!n||"static"!==a.position)&&i.test("".concat(a.overflow).concat(a.overflowY).concat(a.overflowX)))return r}return window}function s(e){if(e){var t=document.querySelector(e);if(!t)return factfinder.common.Logger.warn("WARN: Infinite scrolling container not found for selector: ".concat(e,". Falling back to window.")),window;var n=t.tagName.toUpperCase();return"BODY"===n||"HTML"===n?(factfinder.common.Logger.warn('WARN: Element "'.concat(n,'" is not a valid scrollable container. Falling back to window.')),window):t}}function c(e,t){if(!e)throw new Error("Invalid argument: node.");if(!t)throw new Error("Invalid argument: tagName.");for(;e.parentElement;)if((e=e.parentElement).tagName.toUpperCase()===t.toUpperCase())return e}n.d(t,"a",(function(){return i})),n.d(t,"e",(function(){return r})),n.d(t,"f",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"b",(function(){return c}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s}));var i=n(0),r=i.b.NgApiVersions,a=i.a.communication;function o(){return s()&&r.getApiString(a.globalCommunicationParameter.ngApi)===r.Versions.v4}function s(){return a.Util.isNg()}},function(e,t,n){"use strict";n.d(t,"f",(function(){return a})),n.d(t,"g",(function(){return o})),n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return u})),n.d(t,"d",(function(){return d})),n.d(t,"c",(function(){return f})),n.d(t,"e",(function(){return h}));var i=n(4),r=n.n(i),a="{{lit-".concat(String(Math.random()).slice(2),"}}"),o="\x3c!--".concat(a,"--\x3e"),s=new RegExp("".concat(a,"|").concat(o)),c="$lit$",u=function e(t,n){r()(this,e),this.parts=[],this.element=n;for(var i=[],o=[],u=document.createTreeWalker(n.content,133,null,!1),d=0,p=-1,m=0,g=t.strings,v=t.values.length;m<v;){var y=u.nextNode();if(null!==y){if(p++,1===y.nodeType){if(y.hasAttributes()){for(var b=y.attributes,_=b.length,k=0,w=0;w<_;w++)l(b[w].name,c)&&k++;for(;0<k--;){var C=g[m],S=h.exec(C)[2],P=S.toLowerCase()+c,E=y.getAttribute(P);y.removeAttribute(P);var x=E.split(s);this.parts.push({type:"attribute",index:p,name:S,strings:x}),m+=x.length-1}}"TEMPLATE"===y.tagName&&(o.push(y),u.currentNode=y.content)}else if(3===y.nodeType){var O=y.data;if(0<=O.indexOf(a)){for(var L=y.parentNode,I=O.split(s),T=I.length-1,j=0;j<T;j++){var R=void 0,M=I[j];if(""===M)R=f();else{var A=h.exec(M);null!==A&&l(A[2],c)&&(M=M.slice(0,A.index)+A[1]+A[2].slice(0,-c.length)+A[3]),R=document.createTextNode(M)}L.insertBefore(R,y),this.parts.push({type:"node",index:++p})}""===I[T]?(L.insertBefore(f(),y),i.push(y)):y.data=I[T],m+=T}}else if(8===y.nodeType)if(y.data===a){var N=y.parentNode;null!==y.previousSibling&&p!==d||(p++,N.insertBefore(f(),y)),d=p,this.parts.push({type:"node",index:p}),null===y.nextSibling?y.data="":(i.push(y),p--),m++}else for(var D=-1;-1!==(D=y.data.indexOf(a,D+1));)this.parts.push({type:"node",index:-1}),m++}else u.currentNode=o.pop()}for(var F=0;F<i.length;F++){var V=i[F];V.parentNode.removeChild(V)}},l=function(e,t){var n=e.length-t.length;return 0<=n&&e.slice(n)===t},d=function(e){return-1!==e.index},f=function(){return document.createComment("")},h=/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/},function(e,t,n){"use strict";n.r(t),n.d(t,"RecordList",(function(){return S}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(44),g=n(0),v=n(14),y=n(9),b=n(39),_=n(41),k=n(51),w=n(5),C='[data-container="infinite-scroll-placeholder"]',S=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).subscribe=!0,e.infiniteDebounceDelay=32,e.infiniteScrollMargin=0,e.infiniteScrollContainer="",e.restoreScrollPosition=!0,e.__isRecommendation=!1,e.__isLandingPage=!1,e.__campaign="",e.__pageId="",e._origHTML=e.innerHTML,e}return p()(t,e),f()(t,[{key:"subscriptionKey",get:function(){return this._subscriptionKey}}],[{key:"is",get:function(){return"ff-record-list"}},{key:"properties",get:function(){return{records:{type:Array},subscribe:{type:w.c},infiniteScrolling:{type:Boolean,attribute:"infinite-scrolling"},infiniteDebounceDelay:{type:Number,attribute:"infinite-debounce-delay"},infiniteScrollMargin:{type:Number,attribute:"infinite-scroll-margin"},infiniteScrollContainer:{type:String,attribute:"infinite-scroll-container"},infiniteMaxPages:{type:Number,attribute:"infinite-max-pages"},restoreScrollPosition:{type:w.c,attribute:"restore-scroll-position"},ssr:{type:Boolean,reflectToAttribute:!0}}}}]),f()(t,[{key:"connectedCallback",value:function(){var e,n=this;if(this._restoreScrollHandler=(e=this,function(t){var n=t.detail,i=n.records,r=n.scroll,a=n.previousViewedRecord;E(e,i).then((function(){var t=Object(v.d)(e.infiniteScrollContainer)||Object(v.c)(e.children[a-1]);t===window?window.scrollTo(r.scrollLeft,r.scrollTop):(t.scrollLeft=r.scrollLeft,t.scrollTop=r.scrollTop)}))}),this._scrollingHandler=this._scrollingHandler||function(e){return function(){var n;e.infiniteScrolling&&0<=(n=e.getBoundingClientRect()).left&&n.bottom+e.infiniteScrollMargin<=(window.innerHeight||document.documentElement.clientHeight)&&n.right+e.infiniteScrollMargin<=(window.innerWidth||document.documentElement.clientWidth)&&(e._loadNextPageDebouncerJob=Object(m.a)(e._loadNextPageDebouncerJob,t,e.infiniteDebounceDelay),e._loadNextPageDebouncerJob.run())};function t(){e.loadNextPage.call(e)}}(this),l()(c()(t.prototype),"connectedCallback",this).call(this),!0===this.subscribe&&(this._subscriptionKey=g.a.communication.ResultDispatcher.subscribe("records",this._recordsChangedFFEventHandler,this)),this._templateInfiniteScrollRecordPlaceholder=this._templateInfiniteScrollRecordPlaceholder||this.querySelector(C)||Object(v.a)('<div data-container="infinite-scroll-placeholder"></div>'),this._templateInfiniteScrollRecordPlaceholder.parentNode&&this._templateInfiniteScrollRecordPlaceholder.parentNode.removeChild(this._templateInfiniteScrollRecordPlaceholder),this._templateRecord=this._templateRecord||this.querySelector(b.Record.is),this._templateRecord&&this._templateRecord.parentNode&&(this.templateInsertionInfo={parentNode:this._templateRecord.parentNode,nextElementSibling:this._templateRecord.nextElementSibling},!this._templateRecord.templateString&&this._templateRecord.innerHTML&&(this._templateRecord.templateString=this._templateRecord.innerHTML),this.ssr||this._templateRecord.parentNode.removeChild(this._templateRecord)),this.ssr){var i='template[data-role="record"]',r=this.querySelector(i);if(!r)throw Error("No SSR template with selector '".concat(i,"' could be found, but property ssr-rendered is set. Cannot properly initialize record list."));r.parentNode.removeChild(r);var a=document.importNode(r.content,!0);this._templateRecord=a.querySelector(b.Record.is),this._templateRecord.templateString=this._templateRecord.innerHTML,this.querySelectorAll(b.Record.is).forEach((function(e){e.templateString=n._templateRecord.innerHTML})),this.templateInsertionInfo.nextElementSibling=void 0}this.ssr||this.records&&this.records.length||this.hideSelf()}},{key:"update",value:function(e){e.has("infiniteScrolling")&&this._infiniteScrollingChanged(this.infiniteScrolling,e.infiniteScrolling),e.has("records")&&this._recordsPropertyChanged(this.records),e.has("restoreScrollPosition")&&this._restoreScrollPositionChanged(this.restoreScrollPosition,e.restoreScrollPosition),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),this.unsubscribe(),this._loadNextPageDebouncerJob&&this._loadNextPageDebouncerJob.cancel(),P(this._scrollingContainer,this._scrollingHandler),this._scrollingHandler=function(){},document.removeEventListener(k.a,this._restoreScrollHandler),l()(c()(t.prototype),"disconnectedCallback",this).call(this)}},{key:"unsubscribe",value:function(){this._subscriptionKey&&(g.a.communication.ResultDispatcher.unsubscribe("records",this._subscriptionKey),this._subscriptionKey=void 0)}},{key:"loadNextPage",value:function(){var e=g.a.communication.EventAggregator.currentSearchResult,t=function(e,t){if(t&&t.paging.nextLink&&!e._currentLoadingNextPage){var n=Math.ceil(e.querySelectorAll(b.Record.is).length/t.paging.resultsPerPage)+1,i=Math.max(n,t.paging.nextLink.number);return i>t.paging.pageCount?void 0:i}}(this,e);if(t&&!(t>this.infiniteMaxPages)&&(this._currentLoadingNextPage=t,this._currentLoadNextPageDispatchId=g.a.communication.EventAggregator.addFFEvent({type:"paging",number:this._currentLoadingNextPage,topics:function(){return["result","records"]}}),this.infiniteScrolling))for(var n=(this._currentLoadingNextPage-1)*e.paging.resultsPerPage,i=n;i<n+e.paging.resultsPerPage;i++)this.insertBefore(this._templateInfiniteScrollRecordPlaceholder.cloneNode(!0),this.children[i])}},{key:"_recordsChangedFFEventHandler",value:function(e,t){var n=this;t&&t.dispatchId===this._currentLoadNextPageDispatchId?E(this,e).then((function(){n._currentLoadingNextPage=void 0,n._currentLoadNextPageDispatchId=void 0,Array.from(n.querySelectorAll(C)).forEach(n.removeChild.bind(n))})):(T(this,e?e.length:0),E(this,e))}},{key:"_recordsPropertyChanged",value:function(e,t){var n,i;n=e,i=t,Boolean(n&&i&&n.length===i.length&&n.every((function(e,t){return Object(b.isSameRecordData)(e,i[t])})))||(T(this,e?e.length:0),E(this,e))}},{key:"_infiniteScrollingChanged",value:function(e,t){var n,i;e?(this._scrollingContainer=Object(v.d)(this.infiniteScrollContainer)||Object(v.c)(this),n=this._scrollingContainer,i=this._scrollingHandler,n.addEventListener("scroll",i,!1),window.addEventListener("resize",i,!1)):(P(this._scrollingContainer,this._scrollingHandler),this._scrollingHandler=function(){},this._scrollingContainer=void 0)}},{key:"_restoreScrollPositionChanged",value:function(e,t){!0===e?document.addEventListener(k.a,this._restoreScrollHandler):document.removeEventListener(k.a,this._restoreScrollHandler)}}]),t}(Object(y.a)([Object(_.a)()],w.a));function P(e,t){e&&e.removeEventListener("scroll",t,!1),window.removeEventListener("resize",t,!1)}function E(e,t){return new Promise((function(n){if(!t||!t.length)return e.hideSelf(),void n();var i=e.templateInsertionInfo.parentNode,r=function(e){for(var t=[],n=0;n<e.children.length;n++){var i=e.children[n];(O(i)||x(i))&&t.push(i)}return t}(i);t.forEach((function(t,n){var a=r[e.infiniteScrolling?t.position-1:n];a?x(a)?I(a,t,e):O(a)?i.replaceChild(I(e._templateRecord.clone(),t,e),a):L(e,t):L(e,t)})),e.showSelf(),requestAnimationFrame((function(){e.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0})),e.infiniteScrolling&&e._scrollingHandler(),n()}))}))}function x(e){return e.nodeName===b.Record.is.toUpperCase()}function O(e){return"infinite-scroll-placeholder"===e.getAttribute("data-container")}function L(e,t){var n=I(e._templateRecord.clone(),t,e),i=e.templateInsertionInfo,r=i.parentNode,a=i.nextElementSibling;a?r.insertBefore(n,a):r.appendChild(n)}function I(e,t,n){return e.__isRecommendation=n.__isRecommendation,e.recordData=t,e.__isLandingPage=n.__isLandingPage,e.__campaign=n.__campaign,e.__pageId=n.__pageId,n._currentLoadingNextPage&&(e.recordData.page=n._currentLoadingNextPage),e}function T(e,t){var n=e.templateInsertionInfo.parentNode,i=n.removeChild.bind(n);Array.from(e.querySelectorAll(b.Record.is)).slice(t).forEach(i),Array.from(e.querySelectorAll(C)).forEach(i)}window.customElements.define(S.is,S)},function(e,t,n){var i=n(78),r=n(66),a=n(79);e.exports=function(e){return i(e)||r(e)||a()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return P})),n.d(t,"b",(function(){return E})),n.d(t,"e",(function(){return x})),n.d(t,"c",(function(){return O})),n.d(t,"f",(function(){return L})),n.d(t,"g",(function(){return I})),n.d(t,"d",(function(){return R}));var i=n(6),r=n.n(i),a=n(1),o=n.n(a),s=n(3),c=n.n(s),u=n(7),l=n.n(u),d=n(4),f=n.n(d),h=n(2),p=n.n(h),m=n(24),g=n.n(m),v=n(36),y=n(25),b=n(22),_=n(33),k=n(40),w=n(16),C=function(e){return null===e||!("object"===g()(e)||"function"==typeof e)},S=function(e){return Array.isArray(e)||!(!e||!e[Symbol.iterator])},P=function(){function e(t,n,i){f()(this,e),this.dirty=!0,this.element=t,this.name=n,this.strings=i,this.parts=[];for(var r=0;r<i.length-1;r++)this.parts[r]=this._createPart()}return p()(e,[{key:"_createPart",value:function(){return new E(this)}},{key:"_getValue",value:function(){for(var e=this.strings,t=e.length-1,n="",i=0;i<t;i++){n+=e[i];var r=this.parts[i];if(void 0!==r){var a=r.value;if(C(a)||!S(a))n+="string"==typeof a?a:String(a);else{var o=!0,s=!1,c=void 0;try{for(var u,l=a[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value;n+="string"==typeof d?d:String(d)}}catch(e){s=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(s)throw c}}}}}return n+e[t]}},{key:"commit",value:function(){this.dirty&&(this.dirty=!1,this.element.setAttribute(this.name,this._getValue()))}}]),e}(),E=function(){function e(t){f()(this,e),this.value=void 0,this.committer=t}return p()(e,[{key:"setValue",value:function(e){e===b.a||C(e)&&e===this.value||(this.value=e,Object(v.b)(e)||(this.committer.dirty=!0))}},{key:"commit",value:function(){for(;Object(v.b)(this.value);){var e=this.value;this.value=b.a,e(this)}this.value!==b.a&&this.committer.commit()}}]),e}(),x=function(){function e(t){f()(this,e),this.value=void 0,this.__pendingValue=void 0,this.options=t}return p()(e,[{key:"appendInto",value:function(e){this.startNode=e.appendChild(Object(w.c)()),this.endNode=e.appendChild(Object(w.c)())}},{key:"insertAfterNode",value:function(e){this.startNode=e,this.endNode=e.nextSibling}},{key:"appendIntoPart",value:function(e){e.__insert(this.startNode=Object(w.c)()),e.__insert(this.endNode=Object(w.c)())}},{key:"insertAfterPart",value:function(e){e.__insert(this.startNode=Object(w.c)()),this.endNode=e.endNode,e.endNode=this.startNode}},{key:"setValue",value:function(e){this.__pendingValue=e}},{key:"commit",value:function(){for(;Object(v.b)(this.__pendingValue);){var e=this.__pendingValue;this.__pendingValue=b.a,e(this)}var t=this.__pendingValue;t!==b.a&&(C(t)?t!==this.value&&this.__commitText(t):t instanceof k.b?this.__commitTemplateResult(t):t instanceof Node?this.__commitNode(t):S(t)?this.__commitIterable(t):t===b.b?(this.value=b.b,this.clear()):this.__commitText(t))}},{key:"__insert",value:function(e){this.endNode.parentNode.insertBefore(e,this.endNode)}},{key:"__commitNode",value:function(e){this.value!==e&&(this.clear(),this.__insert(e),this.value=e)}},{key:"__commitText",value:function(e){var t=this.startNode.nextSibling,n="string"==typeof(e=null==e?"":e)?e:String(e);t===this.endNode.previousSibling&&3===t.nodeType?t.data=n:this.__commitNode(document.createTextNode(n)),this.value=e}},{key:"__commitTemplateResult",value:function(e){var t=this.options.templateFactory(e);if(this.value instanceof _.a&&this.value.template===t)this.value.update(e.values);else{var n=new _.a(t,e.processor,this.options),i=n._clone();n.update(e.values),this.__commitNode(i),this.value=n}}},{key:"__commitIterable",value:function(t){Array.isArray(this.value)||(this.value=[],this.clear());var n,i=this.value,r=0,a=!0,o=!1,s=void 0;try{for(var c,u=t[Symbol.iterator]();!(a=(c=u.next()).done);a=!0){var l=c.value;void 0===(n=i[r])&&(n=new e(this.options),i.push(n),0===r?n.appendIntoPart(this):n.insertAfterPart(i[r-1])),n.setValue(l),n.commit(),r++}}catch(t){o=!0,s=t}finally{try{a||null==u.return||u.return()}finally{if(o)throw s}}r<i.length&&(i.length=r,this.clear(n&&n.endNode))}},{key:"clear",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.startNode;Object(y.b)(this.startNode.parentNode,e.nextSibling,this.endNode)}}]),e}(),O=function(){function e(t,n,i){if(f()(this,e),this.value=void 0,this.__pendingValue=void 0,2!==i.length||""!==i[0]||""!==i[1])throw new Error("Boolean attributes can only contain a single expression");this.element=t,this.name=n,this.strings=i}return p()(e,[{key:"setValue",value:function(e){this.__pendingValue=e}},{key:"commit",value:function(){for(;Object(v.b)(this.__pendingValue);){var e=this.__pendingValue;this.__pendingValue=b.a,e(this)}if(this.__pendingValue!==b.a){var t=!!this.__pendingValue;this.value!==t&&(t?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name),this.value=t),this.__pendingValue=b.a}}}]),e}(),L=function(e){function t(e,n,i){var a;return f()(this,t),(a=r()(this,o()(t).call(this,e,n,i))).single=2===i.length&&""===i[0]&&""===i[1],a}return l()(t,e),p()(t,[{key:"_createPart",value:function(){return new I(this)}},{key:"_getValue",value:function(){return this.single?this.parts[0].value:c()(o()(t.prototype),"_getValue",this).call(this)}},{key:"commit",value:function(){this.dirty&&(this.dirty=!1,this.element[this.name]=this._getValue())}}]),t}(P),I=function(e){function t(){return f()(this,t),r()(this,o()(t).apply(this,arguments))}return l()(t,e),t}(E),T=!1;try{var j={get capture(){return!(T=!0)}};window.addEventListener("test",j,j),window.removeEventListener("test",j,j)}catch(e){}var R=function(){function e(t,n,i){var r=this;f()(this,e),this.value=void 0,this.__pendingValue=void 0,this.element=t,this.eventName=n,this.eventContext=i,this.__boundHandleEvent=function(e){return r.handleEvent(e)}}return p()(e,[{key:"setValue",value:function(e){this.__pendingValue=e}},{key:"commit",value:function(){for(;Object(v.b)(this.__pendingValue);){var e=this.__pendingValue;this.__pendingValue=b.a,e(this)}if(this.__pendingValue!==b.a){var t=this.__pendingValue,n=this.value,i=null==t||null!=n&&(t.capture!==n.capture||t.once!==n.once||t.passive!==n.passive),r=null!=t&&(null==n||i);i&&this.element.removeEventListener(this.eventName,this.__boundHandleEvent,this.__options),r&&(this.__options=M(t),this.element.addEventListener(this.eventName,this.__boundHandleEvent,this.__options)),this.value=t,this.__pendingValue=b.a}}},{key:"handleEvent",value:function(e){"function"==typeof this.value?this.value.call(this.eventContext||this.element,e):this.value.handleEvent(e)}}]),e}(),M=function(e){return e&&(T?{capture:e.capture,passive:e.passive,once:e.once}:e.capture)}},function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},function(e,t,n){var i=n(46);e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){i(e,t,n[t])}))}return e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return r}));var i={},r={}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n(12),r=function(e,t){var n=e.startNode.parentNode,r=void 0===t?e.endNode:t.startNode,a=n.insertBefore(Object(i.e)(),r);n.insertBefore(Object(i.e)(),r);var o=new i.b(e.options);return o.insertAfterNode(a),o},a=function(e,t){return e.setValue(t),e.commit(),e},o=function(e,t,n){var r=e.startNode.parentNode,a=n?n.startNode:e.endNode,o=t.endNode.nextSibling;o!==a&&Object(i.j)(r,t.startNode,o,a)},s=function(e){Object(i.h)(e.startNode.parentNode,e.startNode,e.endNode.nextSibling)},c=function(e,t,n){for(var i=new Map,r=t;r<=n;r++)i.set(e[r],r);return i},u=new WeakMap,l=new WeakMap,d=Object(i.f)((function(e,t,n){var d;return void 0===n?n=t:void 0!==t&&(d=t),function(t){if(!(t instanceof i.b))throw new Error("repeat can only be used in text bindings");var f,h,p=u.get(t)||[],m=l.get(t)||[],g=[],v=[],y=[],b=0,_=!0,k=!1,w=void 0;try{for(var C,S=e[Symbol.iterator]();!(_=(C=S.next()).done);_=!0){var P=C.value;y[b]=d?d(P,b):b,v[b]=n(P,b),b++}}catch(t){k=!0,w=t}finally{try{_||null==S.return||S.return()}finally{if(k)throw w}}for(var E=0,x=p.length-1,O=0,L=v.length-1;E<=x&&O<=L;)if(null===p[E])E++;else if(null===p[x])x--;else if(m[E]===y[O])g[O]=a(p[E],v[O]),E++,O++;else if(m[x]===y[L])g[L]=a(p[x],v[L]),x--,L--;else if(m[E]===y[L])g[L]=a(p[E],v[L]),o(t,p[E],g[L+1]),E++,L--;else if(m[x]===y[O])g[O]=a(p[x],v[O]),o(t,p[x],p[E]),x--,O++;else if(void 0===f&&(f=c(y,O,L),h=c(m,E,x)),f.has(m[E]))if(f.has(m[x])){var I=h.get(y[O]),T=void 0!==I?p[I]:null;if(null===T){var j=r(t,p[E]);a(j,v[O]),g[O]=j}else g[O]=a(T,v[O]),o(t,T,p[E]),p[I]=null;O++}else s(p[x]),x--;else s(p[E]),E++;for(;O<=L;){var R=r(t,g[L+1]);a(R,v[O]),g[O++]=R}for(;E<=x;){var M=p[E++];null!==M&&s(M)}u.set(t,g),l.set(t,y)}}))},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(t){return"function"==typeof Symbol&&"symbol"===n(Symbol.iterator)?e.exports=i=function(e){return n(e)}:e.exports=i=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":n(e)},i(t)}e.exports=i},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return a}));var i=void 0!==window.customElements&&void 0!==window.customElements.polyfillWrapFlushCallback,r=function(e,t){for(var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;t!==n;){var r=t.nextSibling;e.insertBefore(t,i),t=r}},a=function(e,t){for(var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;t!==n;){var i=t.nextSibling;e.removeChild(t),t=i}}},function(e,t,n){var i=n(1),r=n(62),a=n(71),o=n(72);function s(t){var n="function"==typeof Map?new Map:void 0;return e.exports=s=function(e){if(null===e||!a(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return o(e,arguments,i(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),r(t,e)},s(t)}e.exports=s},function(e,t,n){var i=n(64),r=n(77),a=n(65);e.exports=function(e,t){return i(e)||r(e,t)||a()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(45),r=n(0);function a(e,t){var n=e.replace(/{{/g,i.tags[0]).replace(/}}(?!})/g,i.tags[1]);try{return Object(i.render)(n,t)}catch(t){return r.a.common.Logger.error("could not render template: ".concat(e),t),""}}},function(e,t,n){"use strict";n.r(t),n.d(t,"CollapseElement",(function(){return h}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=function(){return function(e){return function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"__transitionEnd",value:function(e){var t=this,n=e&&e.nodeName?e:e.currentTarget;try{n.__transitionActive__=!1,n.removeEventListener("transitionend",this.__transitionEnd),"0px"!==n.style.height?(this._updateTransition(n,!1),n.style.height="",n.style.overflow="",setTimeout((function(){return t._updateTransition(n,!0)}))):this._updateTransition(n,!0)}catch(e){console.log(e)}finally{if(n&&n.__collapseCallback__){var i=n.__collapseCallback__;delete n.__collapseCallback__,setTimeout((function(){try{i()}catch(e){console.log(e)}}),16)}}}},{key:"_updateTransition",value:function(e,t){e.style["transition-duration"]=!0===t?"":"0ms"}},{key:"_isDisplayed",value:function(e){var t=e.getBoundingClientRect();for(var n in t)if(0!==t[n])return!0;return!1}},{key:"_hide",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=2<arguments.length?arguments[2]:void 0;try{"0px"!==e.style.height&&this._doTransition(e,t,"0px",n)}catch(e){console.log(e)}}},{key:"_show",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=2<arguments.length?arguments[2]:void 0;try{this._doTransition(e,t,"auto",n)}catch(e){console.log(e)}}},{key:"_toggle",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=2<arguments.length?arguments[2]:void 0;e.hasAttribute("opened")?this._hide(e,t,n):this._show(e,t,n)}},{key:"_doTransition",value:function(e,t,n,i){if(!e.__transitionActive__){e.__transitionActive__=!0,i&&(e.__collapseCallback__=i);var r=window.getComputedStyle(e),a=r["transition-duration"]||r.transitionDuration;if(t=a&&"0"!==a.replace(/\D/g,"")&&t,this._updateTransition(e,!1),t&&this._isDisplayed(e)){var o=r.height;if("auto"===n&&(e.style.height="",n=r.height),n===(e.style.height=o))return e.style.height="",e.__transitionActive__=!1,delete e.__collapseCallback__,void this._updateTransition(e,t);e.offsetHeight,this._updateTransition(e,t),e.addEventListener("transitionend",this.__transitionEnd.bind(this))}"0px"===n?(e.style.overflow="hidden",e.removeAttribute("opened")):e.setAttribute("opened",""),e.style.height=n,t&&this._isDisplayed(e)||(e.offsetHeight,this.__transitionEnd(e))}}},{key:"_showChecked",value:function(e,t,n){e&&this._show(e,t,n)}},{key:"_hideChecked",value:function(e,t,n){e&&this._hide(e,t,n)}},{key:"_toggleChecked",value:function(e,t,n){e&&this._toggle(e,t,n)}}]),t}(e)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(46),r=n.n(i),a=n(21),o=n.n(a),s=n(0);function c(e,t){try{return o()({},e,r()({},t,s.b.Encoding.decodeURIComponent(e[t])))}catch(t){return e}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return I}));var i=n(21),r=n.n(i),a=n(8),o=n.n(a),s=n(4),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(12),_=n(0),k=n(55),w=n(9),C=(n(67),n(13)),S=n(5),P=n(30),E=n(15),x=n(38);function O(){var e=o()(["",""]);return O=function(){return e},e}function L(){var e=o()(["",""]);return L=function(){return e},e}var I=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this))).type="all",e.suggestion=void 0,e.ffPreventDefault=!1,e._template=void 0,e.addEventListener("click",e._clicked),e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this.suggestion&&JSON.parse(JSON.stringify(this.suggestion));return e&&this.query&&this.highlightQuery(e,this.query),this._template?Object(b.g)(L(),Object(S.e)(this._template,Object(P.a)(e,"name"))):Object(b.g)(O(),this.innerHTML)}},{key:"query",get:function(){return _.a.communication.globalElementValues.currentFFSearchBoxValue}}],[{key:"is",get:function(){return"ff-suggest-item"}},{key:"properties",get:function(){return{type:{type:String,reflect:!0},suggestion:{type:Object,attribute:!1}}}}]),g()(t,[{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._template=this._template||this.innerHTML||void 0}},{key:"update",value:function(e){this.suggestion?this.showSelf():this.hideSelf(),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){if(p()(f()(t.prototype),"updated",this).call(this,e),this.suggestion)try{Object(k.a)(this,this.suggestion.image)}catch(e){this.error(e)}}},{key:"highlightQuery",value:function(e,t){if(!e.queryHighlighted)if(t&&t.trim())try{var n=t.trim().split(" ").map(_.b.util.escapeRegex).join("|");e.name=e.name.replace(new RegExp(n,"gi"),(function(e){return'<span class="ffw-query">'.concat(e,"</span>")})),e.queryHighlighted=!0}catch(e){this.error(e)}else this.warn("Search query is not defined or is an empty string. Suggest item highlighting skipped.")}},{key:"_clicked",value:function(){var e={type:this.type,suggestion:this.suggestion,element:this};if(this.dispatchEvent(new CustomEvent("item-clicked",{detail:e,bubbles:!0})),!0!==this.ffPreventDefault){var t=Object(E.b)()?_.a.communication.fieldRoles.deeplink:"deeplink";if(!this.openDeeplink(this.suggestion.attributes[t])){var n="productName"===this.type?this.getRecordEvent():(this,r()({},_.a.common.decodeDict(_.a.common.urlStringToDict(this.suggestion.searchParams)),{queryFromSuggest:!0,userInput:_.a.communication.globalElementValues.currentFFSearchBoxValue,type:"search"}));Object(x.a)(n,this)}}else this.ffPreventDefault=!1}},{key:"getRecordEvent",value:function(){var e=parseFloat(_.a.communication.globalSearchParameter.version);isNaN(e)&&!Object(E.a)()&&(this.error("Could not parse float from FACT-Finder version string, using fallback article number search"),e=7.2);var t=Object(E.b)()?_.a.communication.fieldRoles.productNumber:"id",n=e<7.3?{type:"productDetail",id:this.suggestion.attributes.articleNr}:{type:"getRecords",recordId:[this.suggestion.attributes[t]]};return n.success=_.a.common.concatFunctions(n.success,this.recordSearchHandler.bind(this)),n}},{key:"recordSearchHandler",value:function(e){var t=e.searchResult?e.searchResult.records:e;t&&0<t.length&&_.a.communication.fieldRoles&&this.openDeeplink(t[0].record[_.a.communication.fieldRoles.deeplink])}},{key:"openDeeplink",value:function(e){return!!e&&(window.open(e,"_self"),!0)}}]),t}(Object(w.a)([Object(C.ElementLog)()],S.a));window.customElements.define(I.is,I)},function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(5);function b(){var e=r()(['<div class="ffw-page-item-container ffw-cursor" @click="','">',"</div>"]);return b=function(){return e},e}var _=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).type="pageLink",e.showSelected=!1,e}return g()(t,e),p()(t,[{key:"render",value:function(){return Object(v.b)(b(),this._changePage,Object(y.e)(this._template,this.pagingItem||{}))}}],[{key:"is",get:function(){return"ff-paging-item"}},{key:"properties",get:function(){return{type:{type:String,reflect:!0},pagingItem:{type:Object,attribute:!1},showSelected:{type:Boolean,attribute:"show-selected",reflect:!0},showOnly:{type:y.b,attribute:"show-only",reflect:!0}}}}]),p()(t,[{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this._template||(this._template=Object(y.d)(this)?"{{caption}}":this.innerHTML)}},{key:"update",value:function(e){e.has("pagingItem")&&(this.pagingItem?(this.classList.remove("ffw-disabled"),this.showSelf(),!0===this.pagingItem.currentPage?this.classList.add("ffw-selected"):this.classList.remove("ffw-selected")):(this.classList.add("ffw-disabled"),this.hideSelf())),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"clone",value:function(){var e=this.cloneNode(!0);return e._template=this._template,e}},{key:"_changePage",value:function(e){this.pagingItem&&!this.pagingItem.currentPage&&"true"!==this.showOnly&&factfinder.communication.EventAggregator.addFFEvent({type:"paging",number:this.pagingItem.number})}}]),t}(y.a);window.customElements.define(_.is,_)},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n(18),r=n.n(i),a=n(4),o=n.n(a),s=n(2),c=n.n(s),u=n(25),l=n(16),d=function(){function e(t,n,i){o()(this,e),this.__parts=[],this.template=t,this.processor=n,this.options=i}return c()(e,[{key:"update",value:function(e){var t=0,n=!0,i=!1,r=void 0;try{for(var a,o=this.__parts[Symbol.iterator]();!(n=(a=o.next()).done);n=!0){var s=a.value;void 0!==s&&s.setValue(e[t]),t++}}catch(e){i=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(i)throw r}}var c=!0,u=!1,l=void 0;try{for(var d,f=this.__parts[Symbol.iterator]();!(c=(d=f.next()).done);c=!0){var h=d.value;void 0!==h&&h.commit()}}catch(e){u=!0,l=e}finally{try{c||null==f.return||f.return()}finally{if(u)throw l}}}},{key:"_clone",value:function(){for(var e,t=u.a?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),n=[],i=this.template.parts,a=document.createTreeWalker(t,133,null,!1),o=0,s=0,c=a.nextNode();o<i.length;)if(e=i[o],Object(l.d)(e)){for(;s<e.index;)s++,"TEMPLATE"===c.nodeName&&(n.push(c),a.currentNode=c.content),null===(c=a.nextNode())&&(a.currentNode=n.pop(),c=a.nextNode());if("node"===e.type){var d=this.processor.handleTextExpression(this.options);d.insertAfterNode(c.previousSibling),this.__parts.push(d)}else{var f;(f=this.__parts).push.apply(f,r()(this.processor.handleAttributeExpressions(c,e.name,e.strings,this.options)))}o++}else this.__parts.push(void 0),o++;return u.a&&(document.adoptNode(t),customElements.upgrade(t)),t}}]),e}()},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));var i=n(16);function r(e){var t=a.get(e.type);void 0===t&&(t={stringsArray:new WeakMap,keyString:new Map},a.set(e.type,t));var n=t.stringsArray.get(e.strings);if(void 0!==n)return n;var r=e.strings.join(i.f);return void 0===(n=t.keyString.get(r))&&(n=new i.a(e,e.getTemplateElement()),t.keyString.set(r,n)),t.stringsArray.set(e.strings,n),n}var a=new Map},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var i=Object.freeze({result:"result",records:"records",asn:"asn",sort:"sort",paging:"paging",suggest:"suggest",bct:"bct",ppp:"ppp",pagingItems:"pagingItems",navigation:"navigation",recommendation:"recommendation",similarProducts:"similarProducts",singleWordSearch:"singleWordSearch",compare:"compare",productDetail:"productDetail",tagCloud:"tagCloud"})},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));var i=new WeakMap,r=function(e){return function(){var t=e.apply(void 0,arguments);return i.set(t,!0),t}},a=function(e){return"function"==typeof e&&i.has(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var i=n(25),r=n(19),a=n(34),o=new WeakMap,s=function(e,t,n){var s=o.get(t);void 0===s&&(Object(i.b)(t,t.firstChild),o.set(t,s=new r.e(Object.assign({templateFactory:a.b},n))),s.appendInto(t)),s.setValue(e),s.commit()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(0);function r(e,t){var n=new CustomEvent("before-".concat(e.type),{detail:e,bubbles:!0,cancelable:!0,composed:!0});(t||document).dispatchEvent(n),n.defaultPrevented||i.a.communication.EventAggregator.addFFEvent(n.detail)}},function(e,t,n){"use strict";n.r(t);var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(9),v=n(14),y=n(53),b=n(41),_=n(47),k=n(5),w=n(28);n.d(t,"isSameRecordData",(function(){return S})),n.d(t,"Record",(function(){return P}));var C=[function(e){return function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).searchLightDOM=!0,e.productImageIdentifier="[data-image]",e.productImageErrorIdentifier="[data-image-onerror]",e.redirectIdentifier="[data-redirect]",e.redirectTargetIdentifier="[data-redirect-target]",e.productAnchorIdentifier="[data-anchor]",e.recommendationIdentifier="[data-recommendation]",e.bindImmediate=!1,e.tracking=m.a.communication.Tracking,e}return p()(t,e),f()(t,null,[{key:"properties",get:function(){return{searchLightDOM:{type:Boolean},productImageIdentifier:{type:"String"},productImageErrorIdentifier:{type:"String"},redirectIdentifier:{type:"String"},redirectTargetIdentifier:{type:"String"},productAnchorIdentifier:{type:"String"},recommendationIdentifier:{type:"String"},bindImmediate:{type:Boolean},disableOverwrite:{type:Boolean}}}}]),f()(t,[{key:"ready",value:function(){l()(c()(t.prototype),"ready",this).call(this),this.bindImmediate&&(this.bindProductAnchors(),this.bindProductActions(),this.bindProductImage())}},{key:"bindProductActions",value:function(){this._bindProductRedirect()}},{key:"bindProductImage",value:function(){this.searchLightDOM&&this._bindProductImage(this)}},{key:"bindProductAnchors",value:function(){this.searchLightDOM&&this._bindProductAnchors(this)}},{key:"_bindProductImage",value:function(e){var t=this;e.querySelectorAll(this.productImageIdentifier).forEach((function(e){e.onerror||(e.onerror=t._bindOnError(e));var n=m.a.communication,i=n.fieldRoles?n.fieldRoles.imageUrl:"",r=e.getAttribute("data-image")||t.recordData.record[i]||t.recordData.record.ImageUrl;r?e.setAttribute("src",r):e.onerror()}))}},{key:"_bindOnError",value:function(e){var t=this;return function(){var n=e.getAttribute("data-image-onerror");e.onerror=null,n?e.setAttribute("src",n):m.a.common.Logger.debug("No image data for this record: ".concat(t.recordData.id))}}},{key:"_bindProductAnchors",value:function(e){e.querySelectorAll(this.productAnchorIdentifier).forEach((function(e){var t=e.getAttribute("data-anchor");t&&0!==t.length&&(e.setAttribute("href",t),e.removeAttribute("data-anchor"))}))}},{key:"_bindProductRedirect",value:function(){this.searchLightDOM&&this.bindRedirect(this)}},{key:"bindRedirect",value:function(e){var t=this;e&&e.querySelectorAll(this.redirectIdentifier).forEach((function(e){e.querySelectorAll("[data-track]").forEach((function(e){return e.attributes.removeNamedItem("data-track")})),t.registerClickListener(e)}))}},{key:"registerClickListener",value:function(e){var t=this,n=function(e){var n=e.ctrlKey||e.shiftKey||e.metaKey||e.altKey;return 0===e.button&&!n&&!t.disableOverwrite},i=function i(r){e.removeEventListener("mouseup",i),2!==r.button&&t._handleTrackingAndRedirect(r,n(r))};e.addEventListener("click",(function(e){n(e)&&e.preventDefault()})),e.addEventListener("mousedown",(function(t){e.addEventListener("mouseup",i),e.addEventListener("mouseleave",(function(){return e.removeEventListener("mouseup",i)}))}))}},{key:"_handleTrackingAndRedirect",value:function(e,t){var n=this;e.stopPropagation();var i=e.currentTarget,r=this.getRedirectTarget(i),a=this.getRedirectLocation(i);if(a){var o=function(){!0===t&&n.redirect(a,r)};if("_blank"===r){try{!0===this.__isRecommendation?this._trackRecommendationClick(this):!0===this.__isLandingPage?this._trackLandingPageClick(this):this._trackProductClick(this)}catch(e){console.log(e)}o()}else!0===this.__isRecommendation?this._trackRecommendationClick(this,void 0,o):!0===this.__isLandingPage?this._trackLandingPageClick(this,o):this._trackProductClick(this,void 0,o)}}},{key:"getRedirectLocation",value:function(e){var t=e.attributes.getNamedItem("data-redirect");if(t){var n=t.nodeValue;if(n&&0<n.length)return n;if(this.recordData)return this.recordData.record.Deeplink;m.a.common.Logger.debug("No record data available for data-redirect action.")}}},{key:"getRedirectTarget",value:function(e){var t=e.attributes.getNamedItem("data-redirect-target");if(t){var n=t.nodeValue;if(n)return n}return"_blank"}},{key:"redirect",value:function(e,t){m.a.communication.globalCommunicationParameter.useBrowserHistory&&function(e){var t=Object(v.b)(e,"ff-record-list"),n=Object(v.d)(t?t.infiniteScrollContainer:void 0)||Object(v.c)(e),i=n===window?{scrollLeft:window.pageXOffset,scrollTop:window.pageYOffset}:{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop};Object(y.c)({scroll:i,records:Array.from(e.parentElement.querySelectorAll(e.tagName)).map((function(e){return e.recordData})),previousViewedRecord:e.recordData.position})}(this),window.open(e,t)}}]),t}(e)},Object(b.a)(),Object(_.Tracking)()],S=function(e,t){return Boolean(e&&t&&e.id===t.id&&JSON.stringify(e)===JSON.stringify(t))},P=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).addCartClick=!1,e.addCheckoutClick=!1,e.recordData=void 0,e.__isRecommendation=!1,e.__isLandingPage=!1,e.__campaign="",e.__pageId="",e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-record"}},{key:"properties",get:function(){return{recordData:{type:Object},addCartClick:{type:Boolean,attribute:"add-cart-click"},addCheckoutClick:{type:Boolean,attribute:"add-checkout-click"}}}}]),f()(t,[{key:"connectedCallback",value:function(){this.updateTemplate(),l()(c()(t.prototype),"connectedCallback",this).call(this)}},{key:"updated",value:function(e){e.has("recordData")&&this._recordDataChanged(this.recordData,e.get("recordData")),l()(c()(t.prototype),"updated",this).call(this,e)}},{key:"_recordDataChanged",value:function(e,t){var n=this;if(e){if(!0===e.teaser)return this.innerHTML=e.text,!this.hasAttribute("is-teaser")&&this.setAttribute("is-teaser",""),void this.showSelf();this.hasAttribute("is-teaser")&&this.removeAttribute("is-teaser"),S(e,t)||(this.stamp(e),this.updateComplete.then((function(){n.bindProductActions(),n.bindProductImage(),n.bindProductAnchors(),n.bindClick(),n.addCartClick&&n.bindCartClick(),n.addCheckoutClick&&n.bindCheckoutClick()}))),this.showSelf()}else this.hideSelf()}},{key:"stamp",value:function(e){this.innerHTML=Object(w.a)(this.templateString,e)}},{key:"updateTemplate",value:function(e){e?this.templateString=e:this.templateString||(this.templateString=this.innerHTML)}},{key:"clone",value:function(){var e=document.createElement(t.is);return m.a.common.copyHTMLAttributes(this,e),e.templateString=this.templateString,e}}]),t}(Object(g.a)(C,k.a));window.customElements.define(P.is,P)},function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"a",(function(){return b}));var i=n(6),r=n.n(i),a=n(1),o=n.n(a),s=n(3),c=n.n(s),u=n(7),l=n.n(u),d=n(4),f=n.n(d),h=n(2),p=n.n(h),m=n(25),g=n(16),v=" ".concat(g.f," "),y=function(){function e(t,n,i,r){f()(this,e),this.strings=t,this.values=n,this.type=i,this.processor=r}return p()(e,[{key:"getHTML",value:function(){for(var e=this.strings.length-1,t="",n=!1,i=0;i<e;i++){var r=this.strings[i],a=r.lastIndexOf("\x3c!--");n=(-1<a||n)&&-1===r.indexOf("--\x3e",a+1);var o=g.e.exec(r);t+=null===o?r+(n?v:g.g):r.substr(0,o.index)+o[1]+o[2]+g.b+o[3]+g.f}return t+this.strings[e]}},{key:"getTemplateElement",value:function(){var e=document.createElement("template");return e.innerHTML=this.getHTML(),e}}]),e}(),b=function(e){function t(){return f()(this,t),r()(this,o()(t).apply(this,arguments))}return l()(t,e),p()(t,[{key:"getHTML",value:function(){return"<svg>".concat(c()(o()(t.prototype),"getHTML",this).call(this),"</svg>")}},{key:"getTemplateElement",value:function(){var e=c()(o()(t.prototype),"getTemplateElement",this).call(this),n=e.content,i=n.firstChild;return n.removeChild(i),Object(m.c)(n,i.firstChild),e}}]),t}(y)},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(7),p=n.n(h),m=function(){return function(e){return function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return p()(t,e),o()(t,[{key:"connectedCallback",value:function(){"function"==typeof f()(l()(t.prototype),"connectedCallback",this)&&f()(l()(t.prototype),"connectedCallback",this).call(this),this.hasAttribute("unresolved")&&this.removeAttribute("unresolved")}}]),t}(e)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(12),r=new WeakMap,a=Object(i.f)((function(e){return function(t){if(!(t instanceof i.a)||t instanceof i.c||"class"!==t.committer.name||1<t.committer.parts.length)throw new Error("The `classMap` directive must be used in the `class` attribute and must be the only part in the attribute.");var n=t.committer,a=n.element;r.has(t)||(a.className=n.strings.join(" "));var o=a.classList,s=r.get(t);for(var c in s)c in e||o.remove(c);for(var u in e){var l=e[u];s&&l===s[u]||o[l?"add":"remove"](u)}r.set(t,e)}}))},function(e,t,n){"use strict";n.r(t),n.d(t,"ProductsPerPageItem",(function(){return P})),n.d(t,"renderPPPItem",(function(){return E})),n.d(t,"getTemplate",(function(){return x}));var i=n(21),r=n.n(i),a=n(8),o=n.n(a),s=n(4),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(20),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(10),_=n(42),k=n(0),w=n(5);function C(){var e=o()(['<ff-products-per-page-item class="','" .template="','" .productsPerPageItem="','"></ff-products-per-page-item>']);return C=function(){return e},e}var S={dataTemplate:"{{value}}",attributes:{}},P=function(e){function t(){var e,n;return c()(this,t),(e=l()(this,f()(t).call(this))).template=S,e.addEventListener("click",(n=p()(e),function(){!n.productsPerPageItem.selected&&k.a.communication.EventAggregator.addFFEvent({type:"ppp",value:n.productsPerPageItem.value})})),e}return y()(t,e),g()(t,[{key:"render",value:function(){return Object(w.e)(this.template.dataTemplate,this.productsPerPageItem)}}],[{key:"is",get:function(){return"ff-products-per-page-item"}},{key:"properties",get:function(){return{productsPerPageItem:{type:Object},template:{type:Object,attribute:!1}}}}]),g()(t,[{key:"firstUpdated",value:function(e){var t=this;Object.keys(this.template.attributes).forEach((function(e){return t.setAttribute(e,t.template.attributes[e])}))}}]),t}(w.a);function E(e,t){return Object(b.b)(C(),Object(_.a)(r()({"ffw-selected":t.selected},e.classNames)),e,t)}function x(e){var t=e.querySelector(P.is);return!t||Object(w.d)(t)?S:{dataTemplate:t.innerHTML,attributes:Array.prototype.reduce.call(t.attributes,(function(e,t){var n=t.name,i=t.value;return"class"!==n&&(e[n]=i),e}),{}),classNames:(t.className||"").split(" ").reduce((function(e,t){return t&&(e[t]=!0),e}),{})}}window.customElements.define(P.is,P)},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var i=function(e,t,n){var i=void 0,r=function(){clearTimeout(i),i=void 0};return e&&"function"==typeof e.cancel&&e.cancel(),{cancel:r,run:function(){for(var e=arguments.length,a=new Array(e),o=0;o<e;o++)a[o]=arguments[o];r(),i=setTimeout((function(){i=void 0,t.apply(void 0,a)}),n)}}}},function(e,t,n){var i,r,a,o;o=function(e){var t=Object.prototype.toString,n=Array.isArray||function(e){return"[object Array]"===t.call(e)};function i(e){return"function"==typeof e}function r(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function a(e,t){return null!=e&&"object"==typeof e&&t in e}var o=RegExp.prototype.test,s=/\S/;function c(e){return t=s,n=e,!o.call(t,n);var t,n}var u={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},l=/\s*/,d=/\s+/,f=/\s*=/,h=/\s*\}/,p=/#|\^|\/|>|\{|&|=|!/;function m(e){this.string=e,this.tail=e,this.pos=0}function g(e,t){this.view=e,this.cache={".":this.view},this.parent=t}function v(){this.cache={}}m.prototype.eos=function(){return""===this.tail},m.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var n=t[0];return this.tail=this.tail.substring(n.length),this.pos+=n.length,n},m.prototype.scanUntil=function(e){var t,n=this.tail.search(e);switch(n){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,n),this.tail=this.tail.substring(n)}return this.pos+=t.length,t},g.prototype.push=function(e){return new g(e,this)},g.prototype.lookup=function(e){var t,n,r,o=this.cache;if(o.hasOwnProperty(e))t=o[e];else{for(var s,c,u,l=this,d=!1;l;){if(0<e.indexOf("."))for(s=l.view,c=e.split("."),u=0;null!=s&&u<c.length;)u===c.length-1&&(d=a(s,c[u])||(n=s,r=c[u],null!=n&&"object"!=typeof n&&n.hasOwnProperty&&n.hasOwnProperty(r))),s=s[c[u++]];else s=l.view[e],d=a(l.view,e);if(d){t=s;break}l=l.parent}o[e]=t}return i(t)&&(t=t.call(this.view)),t},v.prototype.clearCache=function(){this.cache={}},v.prototype.parse=function(t,i){var a=this.cache,o=t+":"+(i||e.tags).join(":"),s=a[o];return null==s&&(s=a[o]=function(t,i){if(!t)return[];var a,o,s,u=[],g=[],v=[],y=!1,b=!1;function _(){if(y&&!b)for(;v.length;)delete g[v.pop()];else v=[];b=y=!1}function k(e){if("string"==typeof e&&(e=e.split(d,2)),!n(e)||2!==e.length)throw new Error("Invalid tags: "+e);a=new RegExp(r(e[0])+"\\s*"),o=new RegExp("\\s*"+r(e[1])),s=new RegExp("\\s*"+r("}"+e[1]))}k(i||e.tags);for(var w,C,S,P,E,x,O=new m(t);!O.eos();){if(w=O.pos,S=O.scanUntil(a))for(var L=0,I=S.length;L<I;++L)c(P=S.charAt(L))?v.push(g.length):b=!0,g.push(["text",P,w,w+1]),w+=1,"\n"===P&&_();if(!O.scan(a))break;if(y=!0,C=O.scan(p)||"name",O.scan(l),"="===C?(S=O.scanUntil(f),O.scan(f),O.scanUntil(o)):"{"===C?(S=O.scanUntil(s),O.scan(h),O.scanUntil(o),C="&"):S=O.scanUntil(o),!O.scan(o))throw new Error("Unclosed tag at "+O.pos);if(E=[C,S,w,O.pos],g.push(E),"#"===C||"^"===C)u.push(E);else if("/"===C){if(!(x=u.pop()))throw new Error('Unopened section "'+S+'" at '+w);if(x[1]!==S)throw new Error('Unclosed section "'+x[1]+'" at '+w)}else"name"===C||"{"===C||"&"===C?b=!0:"="===C&&k(S)}if(x=u.pop())throw new Error('Unclosed section "'+x[1]+'" at '+O.pos);return function(e){for(var t,n=[],i=n,r=[],a=0,o=e.length;a<o;++a)switch((t=e[a])[0]){case"#":case"^":i.push(t),r.push(t),i=t[4]=[];break;case"/":r.pop()[5]=t[2],i=0<r.length?r[r.length-1][4]:n;break;default:i.push(t)}return n}(function(e){for(var t,n,i=[],r=0,a=e.length;r<a;++r)(t=e[r])&&("text"===t[0]&&n&&"text"===n[0]?(n[1]+=t[1],n[3]=t[3]):(i.push(t),n=t));return i}(g))}(t,i)),s},v.prototype.render=function(e,t,n,i){var r=this.parse(e,i),a=t instanceof g?t:new g(t);return this.renderTokens(r,a,n,e,i)},v.prototype.renderTokens=function(e,t,n,i,r){for(var a,o,s,c="",u=0,l=e.length;u<l;++u)s=void 0,"#"===(o=(a=e[u])[0])?s=this.renderSection(a,t,n,i):"^"===o?s=this.renderInverted(a,t,n,i):">"===o?s=this.renderPartial(a,t,n,r):"&"===o?s=this.unescapedValue(a,t):"name"===o?s=this.escapedValue(a,t):"text"===o&&(s=this.rawValue(a)),void 0!==s&&(c+=s);return c},v.prototype.renderSection=function(e,t,r,a){var o=this,s="",c=t.lookup(e[1]);if(c){if(n(c))for(var u=0,l=c.length;u<l;++u)s+=this.renderTokens(e[4],t.push(c[u]),r,a);else if("object"==typeof c||"string"==typeof c||"number"==typeof c)s+=this.renderTokens(e[4],t.push(c),r,a);else if(i(c)){if("string"!=typeof a)throw new Error("Cannot use higher-order sections without the original template");null!=(c=c.call(t.view,a.slice(e[3],e[5]),(function(e){return o.render(e,t,r)})))&&(s+=c)}else s+=this.renderTokens(e[4],t,r,a);return s}},v.prototype.renderInverted=function(e,t,i,r){var a=t.lookup(e[1]);if(!a||n(a)&&0===a.length)return this.renderTokens(e[4],t,i,r)},v.prototype.renderPartial=function(e,t,n,r){if(n){var a=i(n)?n(e[1]):n[e[1]];return null!=a?this.renderTokens(this.parse(a,r),t,n,a):void 0}},v.prototype.unescapedValue=function(e,t){var n=t.lookup(e[1]);if(null!=n)return n},v.prototype.escapedValue=function(t,n){var i=n.lookup(t[1]);if(null!=i)return e.escape(i)},v.prototype.rawValue=function(e){return e[1]},e.name="mustache.js",e.version="3.0.1",e.tags=["{{","}}"];var y=new v;return e.clearCache=function(){return y.clearCache()},e.parse=function(e,t){return y.parse(e,t)},e.render=function(e,t,i,r){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+(n(a=e)?"array":typeof a)+'" was given as the first argument for mustache#render(template, view, partials)');var a;return y.render(e,t,i,r)},e.to_html=function(t,n,r,a){var o=e.render(t,n,r);if(!i(a))return o;a(o)},e.escape=function(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return u[e]}))},e.Scanner=m,e.Context=g,e.Writer=v,e},t&&"string"!=typeof t.nodeName?o(t):(r=[t],void 0===(a="function"==typeof(i=o)?i.apply(t,r):i)||(e.exports=a))},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){"use strict";n.r(t),n.d(t,"INTERNAL_TRACKING_PRICE_FIELD_NAME",(function(){return m})),n.d(t,"Tracking",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=n(15),m="__TRACKING_PRICE__",g=function(){return function(e){return function(e){function t(){var e;return r()(this,t),(e=c()(this,l()(t).call(this))).clickSelector="[data-track]",e.productClickSelector='[data-track="productClick"]',e.recommendationClickSelector='[data-track="recommendationClick"]',e.checkoutClickSelector='[data-track="checkoutClick"]',e.cartClickSelector='[data-track="cartClick"]',e.dataCountSelector="[data-track-count]",e.tracking=h.a.communication.Tracking,e.getTrackingProductId=h.a.communication.Util.trackingHelper.getTrackingProductId,e.getPrice=h.a.communication.Util.trackingHelper.getPrice,e.getMasterArticleNumber=h.a.communication.Util.trackingHelper.getMasterArticleNumber,e.getUserId=h.a.communication.Util.trackingHelper.getUserId,e.getTitle=h.a.communication.Util.trackingHelper.getTitle,e}return f()(t,e),o()(t,[{key:"appendCount",value:function(e,t){e.count=t.count||"1";var n=t.querySelector(this.dataCountSelector);if(n){var i=n.getAttribute("data-track-count");e.count=n[i]||n.value||"1"}}},{key:"appendChannel",value:function(e,t){t.channel?e.channel=t.channel:e.channel=h.a.communication.globalSearchParameter.channel}},{key:"appendInstoreAds",value:function(e,t){"true"===t.record.__FFInstoreAds__&&(e.instoreAds="true")}},{key:"appendCampaign",value:function(e,t){t.record.__FFCampaign__&&(e.campaign=t.record.__FFCampaign__)}},{key:"appendUserId",value:function(e){var t=this.getUserId();null!=t&&(e.userId=t)}},{key:"appendTitle",value:function(e,t){var n=this.getTitle(t);null!=n&&(e.title=n)}},{key:"appendPageSize",value:function(e,t,n){var i=null;if(n&&n.resultsPerPageList)for(var r=0;r<n.resultsPerPageList.length;r++){var a=n.resultsPerPageList[r];if(1==a.selected){i=a.value;break}}null!=i&&(e.pageSize=i)}},{key:"appendOrigPageSize",value:function(e,t){var n=h.b.esPolyfills.find((function(e){return!0===e.default}))(t.resultsPerPageList)||t.resultsPerPageList[0];e.origPageSize=n.value}},{key:"appendSimi",value:function(e,t){var n=t.searchSimilarity;null!=n&&(e.simi=n)}},{key:"appendMasterArticleNumber",value:function(e,t){var n=this.getMasterArticleNumber(t);null!=n&&(e.masterId=n)}},{key:"getRecordElement",value:function(e,t){return t&&!e?{recordData:t}:e&&t?(e.recordData=t,e):e.tagName&&"ff-record"===e.tagName.toLowerCase()?this:h.a.common.getParentElementByName(e,"ff-record")}},{key:"bindClick",value:function(e){e=e||this,!0===this.__isRecommendation?v(this,this.clickSelector,(function(t){e._trackRecommendationClick(e)}),e):!0===this.__isLandingPage?v(this,this.clickSelector,(function(t){e._trackLandingPageClick(e)}),e):v(this,this.clickSelector,(function(t){e._trackProductClick(e)}),e)}},{key:"bindProductClick",value:function(e){e=e||this,v(this,this.productClickSelector,(function(t){e._trackProductClick(e)}),e)}},{key:"bindRecommendationClick",value:function(e){e=e||this,v(this,this.recommendationClickSelector,(function(t){e._trackRecommendationClick(e)}),e)}},{key:"bindCheckoutClick",value:function(e){e=e||this,v(this,this.checkoutClickSelector,(function(t){e._trackCheckoutClick(e)}),e)}},{key:"bindCartClick",value:function(e){e=e||this,v(this,this.cartClickSelector,(function(t){e._trackCartClick(e)}),e)}},{key:"_trackRecommendationClick",value:function(e,t,n){var i,r;if(i=t?{recordData:t}:e.tagName&&"ff-record"===e.tagName.toLowerCase()?this:h.a.common.getParentElementByName(e,"ff-record"),"ff-recommendation"===e.tagName.toLowerCase())r=e;else{var a=e;r=h.a.common.getParentElementByName(a,"ff-recommendation")}if(i){var o={mainId:r.recordId,id:this.getTrackingProductId(i.recordData)};this.appendMasterArticleNumber(o,i.recordData),this.appendUserId(o),n&&(o.always=n),this.tracking.recommendationClick(o)}}},{key:"_trackLandingPageClick",value:function(e,t){var n={campaign:e.recordData.__campaignId,id:e.recordData.id,pageId:e.recordData.__pageId};this.appendTitle(n,e.recordData),this.appendUserId(n),this.appendMasterArticleNumber(n,e.recordData),t&&(n.always=t),this.tracking.landingPageClick(n)}},{key:"_trackCheckoutClick",value:function(e,t,n){var i=this.getRecordElement(e,t);if(i){var r={id:this.getTrackingProductId(i.recordData),price:i.recordData.record[m]?i.recordData.record[m]:this.getPrice(i.recordData)};this.appendMasterArticleNumber(r,i.recordData),this.appendCount(r,e),this.appendChannel(r,e),this.appendCampaign(r,i.recordData),this.appendInstoreAds(r,i.recordData),this.appendUserId(r),n&&(r.always=n),this.tracking.checkout(r)}else console.log("No record element found. Tracking not possible.")}},{key:"_trackCartClick",value:function(e,t,n){var i=this.getRecordElement(e,t),r={id:this.getTrackingProductId(i.recordData),price:this.getPrice(i.recordData)};Object(p.a)()||(r.query=h.a.communication.Util.getQueryFromSearchParams()),this.appendMasterArticleNumber(r,i.recordData),this.appendCount(r,e),this.appendCampaign(r,i.recordData),this.appendInstoreAds(r,i.recordData),this.appendUserId(r),n&&(r.always=n),this.tracking.cart(r)}},{key:"_trackProductClick",value:function(e,t,n){var i=(e=this.getRecordElement(e,t)).recordData.position||e.recordData.record.__ORIG_POSITION__,r=h.a.common,a=h.a.communication.EventAggregator.currentSearchResult,o=function(e){return r.executeCallback(e),!1};if(!a)return o(n);var s=r.mergeProperties(r.parameterStringToDict(h.b.Encoding.fixedDecodeURIComponent(r.getParameterString())),r.parameterStringToDict(h.b.Encoding.fixedDecodeURIComponent(r.getParameterString(a.searchParams)))),c=h.a.communication.Util.getQueryFromSearchParams();if(Object(p.a)()&&(s.navigation||h.a.communication.globalCommunicationParameter.categoryPage)){var u=h.b.esPolyfills.find((function(e){return"categoryPath"===e.type}))(a.groups);if(u&&u.hasOwnProperty("__associatedFieldNameV4")){var l=h.b.esPolyfills.find((function(e){return e.name===u.__associatedFieldNameV4}))(a.filters);if(l&&0<l.valueList.length){var d=l.valueList[0].value;c=Object(p.b)()?d.map((function(e){return e.replace(/\//g,"%2F")})).join("/"):d}}}else if(!Object(p.a)()&&s.navigation){var f=h.a.communication.Util.extractCategoryPathFieldName();c=Object.keys(s).sort((function(e,t){return e.length-t.length})).map((function(e){return-1<e.indexOf(f)?s[e].join():""})).filter((function(e,t,n){return e&&n.indexOf(e)===t})).join("/")||c}if(!c)return r.Logger.error("Could not find the query. No tracking request will be sent"),o(n);var m={query:c,page:e.recordData.record.page||a.paging.currentPage,id:this.getTrackingProductId(e.recordData),pos:i,origPos:e.recordData.record.__ORIG_POSITION__||i};this.appendPageSize(m,e.recordData,a),this.appendSimi(m,e.recordData),this.appendMasterArticleNumber(m,e.recordData),this.appendCampaign(m,e.recordData),this.appendInstoreAds(m,e.recordData),this.appendTitle(m,e.recordData),this.appendUserId(m),this.appendOrigPageSize(m,a),n&&(m.always=n),this.tracking.click(m)}}]),t}(e)}};function v(e,t,n,i){var r=(i||e).querySelectorAll(t);return!!r&&(n=n.bind(e),r.forEach((function(e){return e.addEventListener("click",n)})),!0)}},function(e,t,n){"use strict";n.r(t),n.d(t,"Communication",(function(){return P}));var i=n(27),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(45),y=n(0),b=n(51),_=n(9),k=n(13),w=n(11),C=n(15),S="_ff-communication-history-fallback",P=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).ignorePage=!1,e._popstateHandler=function(t){t instanceof CustomEvent&&t.detail&&(t=t.detail),!0===e.useBrowserHistory&&t&&t.state&&Object(b.b)(t.state,S)},e}return g()(t,e),p()(t,[{key:"useUrlParameter",get:function(){return y.a.common.Logger.emitDeprecationWarning("".concat(t.is,"/useUrlParameter"),"".concat(t.is,"/useUrlParameters")),this.useUrlParameters},set:function(e){y.a.common.Logger.emitDeprecationWarning("".concat(t.is,"/useUrlParameter"),"".concat(t.is,"/useUrlParameters")),this.useUrlParameters=e}}],[{key:"createProperties",value:function(){var e=this;this._attributeToPropertyMap=new Map;var t=function(t){var n=e.properties[t];e._attributeToPropertyMap.set(n.attribute||t,t),Object.defineProperty(e.prototype,t,{get:function(){return n.get&&"function"==typeof n.get?n.get.bind(this)():n.group?y.a.communication[n.group][n.name||t]:this["__".concat(t)]},set:function(e){n.set&&"function"==typeof n.set?n.set.bind(this)(e):n.group?y.a.communication[n.group][n.name||t]=e:this["__".concat(t)]=e},configurable:!0,enumerable:!0})};for(var n in this.properties)t(n);this._propsCreated=!0}},{key:"is",get:function(){return"ff-communication"}},{key:"properties",get:function(){return{version:{type:String,group:"globalSearchParameter",name:"version"},api:{type:String,group:"globalCommunicationParameter",name:"ngApi"},addParams:{attribute:"add-params",group:"globalCommunicationParameter",type:String},categoryPage:{attribute:"category-page",group:"globalCommunicationParameter",type:String},addTrackingParams:{attribute:"add-tracking-params",group:"globalCommunicationParameter",type:String},ajax:{group:"globalCommunicationParameter",type:Boolean},currencyCode:{attribute:"currency-code",group:"globalCommunicationParameter",type:String},currencyCountryCode:{attribute:"currency-country-code",group:"globalCommunicationParameter",type:String},currencyFields:{attribute:"currency-fields",group:"globalCommunicationParameter",type:String},currencyMaxDigits:{attribute:"currency-max-digits",group:"globalCommunicationParameter",type:String},currencyMinDigits:{attribute:"currency-min-digits",group:"globalCommunicationParameter",type:String},disableCache:{attribute:"disable-cache",group:"globalCommunicationParameter",type:Boolean},filterUrlPrefix:{attribute:"filter-url-prefix",group:"globalCommunicationParameter",type:String},generateAdvisorTree:{attribute:"generate-advisor-tree",group:"globalCommunicationParameter",type:Boolean},keepFilters:{attribute:"keep-filters",group:"globalCommunicationParameter",type:Boolean},keepUrlParams:{attribute:"keep-url-params",group:"globalCommunicationParameter",type:String},onlySearchParams:{attribute:"only-search-params",group:"globalCommunicationParameter",type:Boolean},parameterWhitelist:{attribute:"parameter-whitelist",group:"globalCommunicationParameter",type:String},seoPrefix:{attribute:"seo-prefix",group:"globalCommunicationParameter",type:String},sid:{group:"globalCommunicationParameter",type:String},sortUrlParametersAlphabetically:{attribute:"sort-url-parameters-alphabetically",group:"globalCommunicationParameter",type:Boolean},useAsn:{attribute:"use-asn",group:"globalCommunicationParameter",type:Boolean},useAso:{attribute:"use-aso",group:"globalCommunicationParameter",type:Boolean},useBrowserHistory:{attribute:"use-browser-history",group:"globalCommunicationParameter",type:Boolean},useCache:{attribute:"use-cache",group:"globalCommunicationParameter",type:Boolean},useCampaigns:{attribute:"use-campaigns",group:"globalCommunicationParameter",type:Boolean},useFilterUrl:{attribute:"use-filter-url",group:"globalCommunicationParameter",type:Boolean},useFoundWords:{attribute:"use-found-words",group:"globalCommunicationParameter",type:Boolean},userId:{attribute:"user-id",get:function(){return y.a.communication.globalCommunicationParameter.userId},set:function(e){(y.a.communication.globalCommunicationParameter.userId=e)&&Promise.resolve().then((function(){var t={userId:e};y.a.communication.Tracking.login(t)}))},type:String},usePersonalization:{attribute:"use-personalization",group:"globalCommunicationParameter",type:Boolean},useSemanticEnhancer:{attribute:"use-semantic-enhancer",group:"globalCommunicationParameter",type:Boolean},useSeo:{attribute:"use-seo",group:"globalCommunicationParameter",type:Boolean},useUrlParameters:{attribute:"use-url-parameters",group:"globalCommunicationParameter",type:Boolean},channel:{group:"globalSearchParameter",type:String},defaultQuery:{attribute:"default-query",group:"globalSearchParameter",name:"query",set:function(e){E(e)?y.a.common.Logger.error("".concat(t.is,"/defaultQuery: value cannot be an empty string or whitespace only. searchImmediate will be ignored.")):y.a.communication.globalSearchParameter.query=y.b.Encoding.encodeURIComponent(e)},type:String},url:{group:"globalSearchParameter",set:function(e){e&&(y.a.communication.globalSearchParameter.url=e.trim())},type:String},purchaserId:{attribute:"purchaser-id",group:"globalSearchParameter",type:String},marketId:{attribute:"market-id",group:"globalSearchParameter",type:String},campaignUrl:{attribute:"campaign-url",group:"globalCustomUrls",type:String},compareUrl:{attribute:"compare-url",group:"globalCustomUrls",type:String},getRecordsUrl:{attribute:"get-records-url",group:"globalCustomUrls",type:String},recommendationUrl:{attribute:"recommendation-url",group:"globalCustomUrls",type:String},searchUrl:{attribute:"search-url",group:"globalCustomUrls",name:"serachUrl",type:String},similarRecordsUrl:{attribute:"similar-records-url",group:"globalCustomUrls",type:String},suggestUrl:{attribute:"suggest-url",group:"globalCustomUrls",type:String},tagCloudUrl:{attribute:"tag-cloud-url",group:"globalCustomUrls",type:String},trackingUrl:{attribute:"tracking-url",group:"globalCustomUrls",type:String},logLevel:{attribute:"log-level",get:function(){return y.a.common.Logger.logLevel},set:function(e){return y.a.common.Logger.logLevel=e},type:String},ignorePage:{attribute:"ignore-page",type:Boolean},searchImmediate:{attribute:"search-immediate",type:Boolean},mustacheDelimiters:{attribute:"mustache-delimiters",type:String,get:function(){return v.tags.join()},set:function(e){var t=e.split(",");if(2!==t.length)throw new Error("Incorrect mustache-delimiters value. Please provide opening and closing tags separated by a comma e.g. '[[,]]'");v.tags=t}}}}},{key:"observedAttributes",get:function(){this._propsCreated||this.createProperties();var e=[],t=!0,n=!1,i=void 0;try{for(var a,o=this._attributeToPropertyMap[Symbol.iterator]();!(t=(a=o.next()).done);t=!0){var s=r()(a.value,2),c=s[0];s[1],e.push(c)}}catch(e){n=!0,i=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw i}}return e.concat("use-url-parameter")}}]),p()(t,[{key:"connectedCallback",value:function(){if(f()(l()(t.prototype),"connectedCallback",this).call(this),this.version||this.error("Attribute [version] must be specified."),Object(C.a)()&&!this.api&&this.error("Attribute [api] must be specified."),!this.userId){var e=y.a.communication.sessionManager.readSessionIdFromLocalstorage();e&&y.a.common.localStorage.setItem(e,void 0)}window.addEventListener("popstate",this._popstateHandler),this.searchImmediate&&!E(this.getAttribute("default-query"))&&this.search(!0)}},{key:"disconnectedCallback",value:function(){f()(l()(t.prototype),"disconnectedCallback",this).call(this),window.removeEventListener("popstate",this._popstateHandler)}},{key:"attributeChangedCallback",value:function(e,n,i){if("use-url-parameter"===e)y.a.common.Logger.emitDeprecationWarning("".concat(t.is,"/use-url-parameter"),"".concat(t.is,"/use-url-parameters")),this.useUrlParameters=this._parseBoolean(i,"use-url-parameter");else if("category-page"===e&&i&&!Object(C.a)())y.a.common.Logger.warn("".concat(t.is,"/category-page: This feature is only available for 'version=\"ng\"'.")),y.a.communication.globalCommunicationParameter.categoryPage="";else{var r=this.constructor._attributeToPropertyMap.get(e),a=t.properties[r],o=this._getTypeName(a.type);switch(o){case"String":this[r]=null==i?i:String(i);break;case"Boolean":!1===this.hasAttribute(e)?this[r]=!1:this[r]=this._parseBoolean(i,r);break;default:this.error("Property type ".concat(o," is not supported."))}}}},{key:"search",value:function(e){var t=y.a.common.getParameterString(),n=t?y.a.common.parameterStringToDict(t,!0):{};n.type="search",n.searchImmediate=e,!0===this.ignorePage&&delete n.page,this.checkSeo(n),this.checkFilterUrl(n),y.a.communication.EventAggregator.addFFEvent(n)}},{key:"checkSeo",value:function(e){if(y.a.communication.globalCommunicationParameter.useSeo){var t=window.location.pathname.replace(y.a.communication.globalCommunicationParameter.seoPrefix+"","");e.seoPath=y.b.Encoding.encodeURIComponent(t),delete e.query,e["ff-seo-initial"]=!0}}},{key:"checkFilterUrl",value:function(e){if(y.a.communication.globalCommunicationParameter.useFilterUrl){var t=window.location.pathname;"/"===t.substr(0,1)&&(t=t.substr(1));var n=t.replace(y.a.communication.globalCommunicationParameter.filterUrlPrefix,"");"/"===n.substr(0,1)&&(n=n.substr(1));for(var i=n.split("/"),r=[],a=0;a<i.length;a++)if(-1===i[a].indexOf(".")){var o={};if(0==a)o.key="filterCategoryROOT";else{var s=r[a-1];o.key="".concat(s.key,"/").concat(s.value)}o.value=i[a],null!=o.value&&""!==o.value&&r.push(o)}0<r.length&&r.forEach((function(t){e[t.key]=y.b.Encoding.fixedDecodeURIComponent(t.value)}))}}},{key:"_subscriptionCallback",value:function(e){e=y.a.communication.EventAggregator.currentSearchResult=e.searchResult||e,y.a.communication.ResultDispatcher.dispatchResult(e)}},{key:"_parseBoolean",value:function(e,t){var n=String(e).toLowerCase();return-1<["true","false",""].indexOf(n)?"true"===n||""===n:"null"===n?(this.warn("Boolean property [".concat(t,"] is expected be either true, false or empty, but is [").concat(n,"]. Use empty value instead for 'true'. Falling back to true.")),!0):(this.error("Boolean property [".concat(t,"] is expected be either true, false or empty, but is [").concat(n,"]. Falling back to false.")),!1)}},{key:"_getTypeName",value:function(e){return"string"==typeof e?e:"function"==typeof e?e.name?e.name:e.toString().replace("\n","").match(/^function\s*([^\s(]+)/)[1]:void this.error("Type must be either a string or a function.")}}]),t}(Object(_.a)([Object(k.ElementLog)(),Object(w.a)(S)],HTMLElement));function E(e){return!/\S/.test(e)}window.customElements.define(P.is,P)},function(e,t,n){"use strict";function i(e){return(e.selectedElements[0]||e.elements[0]).associatedFieldName}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";n.r(t),n.d(t,"SliderOneTouch",(function(){return E}));var i=n(21),r=n.n(i),a=n(27),o=n.n(a),s=n(8),c=n.n(s),u=n(4),l=n.n(u),d=n(6),f=n.n(d),h=n(1),p=n.n(h),m=n(3),g=n.n(m),v=n(2),y=n.n(v),b=n(7),_=n.n(b),k=n(10),w=n(59);function C(){var e=c()(['<div class="ffw-slider-container" @mouseover="','" @mouseleave="','" style="left:-',"px;margin-top:-","px;margin-bottom:-","px;width:","px;height:",'px"><div class="ffw-triangle" @mousedown="','" @touchstart="','" @mouseover="','" style="left:',"px;border-width:0 0 ","px ",'px"></div><div class="ffw-line" style="width:',"px;left:",'px"></div><div class="ffw-selected-range" style="left:','px;right:0"></div><div class="ffw-slider-button ffw-slider-button-left" @mousedown="','" @touchstart="','" style="left:','px"></div><div class="ffw-slider-button ffw-slider-button-right" @mousedown="','" @touchstart="','" style="left:','px"></div></div>']);return C=function(){return e},e}var S=Object.freeze({Triangle:".ffw-triangle",LeftButton:".ffw-slider-button-left",RightButton:".ffw-slider-button-right",Line:".ffw-line",SelectedRange:".ffw-selected-range"}),P=Object.freeze({NoTransition:"ffw-no-transition",Active:"ffw-active"}),E=function(e){function t(){var e;return l()(this,t),(e=f()(this,p()(t).call(this))).ratio=.5,e._listener=void 0,e}return _()(t,e),y()(t,null,[{key:"is",get:function(){return"ff-slider-one-touch"}},{key:"properties",get:function(){return{ratio:{type:Number}}}}]),y()(t,[{key:"render",value:function(){var e=this.querySelector(".ffw-slider-button-left"),t=this.querySelector(".ffw-slider-button-right"),n=this.offsetWidth,i=n;e&&t&&(i=n-e.offsetWidth-t.offsetWidth);var r=i*this.ratio;return Object(k.b)(C(),x(this),O(this),n,r,r,2*n,2*r,I(this),I(this),x(this),1.5*n,r,i,n,n,n,T(this,!0),T(this,!0),n,T(this,!1),T(this,!1),2*n)}},{key:"firstUpdated",value:function(){g()(p()(t.prototype),"firstUpdated",this).call(this),window.addEventListener("mouseup",R(this)),window.addEventListener("touchend",R(this))}},{key:"update",value:function(e){g()(p()(t.prototype),"update",this).call(this,e),["selectedMinValue","selectedMaxValue","absoluteMinValue","absoluteMaxValue"].some((function(t){return e.has(t)}))&&(function(e){e.selectedMaxValue=Math.min(e.absoluteMaxValue,e.selectedMaxValue),e.selectedMinValue=Math.max(e.absoluteMinValue,e.selectedMinValue),e.selectedMinValue===e.selectedMaxValue&&(e.selectedMinValue===e.absoluteMinValue&&(e.selectedMaxValue+=e.stepSize),e.selectedMaxValue===e.absoluteMaxValue&&(e.selectedMinValue-=e.stepSize)),M(e)}(this),L(this))}},{key:"updateData",value:function(e){g()(p()(t.prototype),"updateData",this).call(this,e),L(this)}}]),t}(w.a);function x(e){return function(){e.querySelector(S.Triangle).classList.add(P.Active),L(e)}}function O(e){return function(){e._listener||(e.querySelector(S.Triangle).classList.remove(P.Active),L(e))}}function L(e){var t=e.querySelector(S.LeftButton),n=e.querySelector(S.RightButton),i=e.querySelector(S.Line),r=e.querySelector(S.SelectedRange),a=e.querySelector(S.Triangle),o=i.offsetWidth,s=i.offsetLeft,c=o-t.offsetWidth-n.offsetWidth,u=o+t.offsetWidth,l=e.absoluteMaxValue-e.absoluteMinValue,d=Math.round((e.selectedMinValue-e.absoluteMinValue)/l*c+s),f=Math.round((e.selectedMaxValue-e.absoluteMinValue)/l*c+u);t.style.left="".concat(d,"px"),r.style.left="".concat(d,"px"),n.style.left="".concat(f,"px"),r.style.right="".concat(2*o-f-n.offsetWidth,"px");var h=d+t.offsetWidth;if(a.classList.contains(P.Active)){var p=50-(f-h)/c*50;a.style.left="".concat(f,"px"),a.style.top="".concat(p,"%")}else a.style.left="".concat((f-h)/2+h,"px"),a.style.top="50%"}function I(e){return{handleEvent:function(t){var n=e.querySelector(S.LeftButton),i=e.querySelector(S.RightButton),r=e.querySelector(S.Line),a=e.querySelector(S.Triangle);a.classList.contains(P.Active)||x(e)(),R(e)(),a.classList.add(P.NoTransition);var s=r.offsetWidth-n.offsetWidth-i.offsetWidth,c=e.absoluteMaxValue-e.absoluteMinValue,u=function(e){return e/s*c},l=j(t),d=o()(l,2),f=d[0],h=d[1],p=e.selectedMaxValue,m=e.selectedMaxValue-e.selectedMinValue;e._listener=function(t){var n=j(t),i=o()(n,2),r=i[0],a=i[1],s=r-f,c=(a-h)/e.ratio,l=u(s),d=u(c),g=p+l,v=g-m,y=Math.max(0,g-e.absoluteMaxValue),b=Math.max(0,e.absoluteMinValue-v),_=0<d?Math.max(0,b-d):b,k=Math.min(e.absoluteMaxValue,g)+_,w=Math.max(e.absoluteMinValue,v)-y,C=d-b,S=Math.min(k,w+C),P=Math.max(e.absoluteMinValue,k);e.selectedMinValue=S,e.selectedMaxValue=P,L(e),M(e)},window.addEventListener("mousemove",e._listener),window.addEventListener("touchmove",e._listener)},passive:!0}}function T(e,t){return{handleEvent:function(n){R(e)();var i=e.querySelector(S.LeftButton),r=e.querySelector(S.RightButton),a=e.querySelector(S.Line);e.querySelector(S.Triangle).classList.add(P.NoTransition);var s=a.offsetWidth-i.offsetWidth-r.offsetWidth,c=a.offsetLeft,u=parseInt(i.style.left.replace("px","")),l=parseInt(r.style.left.replace("px","")),d=j(n),f=o()(d,1)[0],h=e.absoluteMaxValue-e.absoluteMinValue,p=function(t){return t/s*h+e.absoluteMinValue};e._listener=function(n){var r=j(n),a=o()(r,1)[0]-f;if(t){var s=p(u+a-c);e.selectedMinValue=Math.min(e.selectedMaxValue,s)}else{var d=p(l+a-c-i.offsetWidth);e.selectedMaxValue=Math.max(e.selectedMinValue,d)}L(e),M(e)},window.addEventListener("mousemove",e._listener),window.addEventListener("touchmove",e._listener)},passive:!0}}function j(e){return[void 0!==e.clientX?e.clientX:e.touches[0].clientX,void 0!==e.clientY?e.clientY:e.touches[0].clientY]}function R(e){return function(){if(e._listener){window.removeEventListener("mousemove",e._listener),window.removeEventListener("touchmove",e._listener),e.submit(),e._listener=void 0;var t=e.querySelector(S.Triangle);t.classList.remove(P.NoTransition),!1===(t.matches?t.matches(":hover"):t.msMatchesSelector(":hover"))&&O(e)()}}}function M(e){var t={detail:{selectedMinValue:e.selectedMinValue,selectedMaxValue:e.selectedMaxValue,slider:1}};e.dispatchEvent(new CustomEvent("value-changed",t)),e.dispatchEvent(new CustomEvent("slider-moved",t)),e.dispatchEvent(new CustomEvent("slider-moved",{detail:r()({},t.detail,{slider:2})}))}window.customElements.define(E.is,E)},function(e,t,n){"use strict";n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return u}));var i=n(21),r=n.n(i),a=n(0),o=n(54),s=n(53),c=function(e,t){if(!l(e))return!1;if(d(e))a.a.communication.EventAggregator.currentSearchResult=e.searchResult,a.a.communication.ResultDispatcher.dispatchResult(e.searchResult,null),f();else var n=a.a.communication.EventAggregator.addFFEvent(r()({},a.a.common.urlStringToDict(e.searchResult.searchParams),{type:"search",topics:function(){return[t]}})),i=a.a.communication.ResultDispatcher.subscribe("result",(function(e,t){t.dispatchId===n&&(a.a.communication.ResultDispatcher.unsubscribe("result",i),f())}));return!0},u="ffRecordListScrollRestorationEventName",l=function(e){return e&&e.searchResult},d=function(e){return e.searchResult._typeFlag!==a.a.common.HistoryEntry._typeFlag},f=function(){var e=Object(s.a)();e&&(Object(s.b)(),Object(o.a)().then((function(){document.dispatchEvent(new CustomEvent(u,{detail:e}))})))}},function(e,t,n){"use strict";var i,r,a,o=n(8),s=n.n(o),c=n(4),u=n.n(c),l=n(6),d=n.n(l),f=n(1),h=n.n(f),p=n(3),m=n.n(p),g=n(2),v=n.n(g),y=n(7),b=n.n(y),_=n(10),k=n(0),w=n(5),C=n(14),S=n(9),P=n(27),E=n.n(P),x=n(44),O=((i={}).Event=((r=i.Event||{}).add=document.addEventListener?function(e,t,n,i){i=i||!1,e.addEventListener(t,n,i)}:function(e,t,n){e.attachEvent("on"+t,n)},r.remove=document.removeEventListener?function(e,t,n,i){i=i||!1,e.removeEventListener(t,n,i)}:function(e,t,n){e.detachEvent("on"+t,n)},r.DOMit=function(e){return function(e){if(!e.clientX)try{e.clientX=e.touches[0].clientX}catch(e){}if(!e.clientY)try{e.clientY=e.touches[0].clientY}catch(e){}}(e),(e=e||window.event).target||(e.target=e.srcElement),e.preventDefault||(e.preventDefault=function(){return e.returnValue=!1}),e.stopPropagation||(e.stopPropagation=function(){e.cancelBubble=!0}),e},r.getTarget=function(e){var t=(e=r.DOMit(e)).target;return 1!==t.nodeType&&(t=t.parentNode),t},r.domReady=function(){var e=[],t=!1;function n(n){if(!t&&("readystatechange"!==n.type||"complete"===document.readyState)){for(var i=0,r=e.length;i<r;i++)e[i].call(document);t=!0,e=[]}}return document.addEventListener?(document.addEventListener("DOMContentLoaded",n,!1),document.addEventListener("readystatechange",n,!1),window.addEventListener("load",n,!1)):document.attachEvent&&(document.attachEvent("onreadystatechange",n),window.attachEvent("onload",n)),function(n){t?n.call(document):e.push(n)}}(),r),i.Viewport={_docEl:null,getDocEl:function(){var e="",t=document;return this._docEl||(e=t.compatMode,this._docEl="CSS1Compat"===e?t.documentElement:t.body),this._docEl},getWidth:function(){var e=this.getDocEl().clientWidth;return window.innerWidth&&e>window.innerWidth&&(e=window.innerWidth),e},getHeight:function(){var e=this.getDocEl().clientHeight;return window.innerHeight&&e>window.innerHeight&&(e=window.innerHeight),e},getScrollX:function(){return"number"==typeof window.pageXOffset?window.pageXOffset:this.getDocEl().scrollLeft},getScrollY:function(){return"number"==typeof window.pageYOffset?window.pageYOffset:this.getDocEl().scrollTop},getAll:function(){return{width:this.getWidth(),height:this.getHeight(),scrollX:this.getScrollX(),scrollY:this.getScrollY()}}},i.Util=((a=i.Util||{}).$=function(e,t){return t?t.root?t.shadowRoot.querySelector(e):t.querySelector(e):e.nodeType?e:""!==e?window.ShadowDOMPolyfill||Element.prototype.createShadowRoot?document.querySelector("body /deep/ #"+e):document.getElementById(e):void 0},a.intersectContainer=function(e,t){var n=parseInt(e.style.left.replace("px",""),10),i=parseInt(e.style.left.replace("px",""))+e.offsetWidth,r=parseInt(t.style.left.replace("px",""),10),o=parseInt(t.style.left.replace("px",""),10)+t.offsetWidth;return a.intersectValues(n,i,r,o)},a.intersectValues=function(e,t,n,i){return e<=i&&n<=t||i<=e&&t<=n},a.getCurrentStyle=function(e,t){var n,i,r="";return window.getComputedStyle?r=window.getComputedStyle(e,null)[t]:e.currentStyle&&(r=e.currentStyle[t],!/^\d+(px)?$/i.test(r)&&/^\d/.test(r)&&(n=e.style.left,i=e.runtimeStyle.left,e.runtimeStyle.left=e.currentStyle.left,e.style.left=r||0,r=e.style.pixelLeft+"px",e.style.left=n,e.runtimeStyle.left=i)),r},a.contained=function(e,t){if(!e)return!1;for(;e=e.parentNode;)if(e===t)return!0;return!1},a.hash=function(){return Math.floor(65536*(1+Math.random())).toString(32).substring(1)},a),i.Draggable=function(){var e=i.Util,t=i.Event,n=i.Viewport;function r(n,i,a,o){var s,c;if("string"==typeof n?s=e.$(n):"nodeType"in n?s=n:console.log("Cant process identifierer "+n),!s)throw new Error("new DYN_WEB.Draggable: No element with the specified id found.");this.id=n;var u=parseInt(e.getCurrentStyle(s,"left"),10),l=parseInt(e.getCurrentStyle(s,"top"),10);if(a&&(this.minX="number"==typeof a.minX?a.minX:void 0,this.maxX="number"==typeof a.maxX?a.maxX:void 0,this.minY="number"==typeof a.minY?a.minY:void 0,this.maxY="number"==typeof a.maxY?a.maxY:void 0,this.on_drag_start="function"==typeof a.on_drag_start?a.on_drag_start:this.on_drag_start,this.on_drag="function"==typeof a.on_drag?a.on_drag:this.on_drag,this.on_drag_end="function"==typeof a.on_drag_end?a.on_drag_end:this.on_drag_end),o?(u=this.maxX,this.slider2=e.$(n)):(u=isNaN(u)?0:u,this.slider1=e.$(n)),l=isNaN(l)?0:l,r.shiftTo(s,u,l),i){if(!(c=i.nodeType?i:e.$(i)))throw new Error("new DYN_WEB.Draggable: No element with the specified handleId found.");if(!e.contained(c,s))throw new Error("new DYN_WEB.Draggable: No element with id "+i+" found inside "+n+".")}else c=s;t.add(c,"mousedown",r.start.bind(this)),t.add(c,"touchstart",r.start.bind(this))}return r.prototype={on_drag_start:function(){},on_drag:function(){},on_drag_end:function(){}},r.zOrder=1e3,r.start=function(e){var i,a,o,s,c,u=0;e=t.DOMit(e);var l=t.getTarget(e);do{if(l.id===this.slider1.id){i=this.slider1;break}if(l.id===this.slider2.id){i=this.slider2;break}u++}while(u<10&&(l=l.parentNode));if(!i)throw new Error("Unable to find Draggable element onmousedown.");i.style.zIndex=r.zOrder++,a=e.clientX+n.getScrollX(),o=e.clientY+n.getScrollY(),s=parseInt(i.style.left,10)||0,c=parseInt(i.style.top,10)||0,this.dx=a-s,this.dy=o-c,this.downX=a,this.downY=o,this.on_drag_start(s,c),this.drag=r.drag.bind(this),this.end=r.end.bind(this),t.add(document,"mousemove",this.drag),t.add(document,"touchmove",this.drag),t.add(document,"mouseup",this.end),t.add(document,"touchend",this.end),e.preventDefault(),e.stopPropagation()},r.drag=function(e){e=t.DOMit(e);var i=this,a=this.id,o=e.clientX+n.getScrollX()-i.dx,s=e.clientY+n.getScrollY()-i.dy;o=void 0!==i.minX?Math.max(i.minX,o):o,o=void 0!==i.maxX?Math.min(i.maxX,o):o,s=void 0!==i.minY?Math.max(i.minY,s):s,s=void 0!==i.maxY?Math.min(i.maxY,s):s,("string"==typeof i.id?i.id===this.slider1.id:i.id.id===this.slider1.id)?(i.maxX=parseInt(this.slider2.style.left.replace("px",""),10),i.minX=0):("string"==typeof i.id?i.id===this.slider2.id:i.id.id===this.slider2.id)&&(i.minX=parseInt(this.slider1.style.left.replace("px",""),10),i.maxX=i.origMaxX),r.shiftTo(a,o,s),i.on_drag(o,s),e.preventDefault()},r.end=function(){var e,n,i=this.id;t.remove(document,"mousemove",this.drag),t.remove(document,"touchmove",this.drag),t.remove(document,"mouseup",this.end),t.remove(document,"touchend",this.end),i&&(e=parseInt(i.style.left,10),n=parseInt(i.style.top,10),this.on_drag_end(e,n))},r.setup=function(){for(var e,t=0,n=arguments.length;t<n;t++)"string"==typeof(e=arguments[t])?new r(e):new r(e.id,e.handleId,e)},r.shiftTo=function(e,t,n){e.style.left=parseInt(t,10)+"px",e.style.top=parseInt(n,10)+"px"},r}(),i.Slider=function(){var e=i.Util,t=i.Event,n=i.Draggable;function r(e,t,n,i,a){this.id=e,this.trackId=t,this.axis=n,"string"!=typeof this.id?r.col[this.id.id]=this:r.col[this.id]=this,this.init(i)}return r.col={},r.prototype={slideDur:50,init:function(i){var r,a=e.$(this.id),o=e.$(this.trackId),s=parseInt(e.getCurrentStyle(a,"left"),10),c=parseInt(e.getCurrentStyle(a,"top"),10),u=this;s=isNaN(s)?0:s,c=isNaN(c)?0:c,r="v"===this.axis?{minX:s,maxX:s,minY:0,maxY:o.offsetHeight-a.offsetHeight-2*o.clientTop}:{minX:0,maxX:o.offsetWidth-a.offsetWidth-2*o.clientLeft,minY:c,maxY:c},this.barWd=a.offsetWidth,this.barHt=a.offsetHeight,this.Dragbar=i?new n(this.id,"",r,!0):new n(this.id,"",r),this.minX=this.Dragbar.minX,this.maxX=this.Dragbar.maxX,this.origMaxX=this.maxX,this.Dragbar.origMaxX=this.origMaxX,this.minY=this.Dragbar.minY,this.maxY=this.Dragbar.maxY,this.Dragbar.on_drag_start=function(e,t){u.on_move_start(e,t)},this.Dragbar.on_drag=function(e,t){u.on_move(e,t)},this.Dragbar.on_drag_end=function(e,t){u.on_move_end(e,t)},t.add(o,"mousedown",(function(e){u.prepSlide(e,u.id)})),t.add(o,"touchstart",(function(e){u.prepSlide(e,u.id)}))},prepSlide:function(n,i){var a;n=t.DOMit(n);var o=(a="string"!=typeof i?r.col[i.id]:r.col[i]).bar=e.$(i);a.clearTimer(),n.offX="number"==typeof n.offsetX?n.offsetX:n.layerX,n.offY="number"==typeof n.offsetY?n.offsetY:n.layerY,a.startX=parseInt(o.style.left,10),a.startY=parseInt(o.style.top,10),"v"===a.axis?(a.destX=a.startX,a.destY=n.offY<a.startY?n.offY:n.offY-a.barHt,a.destY=Math.min(Math.max(a.destY,a.minY),a.maxY)):(a.destX=n.offX<a.startX?n.offX:n.offX-a.barWd,a.destX=Math.min(Math.max(a.destX,a.minX),a.maxX),a.destY=a.startY),a.distX=a.destX-a.startX,a.distY=a.destY-a.startY,a.per=Math.PI/(2*a.slideDur),a.slideStartTime=(new Date).getTime(),a.on_move_start(a.startX,a.startY),a.timerId=setInterval((function(){a.doSlide()}),10)},doSlide:function(){},shiftTo:function(e,t){!this.bar||isNaN(e)||isNaN(t)||(this.bar.style.left=Math.round(e)+"px",this.bar.style.top=Math.round(t)+"px")},clearTimer:function(){clearInterval(this.timerId),this.timerId=0},on_move_start:function(e,t){},on_move:function(e,t){},on_move_end:function(e,t){}},r}(),i),L=n(59);function I(){var e=s()(['<div style="position:relative;width:100%;height:100%" class="ffw-sliderBar"><div id="','" class="ffw-slider1 ffw-sliderWrapper" style="position:absolute!important">','</div><div id="','" class="ffw-slider2 ffw-sliderWrapper" style="position:absolute!important">',"</div></div>"]);return I=function(){return e},e}var T=0,j=function(e){function t(){var e;return u()(this,t),(e=d()(this,h()(t).call(this))).submitOnRelease=!0,e._slider1=null,e._slider2=null,e.isInitialzied=!1,e.dragging=!1,e._sliderContent1=void 0,e._sliderContent2=void 0,e._UID=T++,e}return b()(t,e),v()(t,[{key:"render",value:function(){return Object(_.b)(I(),"slider1-".concat(this._UID),this._sliderContent1,"slider2-".concat(this._UID),this._sliderContent2)}}],[{key:"is",get:function(){return"ff-slider"}},{key:"properties",get:function(){return{submitOnRelease:{type:Boolean,attribute:"submit-on-release"}}}}]),v()(t,[{key:"connectedCallback",value:function(){var e=this;function n(e){var t='<div slot="'.concat(e,'"></div>');return Object(C.a)(t)}m()(h()(t.prototype),"connectedCallback",this).call(this),this._sliderContent1=this.querySelector('[slot="slider1"]')||n("slider1"),this._sliderContent2=this.querySelector('[slot="slider2"]')||n("slider2"),this.resizeHandler=window.addEventListener("resize",(function(){return e.renderSlider()})),this.renderSliderKey||(this.renderSliderKey=setInterval((function(){return e.renderSlider()}),250))}},{key:"disconnectedCallback",value:function(){m()(h()(t.prototype),"disconnectedCallback",this).call(this),window.removeEventListener("resize",this.resizeHandler),this.renderSliderKey&&(clearInterval(this.renderSliderKey),this.renderSliderKey=void 0)}},{key:"update",value:function(e){m()(h()(t.prototype),"update",this).call(this,e),e.has("selectedMinValue")&&this._selectedMinChanged(),e.has("selectedMaxValue")&&this._selectedMaxChanged(e.get("selectedMaxValue")),(e.has("absoluteMaxValue")||e.has("absoluteMinValue"))&&R(this)}},{key:"init",value:function(){var e,t,n,i;this._slider1=new O.Slider(this.querySelector(".ffw-slider1"),this,"h"),this._slider1.on_move=(e=this,function(t){return M(e,Math.floor(e._getCurrentValue(t)),e.selectedMaxValue,1)}),this._slider1.on_move_end=(t=this,function(e){t.selectedMinValue=t._getCurrentValue(e),A(t)}),this._slider2=new O.Slider(this.querySelector(".ffw-slider2"),this,"h",!0),this._slider2.on_move=(n=this,function(e){var t=(e=n._getCurrentValue(e))<n.selectedMinValue?n.selectedMinValue+1:e;M(n,n.selectedMinValue,t,2)}),this._slider2.on_move_end=(i=this,function(e){i.selectedMaxValue=i._getCurrentValue(e),A(i)}),this._slider1.Dragbar.slider2=this._slider2.Dragbar.id,this._slider2.Dragbar.slider1=this._slider1.Dragbar.id,this.style.opacity="1",this.offsetHeight,this.isInitialized=!0}},{key:"updateData",value:function(e){m()(h()(t.prototype),"updateData",this).call(this,e),this._forceUpdate=!0,R(this)}},{key:"renderSlider",value:function(){if(!0===this.isInitialized&&!1===this.dragging){var e=this.querySelector(".ffw-sliderBar").clientWidth,t=this._slider1.barWd||this.querySelector(".ffw-slider1").clientWidth,n=this._slider2.barWd||this.querySelector(".ffw-slider2").clientWidth,i=Math.max(e-t,0),r=Math.max(e-n,0);this._slider1.Dragbar.maxX=i,this._slider1.Dragbar.origMaxX=i,this._slider1.maxX=i,this._slider2.Dragbar.maxX=r,this._slider2.Dragbar.origMaxX=r,this._slider2.maxX=r;var a=Math.max(Math.floor(i*Math.max(this.selectedMinValue-this.absoluteMinValue,0)/(this.absoluteMaxValue-this.absoluteMinValue))-1,0),o=Math.floor(r*Math.max(this.selectedMaxValue-this.absoluteMinValue,0)/(this.absoluteMaxValue-this.absoluteMinValue));this.querySelector(".ffw-slider1").style.left="".concat(a,"px"),this.querySelector(".ffw-slider2").style.left="".concat(o,"px")}}},{key:"_getCurrentValue",value:function(e){e<=0&&(e=1e-10);var t=this._slider2.barWd||this.querySelector(".ffw-slider2").clientWidth,n=Math.max(this.querySelector(".ffw-sliderBar").clientWidth-t,0);if(n<=e)return Math.ceil(this.absoluteMaxValue);var i=e/n,r=this.absoluteMaxValue-this.absoluteMinValue;return Math.floor(r*i)+Math.floor(this.absoluteMinValue)}},{key:"_selectedMinChanged",value:function(){isNaN(this.selectedMinValue)||this.selectedMinValue<Math.floor(this.absoluteMinValue)?this.selectedMinValue=Math.floor(this.absoluteMinValue):this.selectedMinValue>=this.selectedMaxValue&&(this.selectedMinValue=this.selectedMaxValue>this.absoluteMinValue?Math.ceil(this.selectedMaxValue)-1:this.absoluteMinValue),R(this),this.dispatchEvent(N(this.selectedMinValue,this.selectedMaxValue,1))}},{key:"_selectedMaxChanged",value:function(e){isNaN(this.selectedMaxValue)||this.selectedMaxValue>Math.ceil(this.absoluteMaxValue)?this.selectedMaxValue=Math.ceil(this.absoluteMaxValue)||e:this.selectedMaxValue<=this.selectedMinValue&&(this.selectedMaxValue=Math.floor(this.selectedMinValue)+1),R(this),this.dispatchEvent(N(this.selectedMinValue,this.selectedMaxValue,2))}}]),t}(L.a);function R(e){e._forceUpdate&&(e._forceUpdate=!1,!e.isInitialized&&e.init(),e.renderSlider())}function M(e,t,n,i){e.dragging=!0,e.dispatchEvent(new CustomEvent("slider-moved",{detail:{selectedMinValue:t,selectedMaxValue:n,slider:i}}))}function A(e){e.dragging=!1,"false"!==e.getAttribute("submit-on-release")&&e.submit()}function N(e,t,n){return new CustomEvent("value-changed",{detail:{selectedMinValue:e,selectedMaxValue:t,slider:n}})}window.customElements.define(j.is,j);var D=n(50),F=n(28);function V(){var e=s()(['<div class="ffw-sliderSection">',"</div>"]);return V=function(){return e},e}function U(){var e=s()(['<div><ff-slider step-size="1" submit-on-release="true"><div slot="slider1"></div><div slot="slider2"></div></ff-slider><div style="display:flex;justify-content:space-around;align-items:center"><input data-control="1" style="width:60px"> <span style="width:20px;height:2px;background-color:#000;display:inline-block"></span> <input data-control="2" style="width:60px"></div></div>']);return U=function(){return e},e}var q=["".concat(j.is,", ").concat(D.SliderOneTouch.is),"input[data-control='1']","input[data-control='2']"],B=Object(C.e)(U()),z=function(e){function t(){var e;return u()(this,t),(e=d()(this,h()(t).call(this))).disableInputFields=!1,e.submitOnInput=!1,e.unit=void 0,e.group=void 0,e.inputMin=void 0,e.inputMax=void 0,e.slider=void 0,e._submitDelay=500,e._content=void 0,e._isSubmitScheduled=!1,e._submitInputMinDebouncerJob=void 0,e._submitInputMaxDebouncerJob=void 0,e}return b()(t,e),v()(t,[{key:"render",value:function(){return Object(_.b)(V(),this._content)}}],[{key:"is",get:function(){return"ff-slider-control"}},{key:"properties",get:function(){return{disableInputFields:{type:w.c,attribute:"disable-input-fields"},submitOnInput:{type:w.c,attribute:"submit-on-input"},unit:{type:String},group:{type:Object,attribute:!1}}}}]),v()(t,[{key:"initDefaultTemplates",value:function(){var e;this._content||(e=Object(w.d)(this)?(this._content=Object(C.a)(B),this._content):(this._content=Array.from(this.childNodes),this),this.slider=e.querySelector(q[0]),this.inputMin=e.querySelector(q[1]),this.inputMax=e.querySelector(q[2]),function(e,t){var n=q.filter((function(e){return!t.querySelector(e)}));if(0!==n.length)throw Error("".concat(z.is,' does not have all required templates.\nYou must provide a template for each of the following selectors: "').concat(q.join('", "'),'".\nMissing templates are: "').concat(n.join('", "'),'".\nAlternatively, you may leave ').concat(z.is," empty. In this case, default templates will be used."))}(0,e),this.slider.addEventListener("slider-moved",this._valueChanged.bind(this)),this.slider.addEventListener("value-changed",this._valueChanged.bind(this)))}},{key:"update",value:function(e){e.has("group")&&this._groupChanged(),m()(h()(t.prototype),"update",this).call(this,e)}},{key:"disconnectedCallback",value:function(){this._submitInputMinDebouncerJob&&this._submitInputMinDebouncerJob.cancel(),this._submitInputMaxDebouncerJob&&this._submitInputMaxDebouncerJob.cancel(),m()(h()(t.prototype),"disconnectedCallback",this).call(this)}},{key:"init",value:function(){var e=this;this.inputMin.value=this.addUnit(this.slider.selectedMinValue),this.inputMax.value=this.addUnit(this.slider.selectedMaxValue),this.disableInputFields?this._disableFocusInput():this._initInputSubmit(),Promise.resolve().then((function(){return e.style.opacity="1"}))}},{key:"submit",value:function(){this._submitInputMax(),this._submitInputMin()}},{key:"_groupChanged",value:function(){var e=this;this.group&&setTimeout((function(){e._updateInput(e.inputMax,e.slider.selectedMaxValue),e._updateInput(e.inputMin,e.slider.selectedMinValue)}),1)}},{key:"_updateInput",value:function(e,t){if(e){this.slider&&void 0!==t&&(e.value=this.addUnit(t));for(var n=e.attributes,i=0;i<n.length;i++){var r=n[i];r.value=Object(F.a)(r.value,{group:this.group})}}}},{key:"_disableFocusInput",value:function(){this.inputMax.disabled=!0,this.inputMin.disabled=!0}},{key:"_submitInputMin",value:function(){var e=this.removeUnit(this.inputMin.value);isNaN(e)&&(e=this.slider.selectedMinValue);var t=e%this.slider.stepSize;e-=t,.5<=t/this.slider.stepSize&&(e+=this.slider.stepSize),this.slider.selectedMinValue=e,this.slider._forceUpdate=!0,this.inputMin.value=this.addUnit(e),this.inputMin.blur(),this._scheduleSubmit()}},{key:"_submitInputMax",value:function(){var e=this.removeUnit(this.inputMax.value);isNaN(e)&&(e=this.slider.selectedMaxValue);var t=e%this.slider.stepSize;e-=t,.5<=t/this.slider.stepSize&&(e+=this.slider.stepSize),this.slider.selectedMaxValue=e,this.slider._forceUpdate=!0,this.inputMax.value=this.addUnit(e),this.inputMax.blur(),this._scheduleSubmit()}},{key:"_scheduleSubmit",value:function(){var e=this;this._isSubmitScheduled||(this._isSubmitScheduled=!0,this.slider.updateComplete.then((function(){e._isSubmitScheduled=!1,e.slider.submit()})))}},{key:"_initInputSubmit",value:function(){var e=this;function t(e){return 48<=e&&e<=57||96<=e&&e<=105}this._submitInputMinDebouncerJob=Object(x.a)(this._submitInputMinDebouncerJob,(function(){e._submitInputMin(),e.inputMin.focus()}),this._submitDelay),this._submitInputMaxDebouncerJob=Object(x.a)(this._submitInputMinDebouncerJob,(function(){e._submitInputMax(),e.inputMax.focus()}),this._submitDelay),this.inputMin.onkeyup=function(n){var i=(n=window.event||n).keyCode||n.which;if(13===i)return e._submitInputMin(),!1;e.submitOnInput&&t(i)&&e._submitInputMinDebouncerJob.run()},this.inputMax.onkeyup=function(n){var i=(n=window.event||n).keyCode||n.which;if(13===i)return e._submitInputMax(),!1;e.submitOnInput&&t(i)&&e._submitInputMaxDebouncerJob.run()}}},{key:"addUnit",value:function(e){var t=k.a.communication.globalCommunicationParameter,n=t.currencyCode,i=t.currencyCountryCode,r=this.group.elements.concat(this.group.selectedElements),a=E()(r,1)[0];return a&&k.a.communication.Util.isPriceField(a.associatedFieldName)&&n&&i?e.toLocaleString(i,{style:"currency",currency:n}):(this.group.unit&&(e+=" ".concat(this.group.unit)),e)}},{key:"removeUnit",value:function(e){return+e.replace(this.unit,"").replace(",",".").replace(/\.(?=.*\.)/g,"")}},{key:"_valueChanged",value:function(e){var t=e.detail,n=t.slider,i=t.selectedMinValue,r=t.selectedMaxValue;if(1===n)this.inputMin.value=this.addUnit(i);else{if(2!==n)throw"Unexpected slider: ".concat(n);this.inputMax.value=this.addUnit(r)}}}]),t}(w.a);window.customElements.define(z.is,z);var W=n(13),H=n(29),K=n(49);function Y(){var e=s()(['<div data-container="groupCaption" @click="','">','</div><div class="ffw-container"><div class="ffw-wrapper" ?opened="','">'," ","</div></div>"]);return Y=function(){return e},e}function G(){var e=s()(['<div class="ffw-container"><div class="ffw-wrapper" ?opened="','"></div></div>']);return G=function(){return e},e}n.d(t,"a",(function(){return X}));var X=function(e){function t(){var e;return u()(this,t),(e=d()(this,h()(t).call(this))).collapsible=!0,e.opened=!1,e.filterStyle="SLIDER",e.selectorWrapper=".ffw-wrapper",e._wrapper=void 0,e._sliderControl=void 0,e._removeFilterContainer=void 0,e.selectorGroupCaptionContainer='[slot="groupCaption"]',e.selectRemoveFilterContainer='[data-container="removeFilter"]',e._initialized=!1,e._rawOuterHtml="",e}return b()(t,e),v()(t,[{key:"render",value:function(){var e=this;return this._initialized?Object(_.b)(Y(),(function(){return e.toggle(!0)}),Object(w.e)(this._groupCaptionTemplate,{group:this.group}),this.opened,this._sliderControl,this._removeFilterContainer):Object(_.b)(G(),this.opened)}}],[{key:"is",get:function(){return"ff-asn-group-slider"}},{key:"properties",get:function(){return{collapsible:{type:w.c},opened:{type:Boolean,reflect:!0},forGroup:{type:String,reflect:!0,attribute:"for-group"},filterStyle:{type:String,reflect:!0,attribute:"filter-style"},disableAutoExpand:{type:Boolean,reflect:!0,attribute:"disable-auto-expand"},group:{type:Object,attribute:!1}}}}]),v()(t,[{key:"connectedCallback",value:function(){m()(h()(t.prototype),"connectedCallback",this).call(this),this.init()}},{key:"firstUpdated",value:function(e){m()(h()(t.prototype),"firstUpdated",this).call(this,e),this._wrapper=this.querySelector(this.selectorWrapper),this.opened?this.show():this._hide(this._wrapper,!1)}},{key:"init",value:function(){var e=this;this._initialized||(this._initialized=!0,this._rawOuterHtml=this.outerHTML,this._groupCaptionTemplate=this._initGroupCaption(),this._sliderControl=this.querySelector(z.is)||document.createElement(z.is),this._sliderControl.initDefaultTemplates(),this._updateSliderControls(),this._removeFilterContainer=this._initRemoveFilter(),this.updateComplete.then((function(){var t=e.querySelector("".concat(j.is,", ").concat(D.SliderOneTouch.is));Z(e,t),t.addEventListener("value-changed",(function(){Z(e,t)}))})))}},{key:"_initGroupCaption",value:function(){return this.querySelector(this.selectorGroupCaptionContainer)||Object(C.a)('<div slot="groupCaption">{{group.name}}</div>')}},{key:"_updateSliderControls",value:function(){var e=this;this.querySelectorAll(z.is).forEach((function(t){return t.group=e.group})),this._sliderControl&&(this._sliderControl.group=this.group)}},{key:"_hideGroup",value:function(){this.style.display="none",this.offsetHeight,this.style.opacity="0"}},{key:"update",value:function(e){e.has("group")&&this._asnGroupChanged(),m()(h()(t.prototype),"update",this).call(this,e)}},{key:"_processAndRenderGroup",value:function(e){var n=this;this.forGroup=Object(K.a)(e);var i=e.elements[0];if("number"!=typeof i.absoluteMinValue||"number"!=typeof i.absoluteMaxValue)return this.warn("[".concat(t.is,"]: absoluteMinValue and absoluteMaxValue must be numbers but are:"),i.absoluteMinValue,i.absoluteMaxValue),void this._hideGroup();if(i.absoluteMinValue!==i.absoluteMaxValue){i.absoluteMinValue=Math.min(i.absoluteMinValue,i.selectedMinValue),i.absoluteMaxValue=Math.max(i.absoluteMaxValue,i.selectedMaxValue),this._updateSliderControls();try{Promise.resolve().then((function(){var t=n.querySelector("".concat(j.is,", ").concat(D.SliderOneTouch.is));t&&(t.unit=e.unit,t.updateComplete.then((function(){return t.updateData(i)})))})),this.style.display="",this.offsetHeight,function(e){if(!e||!e.elements[0])return!1;var t=e.elements[0],n=t.selectedMinValue,i=t.selectedMaxValue,r=t.absoluteMinValue;return i!==t.absoluteMaxValue||n!==r}(e)&&!0!==this.opened&&!this.disableAutoExpand&&this.updateComplete.then((function(){return n.show()})),this.dispatchEvent(new CustomEvent("records-updated",{bubbles:!0,composed:!0})),this.style.opacity="1",this.offsetHeight}catch(e){this.error(e)}}else this._hideGroup()}},{key:"_asnGroupChanged",value:function(){this.group?this._processAndRenderGroup(this.group):(this.group=k.a.communication.AsnGroup,this._hideGroup())}},{key:"_initRemoveFilter",value:function(){var e=this,t=this.querySelector(this.selectRemoveFilterContainer)||Object(C.a)('<div data-container="removeFilter">Reset Filter</div>');return t.addEventListener("click",(function(){k.a.communication.EventAggregator.addFFEvent({type:"filter",groupName:e.group.name,removeAll:!0})})),t}},{key:"toggle",value:function(e){var t=this;this.collapsible&&(this._wrapper&&this._wrapper.hasAttribute("opened")?this._toggle(this._wrapper,e,(function(){return t.opened=!1})):(this._toggle(this._wrapper,e),this.opened=!0))}},{key:"show",value:function(e){this.collapsible&&(this._show(this._wrapper,e),this.opened=!0)}},{key:"hide",value:function(e){var t=this;this.collapsible&&!1!==this.opened&&(!0!==e?(this._hide(this._wrapper,e),this.opened=!1):this._hide(this._wrapper,e,(function(){return t.opened=!1})))}},{key:"clone",value:function(){return Object(C.a)(this._rawOuterHtml)}}]),t}(Object(S.a)([Object(W.ElementLog)(),Object(H.CollapseElement)()],w.a));function Z(e,t){if(e._removeFilterContainer){var n=e._removeFilterContainer.style.display,i=t.selectedMinValue>t.absoluteMinValue||t.selectedMaxValue<t.absoluteMaxValue?"inline":"none";n!==i&&(e._removeFilterContainer.style.display=i,e.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!1,composed:!0})))}}window.customElements.define(X.is,X)},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"c",(function(){return r})),n.d(t,"b",(function(){return a}));var i=function(){return JSON.parse(sessionStorage.getItem("_ff-recordsScrollRestorationId"))},r=function(e){return sessionStorage.setItem("_ff-recordsScrollRestorationId",JSON.stringify(e))},a=function(){return sessionStorage.removeItem("_ff-recordsScrollRestorationId")}},function(e,t,n){"use strict";function i(){return new Promise((function(e){window.WebComponents&&window.WebComponents.ready?e():document.addEventListener("WebComponentsReady",(function t(){document.removeEventListener("WebComponentsReady",t),e()}))}))}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";function i(e,t){e.querySelectorAll(e.getAttribute("product-image-identifier")||"[data-image]").forEach((function(n){n.onerror&&function(e,t){var n=e.attributes.getNamedItem(t);if(n){var i=n.nodeValue;i&&(e.onerror=function(){e.onerror=null,e.setAttribute("src",i)})}}(n,e.getAttribute("product-image-error-attribute")||"data-image-onerror"),(n.getAttribute("data-image")||t)&&n.setAttribute("src",n.getAttribute("data-image")||t)}))}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";function i(e,t,n,i){return"".concat((r=t,a=n,o=i,!0===r?"productCampaign":!0===a?"shoppingCartCampaign":!0===o?"pageCampaign":"campaign"),":").concat(e.filter((function(e){return e})).join(":"));var r,a,o}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(12),r=new WeakMap,a=Object(i.f)((function(e,t){return function(n){var i=r.get(n);if(Array.isArray(e)){if(Array.isArray(i)&&i.length===e.length&&e.every((function(e,t){return e===i[t]})))return}else if(i===e&&(void 0!==e||r.has(n)))return;n.setValue(t()),r.set(n,Array.isArray(e)?Array.from(e):e)}}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(0),r=function(e){return function(t){if(t.implicitSelection)return!1;var n=i.a.common.getParameterString(t.searchParams).split("&");return e.every((function(e){return n.some((function(t){if(0!==t.indexOf(e))return!1;var n=t.substr(e.length,3);return""===n||"%2f"===n.toLowerCase()}))}))}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(52),y=n(15),b=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).stepSize=1,e._initialized=!1,e}return p()(t,e),f()(t,null,[{key:"properties",get:function(){return{selectedMinValue:{type:Number,attribute:"selected-min-value"},selectedMaxValue:{type:Number,attribute:"selected-max-value"},absoluteMaxValue:{type:Number,attribute:"absolute-max-value"},absoluteMinValue:{type:Number,attribute:"absolute-min-value"},stepSize:{type:Number,attribute:"step-size"},unit:{type:String}}}}]),f()(t,[{key:"update",value:function(e){e.has("absoluteMinValue")&&(this.absoluteMinValue=Math.floor(this.absoluteMinValue/this.stepSize)*this.stepSize),e.has("absoluteMaxValue")&&(this.absoluteMaxValue=Math.ceil(this.absoluteMaxValue/this.stepSize)*this.stepSize),e.has("selectedMinValue")&&(this.selectedMinValue=Math.floor(this.selectedMinValue/this.stepSize)*this.stepSize),e.has("selectedMaxValue")&&(this.selectedMaxValue=Math.ceil(this.selectedMaxValue/this.stepSize)*this.stepSize),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"updateData",value:function(e){!e||this.selectedMaxValue===e.selectedMaxValue&&this.selectedMinValue===e.selectedMinValue||(this.absoluteMaxValue=e.absoluteMaxValue,this.absoluteMinValue=e.absoluteMinValue,this.selectedMaxValue=e.selectedMaxValue,this.selectedMinValue=e.selectedMinValue),function(e){e._initialized||(Promise.resolve().then((function(){var t=m.a.common.getParentElementByName(e,"FF-Slider-CONTROL");t&&(t.unit=e.unit,t.init())})),e._initialized=!0)}(this)}},{key:"submit",value:function(){var e=m.a.communication.EventAggregator.currentSearchResult;if(e){var t=m.a.common.getParentElementByName(this,v.a.is);if(t){var n,i=t.group.elements[0].associatedFieldName,r=e.searchParams.split("?")[1],a=m.a.common.parameterStringToDict(r);if(this.selectedMinValue<=this.absoluteMinValue&&this.selectedMaxValue>=this.absoluteMaxValue)m.a.communication.EventAggregator.addFFEvent({type:"filter",groupName:t.group.name,removeAll:!0});else{if((n=this).selectedMinValue=Math.round(n.selectedMinValue/n.stepSize)*n.stepSize,n.selectedMaxValue=Math.round(n.selectedMaxValue/n.stepSize)*n.stepSize,Object(y.a)())a.filter=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=1<arguments.length?arguments[1]:void 0;return e.filter((function(e){return m.b.Encoding.fixedDecodeURIComponent(e).split(":")[0]!==t}))}(a.filter,i).concat(["".concat(i,":[").concat(this.selectedMinValue,",").concat(this.selectedMaxValue,"]")]);else{var o=m.b.Encoding.encodeAssociatedFieldName(i);a["filter".concat(o)]="".concat(this.selectedMinValue,"-").concat(this.selectedMaxValue)}a.type="filter",a.groupName=t.group.name,m.a.communication.EventAggregator.addFFEvent(m.a.common.decodeDict(a))}}else console.warn("No asn-group available, search is not executed.")}else console.warn("No search result available, cannot submit slider filter data.")}}]),t}(g.a)},function(e,t,n){"use strict";n.r(t),n.d(t,"Middleware",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(26),p=n.n(h),m=n(48),g=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"connectedCallback",value:function(){if(m.Communication.is!==this.parentElement.nodeName.toLowerCase())throw new Error("".concat(t.is," must be a direct child of ").concat(m.Communication.is))}}],[{key:"is",get:function(){return"ff-middleware"}}]),t}(p()(HTMLElement));window.customElements.define(g.is,g)},function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(26),p=n.n(h),m=n(60),g=function(e){function t(){var e;return r()(this,t),(e=c()(this,l()(t).call(this)))._onceExecuted=!1,e}return f()(t,e),o()(t,[{key:"connectedCallback",value:function(){if(m.Middleware.is!==this.parentElement.nodeName.toLowerCase())throw new Error("".concat(this.constructor.is," must be a direct child of ").concat(m.Middleware.is));!this._onceExecuted&&this._once&&(this._once(),this._onceExecuted=!0)}}]),t}(p()(HTMLElement))},function(e,t){function n(t,i){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,i)}e.exports=n},function(e,t,n){e.exports=n(81)},function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t){e.exports=function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}},function(e,t,n){"use strict";n.r(t),n.d(t,"SearchBox",(function(){return P}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(20),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(44),y=n(5),b=n(0),_=n(9),k=n(31),w=n(13),C=n(11),S=n(38),P=function(e){function t(){var e;return r()(this,t),(e=o()(this,l()(t).call(this))).selectedIndex=-1,e._inputValueChanged=e._inputValueChanged.bind(c()(e)),e.suggestOnfocus=!1,e.hideSuggestOnblur=!0,e.selectOnclick=!1,e.useSuggest=!0,e.suggestDelay=0,e.showAsteriskQuery=!1,e._externalHighlightKey=void 0,e._enableTextSelection=!0,e._fireSuggestDebouncerJob=void 0,e}return g()(t,e),p()(t,[{key:"value",get:function(){if(this.input)return this.input.value;this.error("Input element not initialized.")},set:function(e){this.input?(this.input.value=e,this.input.dispatchEvent(new Event("input",{bubbles:!0}))):this.error("Input element not initialized.")}}],[{key:"is",get:function(){return"ff-searchbox"}},{key:"properties",get:function(){return{suggestOnfocus:{type:y.c,attribute:"suggest-onfocus"},hideSuggestOnblur:{type:y.c,attribute:"hide-suggest-onblur"},selectOnclick:{type:y.c,attribute:"select-onclick"},useSuggest:{type:y.c,attribute:"use-suggest"},suggestDelay:{type:Number,attribute:"suggest-delay"},showAsteriskQuery:{type:y.c,attribute:"show-asterisk-query"}}}}]),p()(t,[{key:"firstUpdated",value:function(e){var n=this;f()(l()(t.prototype),"firstUpdated",this).call(this,e),this.input||(this.appendChild(document.createElement("input")),this.resetInput()),this.input.addEventListener("input",this._inputValueChanged),this.input.addEventListener("blur",this._inputValueChanged),this.input.addEventListener("focus",this._inputValueChanged),!0===this.selectOnclick?this.addEventListener("click",(function(){n._enableTextSelection&&(n.input.select(),n._enableTextSelection=!1)})):!1!==this.selectOnclick&&this.warn("select-onclick has to be either 'true' or 'false'"),this.input.onkeyup=function(e){13===e.keyCode&&n._onEnter(),27===e.keyCode&&n._hideSuggest(),40===e.keyCode&&n._onArrowDown(e),38===e.keyCode&&n._onArrowUp(e),37===e.keyCode&&n.move("left"),39===e.keyCode&&n.move("right")};try{if(this.input.value)b.a.communication.globalElementValues.currentFFSearchBoxValue=this.input.value;else{var i=b.a.common.parameterStringToDict(b.a.common.getParameterString()).query,r=b.b.Encoding.fixedDecodeURIComponent(i?i[0]:b.a.communication.globalSearchParameter.query);this.input.value=r&&("*"!==r||this.showAsteriskQuery)?r:"",b.a.communication.globalElementValues.currentFFSearchBoxValue||(b.a.communication.globalElementValues.currentFFSearchBoxValue=r)}}catch(e){this.error(e)}}},{key:"updated",value:function(e){var n=this;f()(l()(t.prototype),"updated",this).call(this),e.has("suggestDelay")&&(null===this.suggestDelay||isNaN(this.suggestDelay)||(this._fireSuggestDebouncerJob=Object(v.a)(this._fireSuggestDebouncerJob,(function(){return n._fireSuggest()}),this.suggestDelay)))}},{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this.resetInput(),this._externalHighlightKey||(this._externalHighlightKey=b.a.communication.ResultDispatcher.subscribe("ff_suggestHighlight",this._handleExternalHighlight,this))}},{key:"disconnectedCallback",value:function(){this._externalHighlightKey&&(b.a.communication.ResultDispatcher.unsubscribe("ff_suggestHighlight",this._externalHighlightKey),this._externalHighlightKey=void 0),this._fireSuggestDebouncerJob&&this._fireSuggestDebouncerJob.cancel(),f()(l()(t.prototype),"disconnectedCallback",this).call(this)}},{key:"_subscriptionCallback",value:function(e,t){if(e&&e[0]){var n=e[0].text;t.searchImmediate||(this.input.value="*"!==n||this.showAsteriskQuery?n:"",b.a.communication.globalElementValues.currentFFSearchBoxValue=n)}}},{key:"_inputValueChanged",value:function(e){var t=this;e&&("focus"===e.type&&!0===this.suggestOnfocus?this._triggerSuggest():"input"===e.type?(b.a.communication.globalElementValues.currentFFSearchBoxValue=e.currentTarget.value,this._triggerSuggest()):"blur"===e.type?(this._enableTextSelection=!0,this.hideSuggestOnblur&&setTimeout((function(){return t._hideSuggest()}),150)):e.detail&&void 0!==e.detail.value&&b.a.communication.EventAggregator.addFFEvent({type:"suggest",query:e.detail.value}))}},{key:"_triggerSuggest",value:function(){!1!==this.useSuggest&&(this.resetHighlight(),this._fireSuggestDebouncerJob.run())}},{key:"_fireSuggest",value:function(){this.value&&2<=this.value.length?Object(S.a)({type:"suggest",query:this.value},this):this._hideSuggest()}},{key:"_hideSuggest",value:function(){this.resetHighlight(),this.selectedIndex=-1,b.a.communication.ResultDispatcher.dispatch({},void 0,["suggest:hide"])}},{key:"search",value:function(){Object(S.a)({type:"search",query:this.value},this)}},{key:"_onEnter",value:function(){-1!==this.selectedIndex?this.searchSelected():this.search(),this._hideSuggest()}},{key:"_onArrowUp",value:function(e){if(!(this.selectedIndex<=0)){this.input.setSelectionRange(0,this.value.length);var t=this.getSuggestItems();return 0<t.length&&(this.removeHighlight(t[this.selectedIndex]),this.selectedIndex--,0<=this.selectedIndex&&this.setHighlight(t[this.selectedIndex])),e.stopPropagation(),e.preventDefault(),e.returnValue=!1,!(e.cancelBubble=!0)}}},{key:"_onArrowDown",value:function(e){var t=this.getSuggestItems();this.selectedIndex!==t.length-1&&0<t.length&&(-1!==this.selectedIndex&&this.removeHighlight(t[this.selectedIndex]),this.selectedIndex++,this.selectedIndex<t.length&&this.setHighlight(t[this.selectedIndex]))}},{key:"move",value:function(e){var t=this.getSuggestItems(),n=t[this.selectedIndex];if(n){var i=n.getBoundingClientRect(),r=[];t.forEach((function(t){var n=t.getBoundingClientRect();("left"===e&&n.left<i.left||"right"===e&&n.left>i.left)&&r.push(t)}));var a=null,o=1/0,s=1/0;r.forEach((function(e){var t=e.getBoundingClientRect(),n=Math.abs(t.left-i.left),r=Math.abs(t.top-i.top);a?r<s?(a=e,s=r):r===s&&n<o&&(a=e,o=n):(a=e,o=n,s=r)})),a&&(this.removeHighlight(n),this.setHighlight(a),this.selectedIndex=t.indexOf(a))}}},{key:"searchSelected",value:function(){var e=this.getSuggestItems()[this.selectedIndex];b.a.common.fireCustomEvent("click",!0,!0,e)}},{key:"getSuggestItems",value:function(){var e=document.querySelectorAll(k.a.is);return Array.from(e).filter((function(e){return 0!==e.offsetHeight}))}},{key:"resetInput",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"input";this.input=this.querySelector(e)}},{key:"_handleExternalHighlight",value:function(e){this.resetHighlight(),this.setHighlight(e.element),this.selectedIndex=e.selectedIndex}},{key:"setHighlight",value:function(e){if(e.classList.add("ffw-highlight-suggest-item"),e._onfocus)try{e._onfocus()}catch(e){this.error(e)}}},{key:"removeHighlight",value:function(e){e.classList.remove("ffw-highlight-suggest-item")}},{key:"resetHighlight",value:function(){this.selectedIndex=-1,this.getSuggestItems().forEach((function(e){e.classList.remove("ffw-highlight-suggest-item")}))}}]),t}(Object(_.a)([Object(w.ElementLog)(),Object(C.a)(C.b.bct)],y.a));window.customElements.define(P.is,P)},function(e,t,n){var i=n(64),r=n(66),a=n(65);e.exports=function(e){return i(e)||r(e)||a()}},function(e,t){function n(e,t,n,i,r,a,o){try{var s=e[a](o),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(i,r)}e.exports=function(e){return function(){var t=this,i=arguments;return new Promise((function(r,a){var o=e.apply(t,i);function s(e){n(o,r,a,s,c,"next",e)}function c(e){n(o,r,a,s,c,"throw",e)}s(void 0)}))}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PagingSet}));var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__),_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(6),_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__),_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1),_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__),_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(3),_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__),_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(2),_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__),_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(7),_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__),_behaviors_BehaviorDecorator__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),utils_FACTFinderLitElement__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(5),_behaviors_ElementLog__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(13),PagingSet=function(_BehaviorDecorator){function PagingSet(){var e;return _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this,PagingSet),(e=_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default()(this,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(PagingSet).call(this))).state="all",e._isActive=!1,e}return _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(PagingSet,_BehaviorDecorator),_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(PagingSet,null,[{key:"is",get:function(){return"ff-paging-set"}},{key:"properties",get:function(){return{state:{type:String,reflect:!0},paging:{type:Object,attribute:!1}}}}]),_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(PagingSet,[{key:"connectedCallback",value:function(){_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(PagingSet.prototype),"connectedCallback",this).call(this),this.hideSelf()}},{key:"update",value:function(e){e.has("paging")&&this._pagingChanged(),_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(PagingSet.prototype),"update",this).call(this,e)}},{key:"_pagingChanged",value:function _pagingChanged(){if("all"!==this.state){var state=this.state.replace(/currentPage/g,this.paging.currentPage).replace(/pageCount/g,this.paging.pageCount);if(/[a-z]/i.test(state))return this._isActive=!1,this.hideSelf(),void this.error("Alphabetical values are not allowed. Could not resolve [".concat(/[a-z].*/i.exec(state),"] in state [").concat(state,"]"));try{this._isActive=eval(state),this.isActive?this.showSelf():this.hideSelf()}catch(e){this._isActive=!1,this.hideSelf()}}else this._isActive=!0}},{key:"isActive",get:function(){return this._isActive}}]),PagingSet}(Object(_behaviors_BehaviorDecorator__WEBPACK_IMPORTED_MODULE_6__.a)([Object(_behaviors_ElementLog__WEBPACK_IMPORTED_MODULE_8__.ElementLog)()],utils_FACTFinderLitElement__WEBPACK_IMPORTED_MODULE_7__.a));window.customElements.define(PagingSet.is,PagingSet)},function(e,t){e.exports=function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}},function(e,t,n){var i=n(62);function r(t,n,a){return function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?e.exports=r=Reflect.construct:e.exports=r=function(e,t,n){var r=[null];r.push.apply(r,t);var a=new(Function.bind.apply(e,r));return n&&i(a,n.prototype),a},r.apply(null,arguments)}e.exports=r},function(e,t,n){var i=n(74);"string"==typeof i&&(i=[[e.i,i,""]]);n(75)(i,{insertAt:"top",hmr:!0,transform:void 0,insertInto:void 0}),i.locals&&(e.exports=i.locals)},function(e,t){e.exports="ff-campaign-advisor,ff-campaign-advisor-answer,ff-campaign-advisor-question,ff-campaign-feedbacktext,ff-campaign-pushed-products,ff-single-word-search,ff-single-word-search-record{display:block}ff-products-per-page-dropdown{display:inline-block;outline:none}ff-products-per-page-dropdown .ffw-ppp-dropdown-closed{display:none}ff-products-per-page-dropdown .ffw-ppp-dropdown-container{position:absolute;background-color:#fff;outline:none;z-index:1001;-webkit-transition:height .4s;-moz-transition:height .4s;-ms-transition:height .4s;-o-transition:height .4s;transition:height .4s;box-sizing:border-box}ff-products-per-page-item{display:block;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ff-products-per-page-list{display:inline-block;outline:none}ff-products-per-page-list ff-products-per-page-item,ff-products-per-page-select{display:inline-block}ff-header-navigation .ffw-header-nav{position:relative}ff-header-navigation .ffw-header{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}ff-header-navigation .ffw-body{display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:column;position:absolute;z-index:1;width:inherit;left:0;right:0;background-color:#fff}ff-header-navigation .ffw-body-middle{display:flex;flex-direction:row}ff-header-navigation .ffw-body-center{display:-webkit-box;display:-ms-flexbox;display:flex;flex-grow:1;-ms-flex-wrap:wrap;flex-wrap:wrap}ff-header-navigation .ffw-nav-group{-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;-ms-flex-preferred-size:300px;flex-basis:300px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}ff-nav-element.ffw-nav-item{-webkit-box-flex:1;-ms-flex:1;flex:1}ff-nav-element a{color:inherit;cursor:inherit;text-decoration:inherit}ff-record-list{display:block}ff-record{display:inline-block;vertical-align:top}ff-sortbox{display:inline-block;outline:none}ff-sortbox .ffw-closed{display:none}ff-sortbox .ffw-dropdown-container{position:absolute;background-color:#fff;z-index:1001;-webkit-transition:height .4s;-moz-transition:height .4s;-ms-transition:height .4s;-o-transition:height .4s;transition:height .4s;box-sizing:border-box}ff-sortbox-item{display:none;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ff-paging,ff-paging-dropdown,ff-paging-item,ff-paging-set,ff-sortbox-select{display:inline-block}ff-paging-item .ffw-cursor{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ff-paging-dropdown{outline:none}ff-paging-dropdown .ffw-paging-dropdown-container{position:absolute;display:flex;flex-direction:column;background-color:#fff;outline:none;z-index:1001;-webkit-transition:height .4s;-moz-transition:height .4s;-ms-transition:height .4s;-o-transition:height .4s;transition:height .4s;box-sizing:border-box}ff-paging-dropdown .ffw-paging-dropdown-closed{display:none}ff-recommendation,ff-similar-products{display:block}ff-onfocus-suggest{display:block;z-index:9999}ff-onfocus-suggest .ffw-blockLayout{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;flex-wrap:nowrap;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-direction:row;-ms-flex-direction:row;-webkit-flex-direction:row}ff-onfocus-suggest .ffw-suggestContainer{position:relative;z-index:9999;background-color:#fff;top:0;left:0;right:0}ff-onfocus-suggest .ffw-suggestContainerWrapper{position:absolute}ff-onfocus-suggest .ffw-suggestContainerPositioning{position:relative;width:100%}ff-onfocus-suggest .ffw-suggestContainerWrapperHidden{display:none}ff-suggest-item{display:block;word-wrap:break-word}ff-suggest-item:hover{text-decoration:underline}ff-suggest{display:block;z-index:9999}ff-suggest .ffw-blockLayout{display:flex;flex-wrap:nowrap;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-direction:row;-ms-flex-direction:row;-webkit-flex-direction:row}ff-suggest .ffw-listLayout{display:block}ff-suggest .ffw-suggestContainer{position:relative;z-index:9999;background-color:#fff;top:0;left:0;right:0}ff-suggest .ffw-suggestContainerWrapper{position:absolute}ff-navigation{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}ff-navigation,ff-navigation .ffw-menu-items{display:-webkit-box;display:-ms-flexbox;display:flex}ff-navigation .ffw-menu-items{-webkit-box-flex:1;-ms-flex:1;flex:1;width:100%}ff-navigation[layout=vertical]>.ffw-menu-items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}ff-navigation[layout=horizontal]>.ffw-menu-items{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}ff-navigation .ffw-navigation-label{display:none}ff-navigation #navigation-menu{display:none;border-bottom:1px solid #000;cursor:pointer;padding:5px;background-color:#b9ecff;-webkit-box-flex:1;-ms-flex:1;flex:1;width:100%}ff-navigation[mobile=true]>.ffw-navigation-label{display:block}ff-navigation[mobile=true]>#navigation-menu:checked+label+.ffw-menu-items{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-ms-flex-direction:column!important;flex-direction:column!important}ff-navigation[mobile=true]>.ffw-menu-items{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}ff-navigation[mobile=true]{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-ms-flex-direction:column!important;flex-direction:column!important;width:100%}ff-navigation-item{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer}ff-navigation-item .ffw-item-caption{width:100%}ff-navigation-item .ffw-container-hidden{display:none!important}ff-navigation-item .ffw-item-container{display:none;-webkit-transition:all .1s linear;transition:all .1s linear;-webkit-transition-delay:.3s;transition-delay:.3s;position:absolute;z-index:1;background-color:#fff}ff-navigation-item[direction=down][flyout=true]>.ffw-item-container{top:100%}ff-navigation-item[direction=down]>.ffw-item-container{top:100%;left:0}ff-navigation-item[flyout=false][selected]>.ffw-item-container{top:0;z-index:0;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}ff-navigation-item[flyout=false]>.ffw-item-container{display:none}ff-navigation-item[flyout=false][direction=down][selected]>.ffw-item-container{top:0}ff-navigation-item[flyout=false]{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}ff-navigation-item[flyout=false][selected] .ffw-navigation-link{display:none!important;top:0}ff-navigation-item[flyout=false] .ffw-navigation-link{display:none!important}ff-navigation-item[flyout=true][direction=right]>.ffw-item-container{top:0;left:100%}ff-navigation-item[flyout=true][direction=left]>.ffw-item-container{top:0;right:100%}ff-navigation-item[flyout=true]:hover>.ffw-item-container:not(:empty){display:inline-block}ff-asn{outline:none;transition:opacity .6s;display:block}ff-asn[align=horizontal]{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}ff-asn-group{opacity:0;transition:opacity .4s;outline:none;display:block;min-width:180px;max-width:220px}ff-asn-group[align=horizontal] #wrapper{position:absolute;width:100%}ff-asn-group .ffw-asn-group-container{position:relative}ff-asn-group .ffw-wrapper{position:relative;transition-duration:.35s}ff-asn-group-element,ff-asn-group-slider{display:block;outline:none}ff-asn-group-slider{opacity:0;transition:opacity .4s;min-width:180px;max-width:220px}ff-asn[align=horizontal] ff-asn-group-slider .ffw-wrapper{position:absolute;width:100%}ff-asn-group-slider .ffw-container{position:relative}ff-asn-group-slider .ffw-wrapper{position:relative;transition-duration:.4s}ff-slider-control{display:block;opacity:0;transition:opacity .8s;padding:10px 0}ff-slider-control .ffw-sliderSection{margin-top:10px}ff-slider{height:5px;background-color:#336;margin:5px auto;display:block;opacity:0;transition:opacity .8s}ff-slider .ffw-sliderWrapper{min-width:1px}ff-slider [slot^=slider]{height:10px;width:10px;border:1px solid #000;cursor:pointer}ff-compare{display:block}ff-asn-remove-all-filter{display:inline-block}ff-breadcrumb-trail{display:inline}ff-breadcrumb-trail-item{transition:opacity .8s;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ff-search-feedback{position:absolute;top:20px}ff-search-feedback[align=left]{left:0}ff-search-feedback[align=right]{right:0}ff-search-feedback[align=left] .ffw-content{transform:translate(0)}ff-search-feedback[align=left] .ffw-caption{transform:translate(100%)}ff-search-feedback .ffw-noTransition{transition:0s!important}ff-search-feedback .ffw-caption{position:absolute;right:0;transition:transform .3s;cursor:pointer}ff-search-feedback .ffw-content{position:absolute;transition:transform .3s;transform:translate(100%);right:0;text-align:left}ff-search-feedback .ffw-transformZero{transform:translate(0)!important}ff-search-feedback .ffw-transformX{transform:translate(100%)!important}ff-tag-cloud{display:block;max-width:600px}ff-tag-cloud .ffw-tagCloudContainer{display:flex;justify-content:space-around;flex-wrap:wrap}ff-tag-cloud .ffw-tagCloudLink{padding:2px}ff-loading-spinner{display:block}ff-loading-spinner .ffw-path{stroke-dasharray:187;stroke-dashoffset:0;transform-origin:center;animation:ffw-spinner-dash 1.3s linear infinite}ff-loading-spinner .ffw-spinner{animation:ffw-spinner-rotation 1.3s linear infinite}@keyframes ffw-spinner-rotation{0%{transform:rotate(0deg)}to{transform:rotate(270deg)}}@keyframes ffw-spinner-dash{0%{stroke-dashoffset:187}50%{stroke-dashoffset:44.5;transform:rotate(135deg)}to{stroke-dashoffset:187;transform:rotate(450deg)}}ff-slider-one-touch{display:block;z-index:-1001;pointer-events:none}ff-slider-one-touch .ffw-slider-container{top:0;position:relative;pointer-events:none}ff-slider-one-touch .ffw-triangle{pointer-events:auto;user-select:none;position:absolute;z-index:1000;opacity:.5;cursor:pointer;touch-action:none;border-style:solid;border-color:transparent transparent #89bdff;top:50%;transition:top .2s ease-out,left .2s ease-out,transform .2s ease-out;transform:translate(-50%,-50%) scale(.25)}ff-slider-one-touch .ffw-triangle.ffw-active{transition:top .2s ease-in,left .2s ease-in,transform .2s ease-in;transform:translateX(-100%) scale(1)}ff-slider-one-touch .ffw-triangle.ffw-no-transition{transition:none}ff-slider-one-touch .ffw-line{pointer-events:auto;z-index:999;top:50%;position:absolute;height:1px;transform:translateY(-50%);background-color:#000;background-clip:padding-box;border-top:25px solid transparent;border-bottom:25px solid transparent}ff-slider-one-touch .ffw-selected-range{z-index:1000;top:50%;position:absolute;height:2px;transform:translateY(-50%);background-color:#003ccb}ff-slider-one-touch .ffw-slider-button{width:5px;height:5px;border:1px solid #000;position:absolute;top:50%;z-index:1003;pointer-events:auto;cursor:pointer;touch-action:none}ff-slider-one-touch .ffw-slider-button-left,ff-slider-one-touch .ffw-slider-button-right{transform:translateY(-50%)}.ffw-hidden{display:none!important}"},function(e,t,n){var i,r,a,o={},s=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=i.apply(this,arguments)),r}),c=(a={},function(e,t){if("function"==typeof e)return e();if(void 0===a[e]){var n=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}a[e]=n}return a[e]}),u=null,l=0,d=[],f=n(76);function h(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=o[i.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](i.parts[a]);for(;a<i.parts.length;a++)r.parts.push(b(i.parts[a],t))}else{var s=[];for(a=0;a<i.parts.length;a++)s.push(b(i.parts[a],t));o[i.id]={id:i.id,refs:1,parts:s}}}}function p(e,t){for(var n=[],i={},r=0;r<e.length;r++){var a=e[r],o=t.base?a[0]+t.base:a[0],s={css:a[1],media:a[2],sourceMap:a[3]};i[o]?i[o].parts.push(s):n.push(i[o]={id:o,parts:[s]})}return n}function m(e,t){var n=c(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=d[d.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),d.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=c(e.insertAt.before,n);n.insertBefore(t,r)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=d.indexOf(e);0<=t&&d.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var i=n.nc;i&&(e.attrs.nonce=i)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function b(e,t){var n,i,r,a,o,s;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var c=l++;n=u||(u=v(t)),i=w.bind(null,n,c,!1),r=w.bind(null,n,c,!0)}else r=e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(o=t,s=document.createElement("link"),void 0===o.attrs.type&&(o.attrs.type="text/css"),o.attrs.rel="stylesheet",y(s,o.attrs),m(o,s),i=function(e,t,n){var i=n.css,r=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||a)&&(i=f(i)),r&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var o=new Blob([i],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(o),s&&URL.revokeObjectURL(s)}.bind(null,n=s,t),function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),i=function(e,t){var n=t.css,i=t.media;if(i&&e.setAttribute("media",i),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),function(){g(n)});return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else r()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=s()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return h(n,t),function(e){for(var i=[],r=0;r<n.length;r++){var a=n[r];(s=o[a.id]).refs--,i.push(s)}for(e&&h(p(e,t),t),r=0;r<i.length;r++){var s;if(0===(s=i[r]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete o[s.id]}}}};var _,k=(_=[],function(e,t){return _[e]=t,_.filter(Boolean).join("\n")});function w(e,t,n,i){var r=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=k(t,r);else{var a=document.createTextNode(r),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,i=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var r,a=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(r=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:i+a.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(e,t){e.exports=function(e,t){var n=[],i=!0,r=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(i=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);i=!0);}catch(e){r=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(r)throw a}}return n}},function(e,t){e.exports=function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}},function(e,t,n){var i=n(1);e.exports=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=i(e)););return e}},function(e,t,n){var i=function(){return this||"object"==typeof self&&self}()||Function("return this")(),r=i.regeneratorRuntime&&0<=Object.getOwnPropertyNames(i).indexOf("regeneratorRuntime"),a=r&&i.regeneratorRuntime;if(i.regeneratorRuntime=void 0,e.exports=n(82),r)i.regeneratorRuntime=a;else try{delete i.regeneratorRuntime}catch(e){i.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";var n,i=Object.prototype,r=i.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",s=a.asyncIterator||"@@asyncIterator",c=a.toStringTag||"@@toStringTag",u="object"==typeof e,l=t.regeneratorRuntime;if(l)u&&(e.exports=l);else{(l=t.regeneratorRuntime=u?e.exports:{}).wrap=_;var d="suspendedStart",f="suspendedYield",h="executing",p="completed",m={},g={};g[o]=function(){return this};var v=Object.getPrototypeOf,y=v&&v(v(T([])));y&&y!==i&&r.call(y,o)&&(g=y);var b=S.prototype=w.prototype=Object.create(g);C.prototype=b.constructor=S,S.constructor=C,S[c]=C.displayName="GeneratorFunction",l.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===C||"GeneratorFunction"===(t.displayName||t.name))},l.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,c in e||(e[c]="GeneratorFunction")),e.prototype=Object.create(b),e},l.awrap=function(e){return{__await:e}},P(E.prototype),E.prototype[s]=function(){return this},l.AsyncIterator=E,l.async=function(e,t,n,i){var r=new E(_(e,t,n,i));return l.isGeneratorFunction(t)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},P(b),b[c]="Generator",b[o]=function(){return this},b.toString=function(){return"[object Generator]"},l.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},l.values=T,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(L),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function i(i,r){return s.type="throw",s.arg=e,t.next=i,r&&(t.method="next",t.arg=n),!!r}for(var a=this.tryEntries.length-1;0<=a;--a){var o=this.tryEntries[a],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var c=r.call(o,"catchLoc"),u=r.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;0<=n;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),L(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;L(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,i){return this.delegate={iterator:T(e),resultName:t,nextLoc:i},"next"===this.method&&(this.arg=n),m}}}function _(e,t,n,i){var r,a,o,s,c=t&&t.prototype instanceof w?t:w,u=Object.create(c.prototype),l=new I(i||[]);return u._invoke=(r=e,a=n,o=l,s=d,function(e,t){if(s===h)throw new Error("Generator is already running");if(s===p){if("throw"===e)throw t;return j()}for(o.method=e,o.arg=t;;){var n=o.delegate;if(n){var i=x(n,o);if(i){if(i===m)continue;return i}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(s===d)throw s=p,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);s=h;var c=k(r,a,o);if("normal"===c.type){if(s=o.done?p:f,c.arg===m)continue;return{value:c.arg,done:o.done}}"throw"===c.type&&(s=p,o.method="throw",o.arg=c.arg)}}),u}function k(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function w(){}function C(){}function S(){}function P(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function E(e){var t;this._invoke=function(n,i){function a(){return new Promise((function(t,a){!function t(n,i,a,o){var s=k(e[n],e,i);if("throw"!==s.type){var c=s.arg,u=c.value;return u&&"object"==typeof u&&r.call(u,"__await")?Promise.resolve(u.__await).then((function(e){t("next",e,a,o)}),(function(e){t("throw",e,a,o)})):Promise.resolve(u).then((function(e){c.value=e,a(c)}),(function(e){return t("throw",e,a,o)}))}o(s.arg)}(n,i,t,a)}))}return t=t?t.then(a,a):a()}}function x(e,t){var i=e.iterator[t.method];if(i===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,x(e,t),"throw"===t.method))return m;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var r=k(i,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,m;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,m):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,m)}function O(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function L(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(O,this),this.reset(!0)}function T(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function t(){for(;++i<e.length;)if(r.call(e,i))return t.value=e[i],t.done=!1,t;return t.value=n,t.done=!0,t};return a.next=a}}return{next:j}}function j(){return{value:n,done:!0}}}(function(){return this||"object"==typeof self&&self}()||Function("return this")())},function(e,t,n){"use strict";n.r(t),n.d(t,"SearchButton",(function(){return _}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(5),g=n(0),v=n(9),y=n(13),b=n(38),_=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this)))._button=void 0,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-searchbutton"}}]),f()(t,[{key:"firstUpdated",value:function(){var e;this.resetButton(),this.addEventListener("click",(e=this,function(t){e._button.contains(t.srcElement)&&Object(b.a)({type:"search",query:g.a.communication.globalElementValues.currentFFSearchBoxValue||g.a.communication.globalSearchParameter.query},e)})),l()(c()(t.prototype),"firstUpdated",this).call(this)}},{key:"resetButton",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"button";this._button=this.querySelector(e)}}]),t}(Object(v.a)([Object(y.ElementLog)()],m.a));window.customElements.define(_.is,_)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignFeedbackText",(function(){return y}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(56),y=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).label="",e.isProductCampaign=!1,e.isShoppingCartCampaign=!1,e.campaignData=void 0,e}return p()(t,e),f()(t,[{key:"render",value:function(){return Object(g.e)(this._template,this.campaignData)}}],[{key:"is",get:function(){return"ff-campaign-feedbacktext"}},{key:"properties",get:function(){return{label:{type:String},isProductCampaign:{type:Boolean,attribute:"is-product-campaign"},isShoppingCartCampaign:{type:Boolean,attribute:"is-shopping-cart-campaign"},isLandingPageCampaign:{type:Boolean,attribute:"is-landing-page-campaign"},campaignData:{type:Object,attribute:!1}}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this._template=Object(g.d)(this)?"{{text}}":this.innerHTML,this.hideSelf()}},{key:"update",value:function(e){var n=this;(e.has("label")||e.has("isProductCampaign")||e.has("isShoppingCartCampaign"))&&function(e){e._topic&&e.subscriptionKey&&m.a.communication.ResultDispatcher.unsubscribe(e._topic,e.subscriptionKey),e._topic=Object(v.a)(["feedbacktext",e.label],e.isProductCampaign,e.isShoppingCartCampaign,e.isLandingPageCampaign),e.subscriptionKey=m.a.communication.ResultDispatcher.subscribe(e._topic,(function(t){e.campaignData=t}))}(this),e.has("campaignData")&&(this.campaignData?this.showSelf():this.hideSelf(),this.updateComplete.then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),m.a.communication.ResultDispatcher.unsubscribe(this._topic,this._subscriptionKey)}}]),t}(g.a);window.customElements.define(y.is,y)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignLandingPage",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=n(9),m=n(13),g=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"attributeChangedCallback",value:function(e,t,n){"page-id"===e&&(this.pageId=n)}},{key:"pageId",get:function(){return this._pageId},set:function(e){var t=this;(this._pageId=e)?h.a.communication.EventAggregator.addFFEvent({type:"pageCampaigns",pageId:e,success:function(e){if(e.length){var n=e[0].id;e[0].pushedProductsRecords.forEach((function(e){e.__pageId=t.pageId,e.__campaignId=n}))}}}):this.debug("No page id for page campaign specified.")}}],[{key:"is",get:function(){return"ff-campaign-landing-page"}},{key:"observedAttributes",get:function(){return["page-id"]}}]),t}(Object(p.a)([Object(m.ElementLog)()],HTMLElement));window.customElements.define(g.is,g)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignPushedProducts",(function(){return k}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(9),y=n(17),b=n(56),_=n(13),k=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).name="",e.isProductCampaign=!1,e.isShoppingCartCampaign=!1,e.isLandingPageCampaign=!1,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-campaign-pushed-products"}},{key:"properties",get:function(){return{name:{type:String},isProductCampaign:{type:Boolean,attribute:"is-product-campaign"},isShoppingCartCampaign:{type:Boolean,attribute:"is-shopping-cart-campaign"},isLandingPageCampaign:{type:Boolean,attribute:"is-landing-page-campaign"}}}}]),f()(t,[{key:"update",value:function(e){(e.has("name")||e.has("isProductCampaign")||e.has("isShoppingCartCampaign"))&&w(this),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),w(this);var e=this.querySelector(y.RecordList.is);e&&("true"===e.subscribe&&(this.warn("Automatic subscription of ".concat(y.RecordList.is," child component is turned on and will be turned off. Please, set ").concat(y.RecordList.is," 'subscribe' property to 'false' in your HTML code.")),e.setAttribute("subscribe","false")),e._subscriptionKey&&(this.warn("".concat(y.RecordList.is," child component is subscribed to search result and will be unsubscribed.")),e.unsubscribe()),this.isLandingPageCampaign&&(e.__isLandingPage=!0))}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&(m.a.communication.ResultDispatcher.unsubscribe(this._topic,this._subscriptionKey),this._subscriptionKey=void 0)}}]),t}(Object(v.a)([Object(_.ElementLog)()],g.a));function w(e){var t;e._topic&&e._subscriptionKey&&m.a.communication.ResultDispatcher.unsubscribe(e._topic,e._subscriptionKey),e._topic=Object(b.a)(["pushedProducts",e.name],e.isProductCampaign,e.isShoppingCartCampaign,e.isLandingPageCampaign),e._subscriptionKey=m.a.communication.ResultDispatcher.subscribe(e._topic,(t=e,function(e){if(e){t.showSelf();var n=t.querySelector(y.RecordList.is);n?n.records=e:t.warn("No ".concat(y.RecordList.is," element found for pushed products."))}else t.hideSelf()}))}window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignProduct",(function(){return w}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(2),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=n(5),m=n(9),g=n(13),v=n(15),y=Object.freeze({ProductNumber:"productNumber",Id:"id"}),b=h.b.esPolyfills,_=b.includes,k=b.values,w=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).recordId=void 0,e.idType=y.ProductNumber,e}return f()(t,e),l()(t,null,[{key:"is",get:function(){return"ff-campaign-product"}},{key:"properties",get:function(){return{recordId:{type:String,attribute:"record-id"},idType:{type:String,attribute:"id-type"}}}}]),l()(t,[{key:"update",value:function(e){if(e.has("idType")&&Object(v.b)()){var t=k(y);if(!_(t,this.idType))return void this.warn("idType must be one of [".concat(t.join(", "),"]. Was: ").concat(this.idType,"."))}if(e.has("recordId")&&this.recordId){var n={type:"productCampaign"};if(Object(v.b)()){if(!_(k(y),this.idType))return void this.warn("idType invalid. Not sending request.");n.id=this.recordId,n.idType=this.idType}else n.productNumber=this.recordId;h.a.communication.EventAggregator.addFFEvent(n)}}}]),t}(Object(m.a)([Object(g.ElementLog)()],p.a));window.customElements.define(w.is,w)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignRedirect",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(26),p=n.n(h),m=n(0),g=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"connectedCallback",value:function(){var e;this.subscriptionKey=m.a.communication.ResultDispatcher.subscribe(["campaign:redirect"],(e=this,function(t){if(!t||!e.hasAttribute("relative-to-origin"))return t;var n=t.target.destination.replace(/^\/+/,"");return t.target.destination="".concat(location.protocol,"//").concat(location.host,"/").concat(n),t}))}},{key:"disconnectedCallback",value:function(){m.a.communication.ResultDispatcher.unsubscribe(["campaign:redirect"],this.subscriptionKey),this.subscriptionKey=void 0}}],[{key:"is",get:function(){return"ff-campaign-redirect"}}]),t}(p()(HTMLElement));window.customElements.define(g.is,g)},function(e,t,n){"use strict";n.r(t),n.d(t,"CampaignShoppingCart",(function(){return g}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(26),p=n.n(h),m=n(0),g=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"attributeChangedCallback",value:function(e,t,n){"record-id"===e&&(this.recordId=n)}},{key:"recordId",get:function(){return this._recordId},set:function(e){(this._recordId=e)&&m.a.communication.EventAggregator.addFFEvent({type:"shoppingCartCampaign",productNumber:e.split(",")})}}],[{key:"is",get:function(){return"ff-campaign-shopping-cart"}},{key:"observedAttributes",get:function(){return["record-id"]}}]),t}(p()(HTMLElement));window.customElements.define(g.is,g)},function(e,t,n){"use strict";n.r(t),n.d(t,"ProductsPerPageDropdown",(function(){return O}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(42),b=n(57),_=n(23),k=n(0),w=n(9),C=n(5),S=n(43),P=n(29),E=n(11);function x(){var e=r()(["",'<div class="ffw-ppp-dropdown-container ','">',"</div>"]);return x=function(){return e},e}var O=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).opened=!1,e.showSelected="false",e.collapseOnblur="false",e.items=[],e.haveItemsBeenInitialised=!1,e.ffPPPTemplate=void 0,e.dropdownContainer=void 0,e.subscriptionKey=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this,t=k.b.esPolyfills.find((function(e){return e.selected}))(this.items);return Object(v.b)(x(),t?Object(S.renderPPPItem)(this.ffPPPTemplate,t):"",Object(y.a)({"ffw-ppp-dropdown-closed":!this.opened}),Object(b.a)([this.items,this.showSelected],(function(){return Object(_.a)(e.items,(function(e){return e.value}),(function(t){return"false"===e.showSelected&&t.selected?"":Object(S.renderPPPItem)(e.ffPPPTemplate,t)}))})))}}],[{key:"is",get:function(){return"ff-products-per-page-dropdown"}},{key:"properties",get:function(){return{items:{type:Array,attribute:!1},opened:{type:Boolean,reflect:!0},showSelected:{type:String,attribute:"show-selected"},collapseOnblur:{type:String,attribute:"collapse-onblur"}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e;f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),!this.getAttribute("tabindex")&&this.setAttribute("tabindex","1"),this.ffPPPTemplate=Object(S.getTemplate)(this),this.addEventListener("click",this.toggle.bind(this)),this.addEventListener("blur",(e=this,function(){"true"===e.collapseOnblur&&setTimeout((function(){return e.hide()}),16)}))}},{key:"update",value:function(e){f()(l()(t.prototype),"update",this).call(this,e),e.has("items")&&function(e){if(0===e.items.length)return e.hideSelf();e.haveItemsBeenInitialised?e.hide():e.haveItemsBeenInitialised=!0,e.showSelf()}(this)}},{key:"firstUpdated",value:function(){this.dropdownContainer=this.getElementsByClassName("ffw-ppp-dropdown-container")[0]}},{key:"updated",value:function(e){e.has("items")&&this.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}},{key:"show",value:function(){this.opened||this.dropdownContainer.__transitionActive__||(this.opened=!0,this._show(this.dropdownContainer,!0))}},{key:"hide",value:function(){var e=this;this.opened&&!this.dropdownContainer.__transitionActive__&&this._hide(this.dropdownContainer,!0,(function(){return e.opened=!1}))}},{key:"toggle",value:function(e){!1!==e&&this.opened?this.hide():this.show()}},{key:"_subscriptionCallback",value:function(e){this.items=e||[]}}]),t}(Object(w.a)([Object(P.CollapseElement)(),Object(E.a)(E.b.ppp)],C.a));window.customElements.define(O.is,O)},function(e,t,n){"use strict";n.r(t),n.d(t,"ProductsPerPageSelect",(function(){return C}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(23),b=n(5),_=n(9),k=n(11);function w(){var e=r()(['<select @change="','">',"</select>"]);return w=function(){return e},e}var C=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).options=[],e.select=void 0,e.optionTemplate=void 0,e.subscriptionKey=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this;return Object(v.b)(w(),S,Object(y.a)(this.options,(function(e){return e.value}),(function(t){return Object(b.e)(e.optionTemplate,t)})))}}],[{key:"is",get:function(){return"ff-products-per-page-select"}},{key:"properties",get:function(){return{options:{type:Array,attribute:!1}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e;f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this.optionTemplate=(e=this.querySelector("[data-template]"))?(e.removeAttribute("data-template"),e.cloneNode(!0)):"<option>{{value}}</option>"}},{key:"firstUpdated",value:function(){this.select=this.querySelector("select")}},{key:"update",value:function(e){f()(l()(t.prototype),"update",this).call(this,e),e.has("options")&&(0===this.options.length?this.hideSelf():this.showSelf())}},{key:"updated",value:function(e){e.has("options")&&(this.select.selectedIndex=function(e){for(var t=0;t<e.length;t++)if(e[t].selected)return t;return-1}(this.options),this.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0})))}},{key:"_subscriptionCallback",value:function(e){this.options=e||[]}}]),t}(Object(_.a)([Object(k.a)(k.b.ppp)],b.a));function S(){var e=this.options[this.select.selectedIndex];e&&factfinder.communication.EventAggregator.addFFEvent({type:"ppp",value:e.value})}window.customElements.define(C.is,C)},function(e,t,n){"use strict";n.r(t),n.d(t,"ProductsPerPageList",(function(){return S}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(23),b=n(5),_=n(43),k=n(9),w=n(11);function C(){var e=r()(["",""]);return C=function(){return e},e}var S=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).items=[],e.ffPPPTemplate=void 0,e.subscriptionKey=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this;return Object(v.b)(C(),Object(y.a)(this.items,(function(e){return e.value}),(function(t){return Object(_.renderPPPItem)(e.ffPPPTemplate,t)})))}}],[{key:"is",get:function(){return"ff-products-per-page-list"}},{key:"properties",get:function(){return{items:{type:Array,attribute:!1}}}}]),p()(t,[{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this.ffPPPTemplate=Object(_.getTemplate)(this)}},{key:"update",value:function(e){f()(l()(t.prototype),"update",this).call(this,e),e.has("items")&&(0===this.items.length?this.hideSelf():this.showSelf())}},{key:"updated",value:function(e){e.has("items")&&this.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}},{key:"_subscriptionCallback",value:function(e){this.items=e||[]}}]),t}(Object(k.a)([Object(w.a)(w.b.ppp)],b.a));window.customElements.define(S.is,S)},function(e,t,n){"use strict";n.r(t),n.d(t,"AsnRemoveAllFilter",(function(){return k}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(9),v=n(5),y=n(11),b=n(15),_=n(48),k=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).showAlways=!1,e.removeParams=!1,e.keepCategoryPath=!1,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-asn-remove-all-filter"}},{key:"properties",get:function(){return{showAlways:{type:Boolean,attribute:"show-always"},removeParams:{type:Boolean,attribute:"remove-params"},keepCategoryPath:{type:Boolean,attribute:"keep-category-path"}}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this.addEventListener("click",this._removeFilter)}},{key:"update",value:function(e){e.has("keepCategoryPath")&&this.keepCategoryPath&&m.a.common.Logger.emitDeprecationWarning("".concat(t.is,"/keepCategoryPath"),"".concat(_.Communication.is,"/categoryPath"))}},{key:"_subscriptionCallback",value:function(e){var t=this;if(!1===this.showAlways){var n=m.a.common.urlStringToDict(e.searchParams),i=m.a.communication.Util.extractCategoryPathFieldName();if(Object(b.a)()){var r=i.match(/(.*)ROOT$/)[1],a=m.b.getFixedFilters();return void((n.filter||[]).some((function(e){return!(0===e.indexOf(r)&&t.keepCategoryPath||m.b.esPolyfills.includes(a,"filter=".concat(e)))}))?this.showSelf():this.hideSelf())}for(var o in n){var s=this.keepCategoryPath&&0===o.indexOf(i);if(0===o.indexOf("filter")&&!s)return void this.showSelf()}this.hideSelf()}else this.showSelf()}},{key:"_removeFilter",value:function(){m.a.communication.EventAggregator.addFFEvent({type:"clearFilter",removeParams:this.removeParams,keepCategoryPath:this.keepCategoryPath})}}]),t}(Object(g.a)([Object(y.a)(y.b.result)],v.a));window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"FilterCloud",(function(){return N}));var i=n(21),r=n.n(i),a=n(18),o=n.n(a),s=n(8),c=n.n(s),u=n(4),l=n.n(u),d=n(6),f=n.n(d),h=n(1),p=n.n(h),m=n(3),g=n.n(m),v=n(2),y=n.n(v),b=n(7),_=n.n(b),k=n(10),w=n(0),C=n(28),S=n(14),P=n(9),E=n(13),x=n(11),O=n(5),L=n(30),I=n(58);function T(){var e=c()(["",""]);return T=function(){return e},e}function j(){var e=c()(["",""]);return j=function(){return e},e}function R(){var e=c()([""]);return R=function(){return e},e}var M=Object.freeze({factfinder:"fact-finder",alphabetical:"alphabetical",userSelection:"user-selection"}),A="[data-template=filter]",N=function(e){function t(){var e;return l()(this,t),(e=f()(this,p()(t).call(this))).order=M.factfinder,e.blacklist=void 0,e.whitelist=void 0,e._selectedFilters=[],e._blacklist=[],e._whitelist=[],e._userSelectionOrder=[],e._factFinderOrder=[],e}return _()(t,e),y()(t,[{key:"render",value:function(){if(!this._template)return Object(k.b)(R());var e=document.createElement("div");e.innerHTML=this._template;var t=e.querySelector(A),n=t.outerHTML;return this._selectedFilters.map(z(n)).forEach((function(e){t.parentNode.insertBefore(e,t)})),t.parentNode.removeChild(t),Object(k.b)(j(),Array.from(e.childNodes).map((function(e){return Object(k.b)(T(),e)})))}}],[{key:"is",get:function(){return"ff-filter-cloud"}},{key:"properties",get:function(){return{order:{type:String},blacklist:{type:String},whitelist:{type:String},_selectedFilters:{type:Array,attribute:!1}}}}]),y()(t,[{key:"connectedCallback",value:function(){g()(p()(t.prototype),"connectedCallback",this).call(this),this._template||(Object(O.d)(this)?this._template='<span data-template="filter">{{element.name}}</span>':this.querySelector(A)?this._template=this.innerHTML.trim():(this.error("An error occurred: template HTML contains no elements marked as ".concat(A,".")),this.hideSelf())),this.addEventListener("click",D)}},{key:"disconnectedCallback",value:function(){this.removeEventListener("click",D),g()(p()(t.prototype),"disconnectedCallback",this).call(this)}},{key:"update",value:function(e){var n=this;this._selectedFilters&&0!==this._selectedFilters.length?this.showSelf():this.hideSelf(),e.has("blacklist")&&(this._blacklist=this.blacklist?this.blacklist.split(","):[]),e.has("whitelist")&&(this._whitelist=this.whitelist?this.whitelist.split(","):[]),e.has("order")&&!1===Object.keys(M).some((function(e){return M[e]===n.order}))&&(this.hideSelf(),this.error("Invalid 'order' value: '".concat(this.order,"'."))),this.blacklist&&this.whitelist&&(this.hideSelf(),this.error("'blacklist' and 'whitelist' are mutually exclusive, but both properties are set.")),(e.has("order")||e.has("blacklist")||e.has("whitelist"))&&(this._selectedFilters=V(this.order,this)),g()(p()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var n=this;g()(p()(t.prototype),"updated",this).call(this,e),this.updateComplete.then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}},{key:"_subscriptionCallback",value:function(e){this._selectedFilters=F(this,this.order,this._userSelectionOrder,e)}}]),t}(Object(P.a)([Object(E.ElementLog)(),Object(x.a)(x.b.asn)],O.a));function D(e){var t=e.item;t&&w.a.communication.EventAggregator.addFFEvent({type:"filter",groupName:t.group.name,filterName:t.element.name,clusterLevel:t.element.clusterLevel})}window.customElements.define(N.is,N);var F=function(e,t,n,i){var r=U(q(i)),a=n.filter((function(e){return B(r,e)})),o=r.filter((function(e){return!B(a,e)}));return e._factFinderOrder=r,e._userSelectionOrder=a.concat(o),V(t,e)},V=function(e,t){switch(e){case M.userSelection:return W(t._userSelectionOrder,t._blacklist,t._whitelist);case M.alphabetical:return W(t._factFinderOrder,t._blacklist,t._whitelist).sort((function(e,t){return e.element.name.localeCompare(t.element.name)}));default:return W(t._factFinderOrder,t._blacklist,t._whitelist)}},U=function(e){return e.reduce((function(e,t){return 0!==e.filter((function(e){return e.element.name===t.element.name&&e.group.name===t.group.name})).length?e:[].concat(o()(e),[t])}),[])},q=function(e){return e.reduce((function(e,t){return e.concat([].concat(o()(t.selectedElements),o()(t.elements.filter((function(e){return e.selected})))).map((function(e){return{group:t,element:e}})))}),[])},B=function(e,t){var n=t.element;return e.some((function(e){return e.element.name===n.name}))},z=function(e){return function(t){var n=Object(S.a)(e);return n.item=t,n.innerHTML=Object(C.a)(n.innerHTML,r()({},t,{element:Object(L.a)(t.element,"name")})),n.addEventListener("click",(function(e){e.item=t})),n}},W=function(e,t,n){var i=w.b.getFixedFilters();return e.filter((function(e){var r=t.indexOf(e.group.name)<0,a=0===n.length||0<=n.indexOf(e.group.name),o=!e.element.implicitSelection,s=Object(I.a)(i)(e.element);return r&&a&&o&&s}))}},function(e,t,n){"use strict";n.r(t),n.d(t,"Recommendation",(function(){return k}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(9),v=n(5),y=n(17),b=n(13),_=n(35),k=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).maxResults=4,e.subscribe=!0,e.usePerso=!1,e._topic="".concat(_.a.recommendation,":").concat(m.a.common.randomString(10)),e._subscriptionKey=void 0,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-recommendation"}},{key:"properties",get:function(){return{recordId:{type:v.b,attribute:"record-id"},maxResults:{type:Number,attribute:"max-results"},subscribe:{type:v.c},usePerso:{type:v.c,attribute:"use-perso"}}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this.subscribe&&!this._subscriptionKey&&(this._subscriptionKey=m.a.communication.ResultDispatcher.subscribe(this._topic,this._handleRecommendations,this));var e=this.querySelector(y.RecordList.is);e&&(e.setAttribute("subscribe","false"),e.__isRecommendation=!0)}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&(m.a.communication.ResultDispatcher.unsubscribe(this._topic,this._subscriptionKey),this._subscriptionKey=void 0)}},{key:"update",value:function(e){e.has("recordId")&&this.getRecommendations(),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"getRecommendations",value:function(){if(this.recordId){var e={type:this._topic,id:this.recordId.split(","),maxResults:this.maxResults};this.usePerso&&(e.usePerso="true"),m.a.communication.EventAggregator.addFFEvent(e)}else this.debug("No record id for recommendations specified."),this.hideSelf()}},{key:"_handleRecommendations",value:function(e){var t=this;if(e&&0<e.length){var n=this.querySelector(y.RecordList.is);n&&(n.records=e.slice(0,this.maxResults)),this.showSelf(),Promise.resolve().then((function(){return t.dispatchEvent(new CustomEvent("gotRecommendations",{bubbles:!0,composed:!0}))}))}else this.hideSelf()}}]),t}(Object(g.a)([Object(b.ElementLog)()],v.a));window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"SimilarProducts",(function(){return E}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(9),v=n(17),y=n(5),b=n(13),_=n(11),k=n(15),w=m.b.esPolyfills,C=w.includes,S=w.values,P=Object.freeze({ProductNumber:"productNumber",Id:"id"}),E=function(e){function t(){var e;r()(this,t),(e=o()(this,c()(t).call(this))).topic="".concat(_.b.similarProducts,":").concat(m.a.common.randomString(10)),e.maxResults=4,e.idType=void 0;var n=e.querySelector(v.RecordList.is);return n&&(n.subscribe=!1),e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-similar-products"}},{key:"properties",get:function(){return{recordId:{type:y.b,attribute:"record-id"},maxResults:{type:Number,attribute:"max-results"},idType:{type:String,attribute:"id-type"}}}}]),f()(t,[{key:"update",value:function(e){if(e.has("idType")&&Object(k.a)()){var n=S(P);if(!C(n,this.idType))return void this.warn("idType must be one of [".concat(n.join(", "),"]. Was: ").concat(this.idType,"."))}e.has("recordId")&&this.getSimilarProducts(),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf()}},{key:"getSimilarProducts",value:function(){if(C(S(P),this.idType)||!Object(k.a)())if(this.recordId){var e={type:this.topic,id:this.recordId,maxResults:this.maxResults};Object(k.a)()&&(e.idType=this.idType),m.a.communication.EventAggregator.addFFEvent(e)}else this.debug("No record id for similarProducts specified.");else this.warn("idType invalid. Not sending request.")}},{key:"_subscriptionCallback",value:function(e){var t=e.records;if(t&&0<t.length){var n=this.querySelector(v.RecordList.is);n&&(n.records=t.slice(0,this.maxResults)),this.showSelf()}else this.hideSelf()}}]),t}(Object(g.a)([Object(b.ElementLog)(),Object(_.a)(_.b.similarProducts)],y.a));window.customElements.define(E.is,E)},function(e,t,n){"use strict";n.r(t),n.d(t,"PredictiveBasket",(function(){return k}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(9),y=n(13),b=n(17),_=n(11),k=function(e){function t(){var e;if(r()(this,t),!m.a.__experimental.predictiveBasket.enable)throw Error("To use this experimental API you have to set `factfinder.__experimental.predictiveBasket.enable = true`.");return(e=o()(this,c()(t).call(this))).userId=void 0,e.maxResults=void 0,e.blacklist=void 0,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-predictive-basket"}},{key:"properties",get:function(){return{userId:{attribute:"user-id",type:String,reflect:!0},maxResults:{attribute:"max-results",type:Number},blacklist:String}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this.userId&&!this.querySelector(b.RecordList.is)&&this.warn("No ff-record-list provided. Provide one to make ".concat(t.is," work properly."))}},{key:"_subscriptionCallback",value:function(e){if(e&&0<e.length){var t=this.querySelector(b.RecordList.is);t&&(t.records=e),this.showSelf()}else this.hideSelf()}},{key:"update",value:function(e){e.has("userId")&&this.getPredictions(),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"getPredictions",value:function(){if(void 0===this.userId||null===this.userId||""===this.userId)return this.error("No user id specified."),void this.hideSelf();var e={type:m.a.__experimental.predictiveBasket.eventType,userId:this.userId};void 0!==this.maxResults&&(e.maxResults=this.maxResults),"string"==typeof this.blacklist&&(e.blacklist=this.blacklist.split(",").map((function(e){return e.trim()})).filter((function(e){return!!e}))),m.a.communication.EventAggregator.addFFEvent(e)}}]),t}(Object(v.a)([Object(y.ElementLog)(),Object(_.a)(m.a.__experimental.predictiveBasket.topic)],g.a));window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"Suggest",(function(){return O}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(12),y=n(0),b=n(9),_=n(13),k=n(31),w=n(5),C=n(35),S=n(14);function P(){var e=r()(["",""]);return P=function(){return e},e}function E(){var e=r()(['<div style="position:relative;width:100%"><div class="ffw-suggestContainerWrapper"><div class="ffw-suggestContainer ffw-','Layout">',"</div></div></div>"]);return E=function(){return e},e}var x=Object.freeze({block:"block",list:"list"}),O=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).layout=x.list,e.suggestItems=[],e._showUnknownSuggestions=!1,e._unknownSuggestionsSectionId=void 0,e._suggestSubscriptionKey=void 0,e._hideSuggestSubscriptionKey=void 0,e._template=void 0,e._itemTemplates={},e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this,t=L(this.suggestItems),n=Object.keys(t),i=document.createElement("div");i.innerHTML=this._template;for(var r=i.querySelectorAll("[data-container]"),a=Object(S.a)('<div data-container="unknown">\n                            <p class="containerCaption">unknown</p>\n                                <ff-suggest-item>\n                                    <span>{{{name}}}</span>\n                                </ff-suggest-item>\n                         </div>'),o=r.length-1;0<=o;o--){var s=r[o],c=s.getAttribute("data-container");(!c||n.indexOf(c)<0)&&s.parentNode.removeChild(s)}n.forEach((function(n){var r=t[n],o=i.querySelector("".concat(k.a.is,'[type="').concat(n,'"]'));if(!o){if(!e._showUnknownSuggestions)return;var s=Object(S.a)(a.outerHTML.replace(/\bunknown\b/g,n)),c=i.querySelector(e._unknownSuggestionsSectionId?"#".concat(e._unknownSuggestionsSectionId):"section");if(!c)return;c.appendChild(s),o=s.querySelector("".concat(k.a.is)),e._itemTemplates[n]=o.innerHTML}r.forEach((function(t){var i=document.createElement(k.a.is);i._template=e._itemTemplates[n],i.type=n,i.suggestion=t,o.parentNode.insertBefore(i,o)})),o.parentNode.removeChild(o)}));var u=i.querySelectorAll("section");return Array.from(u).forEach((function(e){0===e.querySelectorAll(k.a.is).length&&e.setAttribute("hidden","")})),Object(v.g)(E(),this.layout,Array.from(i.children).map((function(e){return Object(v.g)(P(),e)})))}}],[{key:"is",get:function(){return"ff-suggest"}},{key:"properties",get:function(){return{layout:{type:String},suggestItems:{type:Array,attribute:!1},_showUnknownSuggestions:{type:w.c,attribute:"show-unknown-suggestions"},_unknownSuggestionsSectionId:{type:String,attribute:"unknown-suggestions-section-id"}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e=this;f()(l()(t.prototype),"connectedCallback",this).call(this),this._initTemplates(),this._suggestSubscriptionKey=this._suggestSubscriptionKey||y.a.communication.ResultDispatcher.subscribe(C.a.suggest,(function(t,n){var i=y.a.communication.globalElementValues.currentFFSearchBoxValue;n&&I(n.query)!==i||(e.suggestItems=t||[])})),this._hideSuggestSubscriptionKey=this._hideSuggestSubscriptionKey||y.a.communication.ResultDispatcher.subscribe("suggest:hide",(function(){e.hideSelf()})),this.addEventListener("item-clicked",this._itemClicked)}},{key:"update",value:function(e){this.suggestItems&&0!==this.suggestItems.length?this.showSelf():this.hideSelf(),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var n=this;f()(l()(t.prototype),"updated",this).call(this,e),this.updateComplete.then((function(){Promise.all(Array.from(n.querySelectorAll(k.a.is)).map((function(e){return e.updateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}))}},{key:"disconnectedCallback",value:function(){this.removeEventListener("item-clicked",this._itemClicked),this._suggestSubscriptionKey&&(y.a.communication.ResultDispatcher.unsubscribe(C.a.suggest,this._suggestSubscriptionKey),this._suggestSubscriptionKey=void 0),this._hideSuggestSubscriptionKey&&(y.a.communication.ResultDispatcher.unsubscribe("suggest:hide",this._hideSuggestSubscriptionKey),this._hideSuggestSubscriptionKey=void 0),f()(l()(t.prototype),"disconnectedCallback",this).call(this)}},{key:"_itemClicked",value:function(e){this.dispatchEvent(new CustomEvent("suggest-item-clicked",{detail:e.detail,bubbles:!0}))}},{key:"_initTemplates",value:function(){var e=this,t=document.createElement("div");t.innerHTML=this.innerHTML;for(var n=t.childNodes.length-1;0<=n;n--){var i=t.childNodes[n];("SECTION"!==i.nodeName||!i.querySelector(k.a.is)&&i.id!==this._unknownSuggestionsSectionId)&&i.parentNode.removeChild(i)}this._template=t.innerHTML,t.querySelectorAll(k.a.is).forEach((function(t){var n=t.getAttribute("type");n&&!e._itemTemplates[n]&&(e._itemTemplates[n]=t.innerHTML)}))}}]),t}(Object(b.a)([Object(_.ElementLog)()],w.a));window.customElements.define(O.is,O);var L=function(e){var t={};return e.forEach((function(e){t[e.type]=t[e.type]||[],t[e.type].push(e)})),t},I=function(e){try{return y.b.Encoding.fixedDecodeURIComponent(e)}catch(t){return e}}},function(e,t,n){"use strict";n.r(t),n.d(t,"SortBoxSelect",(function(){return C}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(0),b=n(5),_=n(9),k=n(11);function w(){var e=r()(['<select @change="','">',"</select>"]);return w=function(){return e},e}var C=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this)))._selectAttributes=[],e._itemTemplate=void 0,e.items=[],e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this;return Object(v.b)(w(),S,this.items.map((function(t){return Object(b.e)(e._itemTemplate,t)})))}}],[{key:"is",get:function(){return"ff-sortbox-select"}},{key:"properties",get:function(){return{items:{type:Array,attribute:!1}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e;f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this._selectAttributes=(e=this.querySelector("select"))?e.attributes:[],this._itemTemplate=this.querySelector("option")||"<option>{{description}}</option>"}},{key:"firstUpdated",value:function(){var e=this.querySelector("select");Array.prototype.forEach.call(this._selectAttributes,(function(t){var n=t.name,i=t.value;return e.setAttribute(n,i)}))}},{key:"updated",value:function(e){e.has("items")&&(0===this.items.length?this.hideSelf():(this.showSelf(),this.querySelector("select").selectedIndex=function(e){for(var t=0;t<e.length;t++)if(e[t].selected)return t;return 0}(this.items)),this.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0})))}},{key:"_subscriptionCallback",value:function(e){this.items=e}}]),t}(Object(_.a)([Object(k.a)(k.b.sort)],b.a));function S(e){y.a.communication.EventAggregator.addFFEvent({type:"sort",name:this.items[e.target.selectedIndex].name,order:this.items[e.target.selectedIndex].order})}window.customElements.define(C.is,C)},function(e,t,n){"use strict";n.r(t),n.d(t,"Template",(function(){return b}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(9),y=n(13),b=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).data=void 0,e.scope=void 0,e._subscriptionKey=void 0,e._template=void 0,e}return p()(t,e),f()(t,[{key:"render",value:function(){return Object(g.e)(this._template,this.data)}}],[{key:"is",get:function(){return"ff-template"}},{key:"properties",get:function(){return{data:{type:Object,attribute:!1},scope:{type:String}}}}]),f()(t,[{key:"connectedCallback",value:function(){var e=this;l()(c()(t.prototype),"connectedCallback",this).call(this),this._template=this.innerHTML,this.scope&&!this._subscriptionKey&&(this._subscriptionKey=m.a.communication.ResultDispatcher.subscribe(this.scope,(function(t){e.data=t}),this))}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&(m.a.communication.ResultDispatcher.unsubscribe(this.scope,this._subscriptionKey),this._subscriptionKey=void 0)}},{key:"update",value:function(e){this.data?this.showSelf():this.hideSelf(),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var n=this;l()(c()(t.prototype),"updated",this).call(this,e),e.has("data")&&this.updateComplete.then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))})),e.has("scope")&&(m.a.communication.ResultDispatcher.unsubscribe(e.get("scope"),this._subscriptionKey),this._subscriptionKey=this.scope?m.a.communication.ResultDispatcher.subscribe(this.scope,(function(e){n.data=e}),this):void 0)}}]),t}(Object(v.a)([Object(y.ElementLog)()],g.a));window.customElements.define(b.is,b)},function(e,t,n){"use strict";n.r(t);var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(7),p=n.n(h),m=n(5),g=n(9),v=n(11),y=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return p()(t,e),o()(t,[{key:"update",value:function(e){if(e.has("urlParameterName")&&this.urlParameterName){var n=factfinder.common.urlStringToDict()[this.urlParameterName];n&&(this.recordId=n)}e.has("recordId")&&factfinder.communication.EventAggregator.addFFEvent({type:"productDetail",id:this.recordId}),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"_subscriptionCallback",value:function(e){}}],[{key:"is",get:function(){return"ff-product-detail"}},{key:"properties",get:function(){return{recordId:{type:Number,attribute:"record-id"},urlParameterName:{type:String,attribute:"url-parameter-name"}}}}]),t}(Object(g.a)([Object(v.a)(v.b.productDetail)],m.a));window.customElements.define(y.is,y)},function(e,t,n){"use strict";n.r(t),n.d(t,"PagingDropdown",(function(){return M}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(20),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(10),_=n(12),k=n(42),w=n(57),C=n(23),S=n(0),P=n(9),E=n(5),x=n(32),O=n(29),L=n(11);function I(){var e=r()(["<ff-paging-item>{{caption}}</ff-paging-item>"]);return I=function(){return e},e}function T(){var e=r()([""]);return T=function(){return e},e}function j(){var e=r()([""]);return j=function(){return e},e}function R(){var e=r()(["",'<div class="ffw-paging-dropdown-container ','">',"</div>"]);return R=function(){return e},e}var M=function(e){function t(){var e;return o()(this,t),(e=c()(this,f()(t).call(this))).opened=!1,e._itemTemplate=void 0,e.addEventListener("click",(function(){return e.toggle()})),e.addEventListener("blur",function(){var e=this;!0===this.collapseOnblur&&setTimeout((function(){return e.hide()}),150)}.bind(l()(e))),e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this;return Object(b.b)(R(),this.renderDropdownSelected(),Object(k.a)({"ffw-paging-dropdown-closed":!this.opened}),Object(w.a)([this.items,this.showSelected],(function(){return Object(C.a)(e.items?e.items.pageLinks:[],(function(e){return e.caption}),(function(t){return e.renderDropdownItem(t)}))})))}},{key:"renderDropdownSelected",value:function(){return this.items?this.renderLink(S.b.esPolyfills.find((function(e){return e.currentPage}))(this.items.pageLinks)):Object(b.b)(j())}},{key:"renderDropdownItem",value:function(e){return!e.currentPage||this.showSelected?this.renderLink(e):Object(b.b)(T())}},{key:"renderLink",value:function(e){var t=this._itemTemplate.clone();return t.pagingItem=e,t}}],[{key:"is",get:function(){return"ff-paging-dropdown"}},{key:"properties",get:function(){return{items:{type:Object,attribute:!1},opened:{type:Boolean,reflect:!0},showSelected:{type:Boolean,reflect:!0,attribute:"show-selected"},collapseOnblur:{type:Boolean,attribute:"collapse-onblur",reflect:!0}}}}]),g()(t,[{key:"connectedCallback",value:function(){var e;p()(f()(t.prototype),"connectedCallback",this).call(this),this._itemTemplate||(this._itemTemplate=this.querySelector(x.a.is)||(e=document.createElement("div"),Object(_.i)(Object(b.b)(I()),e),e.firstElementChild)),this.getAttribute("tabindex")||this.setAttribute("tabindex","999"),this.hideSelf()}},{key:"update",value:function(e){e.has("items")&&this._itemsChanged(),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var n=this;p()(f()(t.prototype),"updated",this).call(this),(e.has("items")||e.has("showSelected"))&&Promise.all(Array.from(this.querySelectorAll("".concat(x.a.is))).map((function(e){return e.updateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}},{key:"show",value:function(){var e=this.getDropdown();this.opened=!0,this._show(e,!0)}},{key:"hide",value:function(){var e=this,t=this.getDropdown();t&&this._hide(t,!0,(function(){e.opened=!1}))}},{key:"toggle",value:function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.opened)?this.hide():this.show()}},{key:"getDropdown",value:function(){return this.querySelector(".ffw-paging-dropdown-container")}},{key:"_subscriptionCallback",value:function(e){this.items=e}},{key:"_itemsChanged",value:function(){this.opened&&this.hide(),0<this.items.pageLinks.length?this.showSelf():this.hideSelf()}}]),t}(Object(P.a)([Object(O.CollapseElement)(),Object(L.a)(L.b.paging)],E.a));window.customElements.define(M.is,M)},function(e,t,n){"use strict";n.r(t),n.d(t,"Paging",(function(){return _}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(5),g=n(32),v=n(70),y=n(9),b=n(11),_=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).showOnly=!1,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-paging"}},{key:"properties",get:function(){return{paging:{type:Object,attribute:!1},showOnly:{type:m.c,attribute:"show-only",reflect:!0}}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf()}},{key:"update",value:function(e){e.has("paging")&&this._pagingChanged(),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var t=this;e.has("paging")&&Promise.all(Array.from(this.querySelectorAll("".concat(g.a.is))).map((function(e){return e.updateComplete}))).then((function(){t.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}},{key:"_subscriptionCallback",value:function(e){this.paging=e}},{key:"_pagingChanged",value:function(){var e=this;if(0===this.paging.pageLinks.length)this.hideSelf();else{var t=this.querySelectorAll(v.a.is);0<t.length?t.forEach((function(t){t.paging=e.paging,t.updateComplete.then((function(){t.isActive&&e._processPagingSet(e.paging,t)}))})):this._processPagingSet(this.paging,this),this.showSelf()}}},{key:"_processPagingSet",value:function(e,t){this._processCurrentLinks(e,t);var n=t.querySelector("".concat(g.a.is,'[type="firstLink"]'));n&&(k(n,this.showOnly),n.pagingItem=e.firstLink);var i=t.querySelector("".concat(g.a.is,'[type="lastLink"]'));i&&(k(i,this.showOnly),i.pagingItem=e.lastLink);var r=t.querySelector("".concat(g.a.is,'[type="nextLink"]'));r&&(k(r,this.showOnly),r.pagingItem=e.nextLink);var a=t.querySelector("".concat(g.a.is,'[type="previousLink"]'));a&&(k(a,this.showOnly),a.pagingItem=e.previousLink)}},{key:"_processCurrentLinks",value:function(e,t){var n=this,i=e.pageLinks.reduce((function(e,t,n){return!0===t.currentPage?n:e}),-1);t.querySelectorAll("".concat(g.a.is,'[type~="currentLink"]')).forEach((function(t){k(t,n.showOnly);var r=/-?\d/.exec(t.type)||[],a=parseInt(r[0])||0;t.pagingItem=e.pageLinks[i+a]}))}}]),t}(Object(y.a)([Object(b.a)(b.b.paging)],m.a));function k(e,t){e.showOnly=e.showOnly||t.toString()}window.customElements.define(_.is,_)},function(e,t,n){"use strict";n.r(t),n.d(t,"PagingSelect",(function(){return k}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(0),b=n(5);function _(){var e=r()(['<select @change="','">',"</select>"]);return _=function(){return e},e}var k=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this)))._selectAttributes=[],e._optionTemplate=void 0,e._pagingData=void 0,e._subscriptionKey=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this,t=this.pagingData?this.pagingData.pageLinks:[];return Object(v.b)(_(),w,t.map((function(t){return Object(b.e)(e._optionTemplate,t)})))}}],[{key:"is",get:function(){return"ff-paging-select"}},{key:"properties",get:function(){return{pagingData:{type:Object,attribute:!1}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e=this;f()(l()(t.prototype),"connectedCallback",this).call(this),this.hideSelf();var n=this.querySelector("select");this._selectAttributes=n?Array.from(n.attributes):[],this._optionTemplate=this.querySelector("option")||"<option>{{caption}}</option>",this._subscriptionKey=y.a.communication.ResultDispatcher.subscribe("paging",(function(t){return e.pagingData=t}))}},{key:"disconnectedCallback",value:function(){f()(l()(t.prototype),"disconnectedCallback",this).call(this),y.a.communication.ResultDispatcher.unsubscribe("paging",this._subscriptionKey)}},{key:"firstUpdated",value:function(){var e=this.querySelector("select");this._selectAttributes.forEach((function(t){var n=t.name,i=t.value;return e.setAttribute(n,i)}))}},{key:"updated",value:function(e){e.has("pagingData")&&(this.pagingData&&0!==this.pagingData.pageLinks.length?(this.showSelf(),this.querySelector("select").selectedIndex=function(e){for(var t=0;t<e.length;t++)if(e[t].currentPage)return t;return 0}(this.pagingData.pageLinks)):this.hideSelf(),this.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0})))}},{key:"pagingData",set:function(e){if(e&&!Array.isArray(e.pageLinks))throw new Error("ff-paging-select received invalid data format. Must be { pageLinks: [] }");var t=this._pagingData;this._pagingData=e,this.requestUpdate("pagingData",t)},get:function(){return this._pagingData}}]),t}(b.a);function w(e){var t=this.pagingData.pageLinks[e.target.selectedIndex].number;y.a.communication.EventAggregator.addFFEvent({type:"paging",number:t})}window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"Compare",(function(){return k}));var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(9),v=n(17),y=n(5),b=n(13),_=n(35),k=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).maxResults=4,e.subscribe=!0,e.autoCompare="false",e._topic="".concat(_.a.compare,":").concat(m.a.common.randomString(10)),e._subscriptionKey=void 0,e}return p()(t,e),f()(t,[{key:"topic",get:function(){return this._topic}}],[{key:"is",get:function(){return"ff-compare"}},{key:"properties",get:function(){return{recordId:{type:Array,attribute:"record-id"},maxResults:{type:Number,attribute:"max-result"},subscribe:{type:y.c},autoCompare:{type:String,attribute:"auto-compare"}}}}]),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf();var e=this.querySelector(v.RecordList.is);e?("true"===e.subscribe&&(this.warn("Automatic subscription of ff-record-list child component is turned on and will be turned off. Please, set ff-record-list 'subscribe' property to 'false' in your HTML code."),e.setAttribute("subscribe","false")),e._subscriptionKey&&(this.warn("ff-record-list child component is subscribed to search result and will be unsubscribed."),e.unsubscribe())):this.warn("Record list for 'ff-compare' component was not found."),this.subscribe&&!this._subscriptionKey&&(this._subscriptionKey=m.a.communication.ResultDispatcher.subscribe(this._topic,this._handleCompareResults,this))}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&(m.a.communication.ResultDispatcher.unsubscribe(this._topic,this._subscriptionKey),this._subscriptionKey=void 0)}},{key:"updated",value:function(e){l()(c()(t.prototype),"updated",this).call(this,e),e.has("recordId")&&"true"===this.autoCompare&&this.compareRecords(this.recordId)}},{key:"_handleCompareResults",value:function(e){var t=this,n=e.records||[],i=e.attributes.reduce((function(e,t){return e[t.attributeName]=t.different,e}),{});if(2<=n.length){n.forEach((function(e){return e.diff=i}));var r=this.querySelector(v.RecordList.is);r&&(r.records=n.slice(0,this.maxResults),r.addEventListener("dom-updated",(function(){var e=Array.from(r.querySelectorAll("[data-attribute]"));t._updateCssClasses(e,i),t.showSelf()}),{once:!0}))}else this.hideSelf()}},{key:"compareRecords",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];2<=e.length?m.a.communication.EventAggregator.addFFEvent({type:this._topic,ids:e,maxResults:this.maxResults}):(this.debug("No record ids for compare specified."),this.hideSelf())}},{key:"_updateCssClasses",value:function(e,t){e.forEach((function(e){var n=e.getAttribute("data-attribute");!0===t[n]?(e.classList.add("ffw-compare-diff"),e.classList.remove("ffw-compare-equal")):!1===t[n]?(e.classList.remove("ffw-compare-diff"),e.classList.add("ffw-compare-equal")):(e.classList.remove("ffw-compare-diff"),e.classList.remove("ffw-compare-equal"))}))}}]),t}(Object(g.a)([Object(b.ElementLog)()],y.a));window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t),n.d(t,"TagCloud",(function(){return x}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(23),b=n(0),_=n(5),k=n(9),w=n(11),C=n(15),S=n(38);function P(){var e=r()(['<a href="#" class="ffw-tagCloudLink" style="','" .tagCloudEntry="','" @click="','">',"</a>"]);return P=function(){return e},e}function E(){var e=r()(['<div class="ffw-tagCloudContainer">',"</div>"]);return E=function(){return e},e}var x=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).tags=[],e.minFontSize=10,e.maxFontSize=20,e.unit="px",e.gradientColorStart="#294884",e.gradientColorEnd="#20b6e8",e.wordCount=30,e.disableAuto=!1,e.ffPreventDefault=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this;return Object(v.b)(E(),Object(y.a)(this.tags,(function(t){return e._renderTag(t)})))}}],[{key:"is",get:function(){return"ff-tag-cloud"}},{key:"properties",get:function(){return{minFontSize:{type:Number,attribute:"min-font-size"},maxFontSize:{type:Number,attribute:"max-font-size"},unit:{type:String},gradientColorStart:{type:String,attribute:"gradient-color-start"},gradientColorEnd:{type:String,attribute:"gradient-color-end"},wordCount:{type:Number,attribute:"word-count"},disableAuto:{type:Boolean,attribute:"disable-auto"},tags:{type:Array,attribute:!1}}}}]),p()(t,[{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),Object(C.a)()?console.warn("".concat(t.is," is not supported by FACT-Finder version ").concat(b.a.communication.globalSearchParameter.version,".")):this.disableAuto||this.getTagCloud()}},{key:"_subscriptionCallback",value:function(e){this.tags=e}},{key:"update",value:function(e){e.has("wordCount")&&!this.disableAuto&&this.getTagCloud(),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"updated",value:function(e){var n=this;f()(l()(t.prototype),"updated",this).call(this,e),this.updateComplete.then((function(){return n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}},{key:"disconnectedCallback",value:function(){f()(l()(t.prototype),"disconnectedCallback",this).call(this),this._subscriptionKey&&(b.a.communication.ResultDispatcher.unsubscribe("tagCloud",this._subscriptionKey),this._subscriptionKey=void 0)}},{key:"getTagCloud",value:function(){Object(C.a)()?console.warn("".concat(t.is," is not supported by FACT-Finder version ").concat(b.a.communication.globalSearchParameter.version,".")):b.a.communication.EventAggregator.addFFEvent({type:"tagCloud",wordCount:this.wordCount})}},{key:"_renderTag",value:function(e){var t={query:e.query,count:e.searchCount,params:b.a.common.decodeUrl(e.params)},n=this.minFontSize+Math.round((this.maxFontSize-this.minFontSize)*e.weight),i=L(I(1,this.gradientColorStart,this.gradientColorEnd),e.weight,this.gradientColorStart),r="font-size: ".concat(n).concat(this.unit,"; color: ").concat(i);return Object(v.b)(P(),r,t,this._handleClick,e.query)}},{key:"_handleClick",value:function(e){e.preventDefault();var t={entry:e.target.tagCloudEntry,element:this};if(this.dispatchEvent(new CustomEvent("entry-clicked",{bubbles:!0,composed:!0,detail:t})),!0!==this.ffPreventDefault){var n=b.a.common.urlStringToDict(e.target.tagCloudEntry.params);n.type="search",Object(S.a)(n,this)}else delete this.ffPreventDefault}}]),t}(Object(k.a)([Object(w.a)(w.b.tagCloud)],_.a));window.customElements.define(x.is,x);var O=function(e){4===e.length&&(e=e.replace(/(\w)(\w)(\w)/gi,"$1$1$2$2$3$3"));var t=/(\w{2})(\w{2})(\w{2})/.exec(e);return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]},L=function(e,t,n){return O(n).map((function(n,i){var r=Math.round(n+e[i]*t);return Math.min(Math.max(r,0),255)})).reduce((function(e,t){return e+"0".concat(t.toString(16)).slice(-2)}),"#")},I=function(e,t,n){var i=O(t);return O(n).map((function(t,n){return(t-i[n])/e}))}},function(e,t,n){"use strict";n.r(t),n.d(t,"SearchFeedback",(function(){return P}));var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(0),b=n(9),_=n(41),k=n(11),w=n(5);function C(){var e=r()(['<div @click="','" class="ffw-caption">','</div><div class="ffw-content">',"</div>"]);return C=function(){return e},e}var S=Object.freeze({left:"left",right:"right"}),P=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).opened=!1,e.align=S.left,e.positive=!0,e.resetOnToggle=!1,e.resetOnSend=!1,e.dontShowOnResultChanged=!1,e._captionTemplate=void 0,e._contentTemplate=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){return Object(v.b)(C(),this._handleClick,this._captionTemplate,this._contentTemplate)}},{key:"_caption",get:function(){return this.querySelector(".ffw-caption")}},{key:"_content",get:function(){return this.querySelector(".ffw-content")}},{key:"_hidden",get:function(){return this.classList.contains("ffw-hidden")}}],[{key:"is",get:function(){return"ff-search-feedback"}},{key:"properties",get:function(){return{opened:{type:Boolean},align:{type:String},positive:{type:w.c},resetOnToggle:{type:Boolean,attribute:"reset-on-toggle"},resetOnSend:{type:Boolean,attribute:"reset-on-send"},dontShowOnResultChanged:{type:Boolean,attribute:"dont-show-on-result-changed"}}}}]),p()(t,[{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this._captionTemplate||(this._captionTemplate=this.querySelector("[slot='caption']")),this._contentTemplate||(this._contentTemplate=this.querySelector("[slot='content']")),this.hideSelf()}},{key:"firstUpdated",value:function(e){var n=this;f()(l()(t.prototype),"firstUpdated",this).call(this,e);var i=function(e,t){var i=n.querySelector(e);i&&i.addEventListener("click",t.bind(n))};i("[data-toggle]",this._handleClick),i("[data-send]",this._handleSend),i("[data-positive]",(function(){return n.positive=!0})),i("[data-negative]",(function(){return n.positive=!1}))}},{key:"updated",value:function(e){if(f()(l()(t.prototype),"updated",this).call(this,e),e.has("opened")&&void 0!==e.get("opened")){if(this._hidden)this._removeTransitions();else{var n=this.align===S.right;this._content.classList[this.opened?"add":"remove"](n?"ffw-transformZero":"ffw-transformX"),this._caption.classList[this.opened?"add":"remove"](n?"ffw-transformX":"ffw-transformZero")}this.dispatchEvent(new CustomEvent("open-changed",{bubbles:!0,composed:!0,detail:{value:this.opened}}))}e.has("positive")&&void 0!==e.get("positive")&&this.dispatchEvent(new CustomEvent("positive-changed",{bubbles:!0,composed:!0,detail:{value:this.positive}}))}},{key:"_removeTransitions",value:function(){this._content.classList.remove("ffw-transformZero"),this._content.classList.remove("ffw-transformX"),this._caption.classList.remove("ffw-transformZero"),this._caption.classList.remove("ffw-transformX")}},{key:"_subscriptionCallback",value:function(e){!0!==this.dontShowOnResultChanged&&e&&this._hidden&&this.show(),this.opened=!1,this._removeTransitions(),this.reset()}},{key:"_handleClick",value:function(){this.opened=!this.opened,this._checkAndReset()}},{key:"_checkAndReset",value:function(){!this.opened&&this.resetOnToggle&&this.reset()}},{key:"_handleSend",value:function(){var e=this,t={query:y.a.communication.Util.getQueryFromSearchParams(),id:"none",type:"feedback",positive:this.positive,success:function(){e.resetOnSend&&e._resetAfterSend(),e.dispatchEvent(new CustomEvent("successful",{bubbles:!0,composed:!0}))},fail:function(){return e.dispatchEvent(new CustomEvent("failed",{bubbles:!0,composed:!0}))}},n=this.querySelector("[data-message]");n&&"string"==typeof n.value&&(t.message=n.value),y.a.communication.Tracking.searchFeedback(t)}},{key:"_resetAfterSend",value:function(){this.reset(),this.hide()}},{key:"hide",value:function(){this.hideSelf(),this.opened=!1}},{key:"show",value:function(){this.showSelf()}},{key:"reset",value:function(){this.positive=!0;var e=this.querySelector("[data-message]");e&&"string"==typeof e.value&&(e.value="")}}]),t}(Object(b.a)([Object(_.a)(),Object(k.a)(k.b.result)],w.a));window.customElements.define(P.is,P)},function(e,t,n){"use strict";n.r(t),n.d(t,"MultiAttributeParsing",(function(){return p}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"_once",value:function(){h.a.middleware.response.use(h.a.middleware.response.MultiAttributeParsing({srcProperty:this.srcProperty,storeInProperty:this.storeInProperty,keepOriginalInProperty:this.keepOriginalInProperty,entrySeparator:this.entrySeparator,keyValueSeparator:this.keyValueSeparator}))}},{key:"srcProperty",get:function(){return m(this,"src-property")}},{key:"storeInProperty",get:function(){return m(this,"store-in-property")}},{key:"keepOriginalInProperty",get:function(){return m(this,"keep-original-in-property")}},{key:"entrySeparator",get:function(){return m(this,"entry-separator")}},{key:"keyValueSeparator",get:function(){return m(this,"key-value-separator")}}],[{key:"is",get:function(){return"ff-multi-attribute-parsing"}}]),t}(n(61).a);function m(e,t){var n=e.getAttribute(t);return"string"==typeof n?n:void 0}window.customElements.define(p.is,p)},function(e,t,n){"use strict";n.r(t),n.d(t,"ProductTeaserCampaignProcessor",(function(){return p}));var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"_once",value:function(){h.a.middleware.response.use(h.a.middleware.response.ProductTeaserCampaignProcessor())}}],[{key:"is",get:function(){return"ff-product-teaser-campaign-processor"}}]),t}(n(61).a);window.customElements.define(p.is,p)},function(e,t,n){"use strict";n.r(t);var i=n(24),r=n.n(i),a=n(8),o=n.n(a),s=n(4),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(10),_=n(9),k=n(21),w=n.n(k),C=n(18),S=n.n(C),P=n(12),E=n(33),x=new WeakMap,O=Object(P.f)((function(e){return function(t){if(!(t instanceof P.b))throw new Error("cache can only be used in text bindings");var n=x.get(t);void 0===n&&(n=new WeakMap,x.set(t,n));var i=t.value;if(i instanceof E.a){if(e instanceof P.d&&i.template===t.options.templateFactory(e))return void t.setValue(e);var r=n.get(i.template);void 0===r&&(r={instance:i,nodes:document.createDocumentFragment()},n.set(i.template,r)),Object(P.j)(r.nodes,t.startNode.nextSibling,t.endNode)}if(e instanceof P.d){var a=t.options.templateFactory(e),o=n.get(a);void 0!==o&&(t.setValue(o.nodes),t.commit(),t.value=o.instance)}t.setValue(e)}})),L=n(0),I=n(5),T=n(14),j=n(27),R=n.n(j),M=n(20),A=n.n(M),N=n(55),D=n(13),F=n(30);function V(){var e=o()(['<div class="ffw-asn-unselected">',"</div>"]);return V=function(){return e},e}function U(){var e=o()(['<div class="ffw-asn-selected">',"</div>"]);return U=function(){return e},e}var q=function(e){function t(){var e,n;return c()(this,t),(e=l()(this,f()(t).call(this))).selected=!1,e.element=void 0,e.group=void 0,e._rawOuterHtml="",e._selectedTemplate=B("selected"),e._unselectedTemplate=B("unselected"),e._clickListener=(n=A()(e),function(e){if(!n.implicit&&!n.fixed){var t=L.b.getFixedFilters();if(0<t.length&&n.selected){var i=L.a.common.getParameterString(n.element.searchParams).split("&");if(!t.every((function(e){return i.some((function(t){return 0===t.indexOf(e)}))})))return}n.selected=!n.selected,L.a.communication.EventAggregator.addFFEvent({type:"filter",groupName:n.group.name,filterName:n.element.name,clusterLevel:n.element.clusterLevel})}}),e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this.element&&w()({},this.element,{name:this.element.__HIGHLIGHTED_NAME__||this.element.name});return this.selected?Object(b.b)(U(),Object(I.e)(this._selectedTemplate,{element:Object(F.a)(e,"name"),group:this.group})):Object(b.b)(V(),Object(I.e)(this._unselectedTemplate,{element:Object(F.a)(e,"name"),group:this.group}))}}],[{key:"is",get:function(){return"ff-asn-group-element"}},{key:"properties",get:function(){return{selected:{type:Boolean,reflect:!0},fixed:{type:Boolean,reflect:!0},implicit:{type:Boolean,reflect:!0},element:{type:Object,attribute:!1},group:{type:Object,attribute:!1}}}}]),g()(t,[{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._init()}},{key:"_init",value:function(){this._rawOuterHtml=this.outerHTML,this._selectedTemplate=this.querySelector("[slot='selected']")||this._selectedTemplate,this._unselectedTemplate=this.querySelector("[slot='unselected']")||this._unselectedTemplate,this.addEventListener("click",this._clickListener)}},{key:"update",value:function(e){var n,i,r,a;e.has("element")&&((i=(n=this).element)?(n.selected=i.selected,n.implicit=i.implicitSelection,n.fixed=!!i.selected&&(r=i,a=L.a.communication.Util.extractCategoryPathFieldName(),(r.associatedFieldName===a||0===r.associatedFieldName.indexOf(a+"/"))&&L.b.getFixedFilters().map((function(e){return L.a.common.fixedDecodeURIComponent(e.split("=")[1])})).some((function(e){var t=e.split(":"),n=R()(t,2),i=n[0]+"ROOT/"+n[1],a=r.associatedFieldName+"/"+r.name;return new RegExp("^".concat(a,"\\b")).test(i)}))),n.className=n.className.replace(/ ?\bclusterLevel\d+\b/g,"").trim(),i.clusterLevel&&n.classList.add("clusterLevel".concat(i.clusterLevel)),n.showSelf()):n.hideSelf()),p()(f()(t.prototype),"update",this).call(this)}},{key:"updated",value:function(e){p()(f()(t.prototype),"updated",this).call(this,e),Object(N.a)(this)}},{key:"clone",value:function(e,n){var i=this._rawOuterHtml?Object(T.a)(this._rawOuterHtml):document.createElement(t.is);return i.group=e,i.element=n,i._selectedTemplate=this._selectedTemplate,i._unselectedTemplate=this._unselectedTemplate,i}}]),t}(Object(_.a)([Object(D.ElementLog)()],I.a));function B(e){return Object(T.a)('<div slot="'.concat(e,'">{{element.name}}</div>'))}window.customElements.define(q.is,q);var z=n(29),W=n(49),H=n(58);function K(){var e=o()(["",""]);return K=function(){return e},e}function Y(){var e=o()(["",""]);return Y=function(){return e},e}function G(){var e=o()(['<div opened data-container="detailedLinks"><div data-content="detailedLinks"></div></div>']);return G=function(){return e},e}function X(){var e=o()(['<div data-container="hiddenLinks" style="height:0;overflow:hidden"><div data-content="hiddenLinks"></div></div>']);return X=function(){return e},e}function Z(){var e=o()([""," "," "," ",""]);return Z=function(){return e},e}function J(){var e=o()(['<div data-container="groupCaption" @click="','">','</div><div class="ffw-asn-group-container"><div class="ffw-wrapper" @input="','">'," "," ","</div></div>"]);return J=function(){return e},e}function $(){var e=o()(['<div class="ffw-asn-group-container"><div class="ffw-wrapper"></div></div>']);return $=function(){return e},e}var Q=Object.freeze({DetailedLinksContainer:'[data-container="detailedLinks"]',HiddenLinksContainer:'[data-container="hiddenLinks"]',DetailedLinksContent:'[data-content="detailedLinks"]',HiddenLinksContent:'[data-content="hiddenLinks"]',SelectBoxPlaceholderOption:"option:not([data-template])",SelectBoxOptionTemplate:"option[data-template]",ToggleWrapper:".ffw-wrapper",ShowMoreContainer:'[data-container="showMore"]',ShowLessContainer:'[data-container="showLess"]',GroupCaptionContainer:'[slot="groupCaption"]',RemoveFilterContainer:'[data-container="removeFilter"]',FilterSearchFieldContainer:'[slot="filterSearch"]'}),ee=L.a.communication.EventAggregator,te=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this))).collapsible=!0,e.opened=!1,e.forGroup=void 0,e.filterStyle=void 0,e.disableAutoExpand=!1,e.group=void 0,e.selectBox=!1,e.notSearchable=!1,e._detailedElements=[],e._hiddenElements=[],e._wrapper=void 0,e._initialized=!1,e._rawOuterHtml="",e._asnGroupElementTemplate=void 0,e._groupCaptionTemplate=void 0,e._selectBoxOptionTemplate=void 0,e._selectBoxPlaceholderOption=void 0,e._detailedLinksContainer=void 0,e._hiddenLinksContainer=void 0,e._showMoreContainer=void 0,e._showLessContainer=void 0,e._removeFilterContainer=void 0,e._filterSearchContainer=void 0,e._filterSearchField=void 0,e._filterSearchInput=void 0,e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this;if(!this._initialized)return Object(b.b)($());this._filterSearchInput=this.querySelector("".concat(Q.FilterSearchFieldContainer," input"));var t,n,i,r={group:this.group};return Object(b.b)(J(),(function(){return e.toggle(!0)}),Object(I.e)(this._groupCaptionTemplate,r),(function(t){return function(e,t){var n=t.composedPath(),i=n[0];if("INPUT"===i.nodeName&&n.slice(1).some((function(e){return e.getAttribute&&"filterSearch"===e.getAttribute("slot")}))){e.requestUpdate();var r=new RegExp(L.b.util.escapeRegex(i.value)||"$a","gi"),a=[].concat(S()(e.group.selectedElements),S()(e.group.elements)).reduce((function(e,t){r.lastIndex=0;var n=r.exec(t.name);if(null===n)return e;var i=t.name.replace(r,(function(e){return'<span class="ffw-query">'.concat(e,"</span>")}));return(0===n.index?e.headMatchedElements:e.otherMatchedElements).push(w()({},t,{__HIGHLIGHTED_NAME__:i})),e}),{headMatchedElements:[],otherMatchedElements:[]}),o=a.headMatchedElements,s=a.otherMatchedElements;ie(e._filterSearchContainer,e._asnGroupElementTemplate,e.group,[].concat(S()(o),S()(s)))}}(e,t)}),oe(function(e){if(!e.group)return!1;var t=e.group.elements.length+e.group.selectedElements.length;return!e.notSearchable&&t>=e.parentNode.searchableFrom}(this),Object(I.e)(this._filterSearchField,r)),O(this._filterSearchInput&&0<this._filterSearchInput.value.length?this._filterSearchContainer:(n=(i=(t=this).group)&&i.elements.length>i.detailedLinks,Object(b.b)(Z(),t._detailedLinksContainer,oe(n,t._hiddenLinksContainer),oe(n&&!t.selectBox,t._showMoreContainer),oe(n&&!t.selectBox,t._showLessContainer)))),oe(function(e){if(!ae(t=e)||!t.selectedElements.some((function(e){return!0!==e.implicitSelection})))return!1;var t,n=L.b.getFixedFilters();return 0===n.length||e.selectedElements.filter((function(e){return!0!==e.implicitSelection})).some(Object(H.a)(n))}(this.group),this._removeFilterContainer))}}],[{key:"is",get:function(){return"ff-asn-group"}},{key:"properties",get:function(){return{collapsible:{type:I.c},opened:{type:Boolean,reflect:!0},forGroup:{type:String,attribute:"for-group",reflect:!0},filterStyle:{type:String,attribute:"filter-style",reflect:!0},disableAutoExpand:{type:Boolean,attribute:"disable-auto-expand",reflect:!0},group:{type:Object,attribute:!1},selectBox:{type:I.c,attribute:"select-box"},notSearchable:{type:Boolean,attribute:"not-searchable"}}}}]),g()(t,[{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._init()}},{key:"_init",value:function(){var e,t,n,i=this;this._initialized||(this._rawOuterHtml=this.outerHTML,this._asnGroupElementTemplate=this.querySelector(q.is)||document.createElement(q.is),this._groupCaptionTemplate=this.querySelector(Q.GroupCaptionContainer)||Object(T.a)('<div slot="groupCaption">{{group.name}}</div>'),this._detailedLinksContainer=this.querySelector(Q.DetailedLinksContainer)||Object(T.a)(Object(T.e)(G())),this._hiddenLinksContainer=this.querySelector(Q.HiddenLinksContainer),this._filterSearchField=(e=this.querySelector(Q.FilterSearchFieldContainer))?e.cloneNode(!0):Object(T.a)('<div slot="filterSearch"><input></div>'),function(e){if(null===e._filterSearchField.querySelector("input"))throw new Error("<input> not found in filterSearch template")}(this),this._filterSearchContainer=Object(T.a)('<div class="ffw-asn-group-searchable-results"></div>'),this._hiddenLinksContainer&&!this._hiddenLinksContainer.hasAttribute("opened")&&(this._hiddenLinksContainer.style.height="0",this._hiddenLinksContainer.style.overflow="hidden"),this._initShowMore(),this._initShowLess(),this._initHiddenLinksContainer(),this._removeFilterContainer=(t=function(){return i.group||{}},(n=this.querySelector(Q.RemoveFilterContainer)||Object(T.a)('<div data-container="removeFilter">Reset Filter</div>')).addEventListener("click",(function(){ee.addFFEvent({type:"filter",groupName:t().name,removeAll:!0})})),n),this.selectBox&&(this._selectBoxOptionTemplate=this._hiddenLinksContainer.querySelector(Q.SelectBoxOptionTemplate)||Object(T.a)("<option data-template>{{element.name}} {{group.unit}} ({{element.recordCount}})</option>")),this.style.display="none",this._initialized=!0)}},{key:"update",value:function(e){var n,i,r,a;e.has("group")&&(this._filterSearchInput&&(this._filterSearchInput.value="",this._filterSearchInput.dispatchEvent(new Event("input"))),this.group?(this._detailedElements=this.group.selectedElements.concat(this.group.elements.slice(0,this.group.detailedLinks)),this._hiddenElements=this.group.elements.slice(this.group.detailedLinks),this._detailedLinksContainer=(n=this._detailedLinksContainer,i=this.group,r=this._asnGroupElementTemplate,a=this._detailedElements,ie(n.querySelector(Q.DetailedLinksContent),r,i,a),n),this._hiddenLinksContainer&&(this.selectBox?this._hiddenLinksContainer=re(this._hiddenLinksContainer,this._selectBoxPlaceholderOption,this._selectBoxOptionTemplate,this.group,this._hiddenElements):this._hiddenLinksContainer.hasAttribute("opened")&&(this._hiddenLinksContainer=ne(this._hiddenLinksContainer,this._asnGroupElementTemplate,this.group,this._hiddenElements))),(this.opened||ae(this.group)&&!this.disableAutoExpand)&&this.show(!1),this.style.display="",this.style.opacity="1"):(this.style.display="none",this.style.opacity="0")),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"firstUpdated",value:function(e){var t=this;this._wrapper=this.querySelector(Q.ToggleWrapper),this.opened||e.has("group")&&ae(this.group)&&!this.disableAutoExpand?this.show(!1):this._hide(this._wrapper,!1,(function(){return t.opened=!1})),!1===this.opened&&!0!==this.disableAutoExpand&&ae(this.group)&&this.show(!1)}},{key:"updated",value:function(e){e.has("group")&&(this.forGroup&&"all"!==this.forGroup||(this.forGroup=Object(W.a)(this.group)),this.filterStyle||(this.filterStyle=this.group.filterStyle)),this.group?this.showSelf():this.hideSelf()}},{key:"show",value:function(e){this._wrapper&&(this._show(this._wrapper,e),this._wrapper.setAttribute("opened",""),this.opened=!0)}},{key:"hide",value:function(e){var t=this;this.opened&&this.collapsible&&this._wrapper&&(this._hide(this._wrapper,e,(function(){return t.opened=!1})),this._wrapper.removeAttribute("opened"))}},{key:"toggle",value:function(e){this.opened?this.hide(e):this.show(e)}},{key:"showDetailedLinksContainer",value:function(e){this._show(this._detailedLinksContainer,e)}},{key:"hideDetailedLinksContainer",value:function(e){this._hide(this._detailedLinksContainer,e)}},{key:"toggleDetailedLinksContainer",value:function(e){this._detailedLinksContainer.hasAttribute("opened")?this.hideDetailedLinksContainer(e):this.showDetailedLinksContainer(e)}},{key:"showHiddenLinksContainer",value:function(e){var t=this;this._hiddenLinksContainer=this.selectBox?re(this._hiddenLinksContainer,this._selectBoxPlaceholderOption,this._selectBoxOptionTemplate,this.group,this._hiddenElements):ne(this._hiddenLinksContainer,this._asnGroupElementTemplate,this.group,this._hiddenElements),this._showMoreContainer&&(this._showMoreContainer.style.display="none"),this._showLessContainer&&(this._showLessContainer.style.display=""),setTimeout((function(){t._showChecked(t._hiddenLinksContainer,e),t._hiddenLinksContainer.setAttribute("opened","")}))}},{key:"hideHiddenLinksContainer",value:function(e){this._showMoreContainer&&(this._showMoreContainer.style.display=""),this._showLessContainer&&(this._showLessContainer.style.display="none"),this._hideChecked(this._hiddenLinksContainer,e,(function(){}))}},{key:"toggleHiddenLinksContainer",value:function(e){this._hiddenLinksContainer.hasAttribute("opened")?this.hideHiddenLinksContainer(e):this.showHiddenLinksContainer(e)}},{key:"clone",value:function(){return Object(T.a)(this._rawOuterHtml)}},{key:"_initShowMore",value:function(){var e=this;this._showMoreContainer=this.querySelector(Q.ShowMoreContainer)||Object(T.a)('<div data-container="showMore">Show More</div>'),this.selectBox?this._hide(this._showMoreContainer):this._show(this._showMoreContainer),this._showMoreContainer.addEventListener("click",(function(){return e.showHiddenLinksContainer(!0)}))}},{key:"_initShowLess",value:function(){var e=this;this.selectBox&&this._hideChecked(this._showMoreContainer),this._showLessContainer=this.querySelector(Q.ShowLessContainer)||Object(T.a)('<div data-container="showLess">Show Less</div>'),this._showLessContainer.style.display="none",this._showLessContainer.addEventListener("click",(function(){return e.hideHiddenLinksContainer(!0)}))}},{key:"_initHiddenLinksContainer",value:function(){if(this.selectBox)this._hiddenLinksContainer?"SELECT"!==this._hiddenLinksContainer.tagName?(this.warn("Provided template for select box is not a select element. Using default template."),this._hiddenLinksContainer=n()):0===this._hiddenLinksContainer.querySelectorAll(Q.SelectBoxPlaceholderOption).length&&this._hiddenLinksContainer.insertBefore(Object(T.a)("<option disabled hidden selected>More...</option>"),this._hiddenLinksContainer.firstElementChild):this._hiddenLinksContainer=n(),this._selectBoxPlaceholderOption=this._hiddenLinksContainer.querySelector(Q.SelectBoxPlaceholderOption),this._hiddenLinksContainer.addEventListener("change",(t=this,function(){var e=t._hiddenLinksContainer.options[t._hiddenLinksContainer.selectedIndex].data;e&&ee.addFFEvent({type:"filter",groupName:t.group.name,filterName:e.__ORIG_NAME__||e.name,clusterLevel:e.clusterLevel})})),this._show(this._hiddenLinksContainer);else{if(!this._hiddenLinksContainer){var e=Object(T.e)(X());this._hiddenLinksContainer=Object(T.a)(e)}this._hiddenLinksContainer.hasAttribute("opened")?this._show(this._hiddenLinksContainer):this._hide(this._hiddenLinksContainer)}var t;function n(){return Object(T.a)('<select data-container="hiddenLinks">'.concat("<option disabled hidden selected>More...</option>","</select>"))}}}]),t}(Object(_.a)([Object(D.ElementLog)(),Object(z.CollapseElement)()],I.a));function ne(e,t,n,i){return ie(e.querySelector(Q.HiddenLinksContent),t,n,i),e}function ie(e,t,n,i){Object(P.i)(Object(b.b)(Y(),i.map((function(e){return t.clone(n,e)}))),e)}function re(e,t,n,i,r){var a=r.map((function(e){return Object(I.e)(n,{group:i,element:e})}));return Object(P.i)(Object(b.b)(K(),[Object(I.e)(t)].concat(S()(a))),e),e.selectedIndex=0,e.querySelectorAll(Q.SelectBoxOptionTemplate).forEach((function(e,t){var n=r[t];e.value=n.name,e.data=n})),e}function ae(e){return e&&0<e.selectedElements.length}function oe(e,t){return e?t:void 0}window.customElements.define(te.is,te);var se=n(52),ce=n(11);function ue(){var e=o()(["",""]);return ue=function(){return e},e}function le(){var e=o()(["",""]);return le=function(){return e},e}n.d(t,"Asn",(function(){return fe}));var de=Object.freeze({vertical:"vertical",horizontal:"horizontal"}),fe=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this))).align=de.vertical,e.asnGroups=[],e.subscribe=!0,e.topic=void 0,e._templates=void 0,e._searchableFrom=1/0,e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this;return Object(b.b)(ue(),(this.asnGroups||[]).map((function(t){var n=e._getGroupTemplate(t);return n.group=t,Object(b.b)(le(),n)})))}}],[{key:"is",get:function(){return"ff-asn"}},{key:"properties",get:function(){return{align:{type:String,reflect:!0},asnGroups:{type:Array,attribute:!1},searchableFrom:{type:Number,attribute:"searchable-from"},subscribe:{type:I.c},topic:{type:String}}}}]),g()(t,[{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._initTemplates()}},{key:"update",value:function(e){var n=this;e.has("topic")&&"string"!=typeof this.topic&&void 0!==this.topic&&(this.error('Attribute "topic" must be either undefined or a string but was: '.concat(r()(this.topic),". Subscription cancelled.")),this.subscribe=!1,this.topic=void 0),this.updateComplete.then((function(){var e=n.querySelectorAll("".concat(te.is,",").concat(se.a.is));Promise.all(Array.from(e).map((function(e){return e.updateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))})),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"_getGroupTemplate",value:function(e){var t=Object(W.a)(e),n=this._templates[t];if(!n){var i=e.filterStyle?e.filterStyle.toUpperCase():"";this._templates[i]&&(n=this._templates[i].clone(),this._templates[t]=n)}return n||(n=this._templates.all.clone(),this._templates[t]=n),n}},{key:"_initTemplates",value:function(){var e=this;if(!this._templates)try{if(this._templates={},this.querySelectorAll("".concat(te.is,",").concat(se.a.is)).forEach((function(t){try{var n=t.getAttribute("for-group"),i=t.getAttribute("filter-style");n&&"all"!==n.toLowerCase()?e._templates[n]=t:i?e._templates[i]=t:"FF-ASN-GROUP-SLIDER"===t.tagName?e._templates.SLIDER=t:e._templates.all||(e._templates.all=t)}catch(t){e.error(t)}})),!this._templates.all){var t=document.createElement(te.is);t.setAttribute("opened",void 0),t._init(),this._templates.all=t}if(!this._templates.SLIDER){var n=document.createElement(se.a.is);n.setAttribute("filter-style","SLIDER"),n.setAttribute("opened",void 0),n.init(),this._templates.SLIDER=n}}catch(t){this.error(t)}}},{key:"_subscriptionCallback",value:function(e){this.asnGroups=e}},{key:"searchableFrom",set:function(e){"number"!=typeof e||isNaN(e)||e<1?this.warn("searchableFrom was expected to be a valid positive number, but was [".concat(e,"] instead")):this._searchableFrom=e},get:function(){return this._searchableFrom}}]),t}(Object(_.a)([Object(D.ElementLog)(),Object(ce.a)(ce.b.asn)],I.a));window.customElements.define(fe.is,fe)},function(e,t,n){"use strict";n.r(t);var i=n(4),r=n.n(i),a=n(6),o=n.n(a),s=n(1),c=n.n(s),u=n(3),l=n.n(u),d=n(2),f=n.n(d),h=n(7),p=n.n(h),m=n(0),g=n(5),v=n(14),y=function(e){function t(){return r()(this,t),o()(this,c()(t).apply(this,arguments))}return p()(t,e),f()(t,[{key:"render",value:function(){return Object(g.e)(this._template,this.answer)}},{key:"connectedCallback",value:function(){var e;l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this._template=Object(g.d)(this)?"<button><span>{{text}}</span></button>":this.innerHTML,this.addEventListener("click",(e=this,function(t){m.a.communication.EventAggregator.addFFEvent({type:"advisor",answer:e.answer})}))}},{key:"updated",value:function(e){e.has("answer")&&(this.answer?this.showSelf():this.hideSelf())}}],[{key:"is",get:function(){return"ff-campaign-advisor-answer"}},{key:"properties",get:function(){return{answer:{type:Object,attribute:!1}}}}]),t}(g.a);window.customElements.define(y.is,y);var b=n(28),_=function(e){function t(){return r()(this,t),o()(this,c()(t).apply(this,arguments))}return p()(t,e),f()(t,[{key:"connectedCallback",value:function(){l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this._renderQuestion=function(e){var t=Object(v.f)(e.querySelector(y.is)||document.createElement(y.is),e),n=e.querySelector("[data-question]");n||(n=Object(v.a)("<div>{{text}}</div>"),e.insertBefore(n,e.firstChild));var i=n.innerHTML;return function(r){n.innerHTML=Object(b.a)(i,r),t(e.querySelectorAll(y.is),r.answers,(function(e,t){e.answer=t}))}}(this)}},{key:"update",value:function(e){e.has("question")&&(this.question?(this.showSelf(),this._renderQuestion(this.question)):this.hideSelf()),l()(c()(t.prototype),"update",this).call(this,e)}}],[{key:"is",get:function(){return"ff-campaign-advisor-question"}},{key:"properties",get:function(){return{question:{type:Object,attribute:!1}}}}]),t}(g.a);window.customElements.define(_.is,_),n.d(t,"CampaignAdvisor",(function(){return k}));var k=function(e){function t(){var e;return r()(this,t),(e=o()(this,c()(t).call(this))).name="",e.not=void 0,e.subscriptionKey=void 0,e._renderCampaign=void 0,e}return p()(t,e),f()(t,null,[{key:"is",get:function(){return"ff-campaign-advisor"}},{key:"properties",get:function(){return{name:{type:String,reflect:!0},not:{type:String},campaignData:{type:Object,attribute:!1}}}}]),f()(t,[{key:"connectedCallback",value:function(){var e,n;l()(c()(t.prototype),"connectedCallback",this).call(this),this.hideSelf(),this._renderCampaign=(e=this,n=Object(v.f)(e.querySelector(_.is)||document.createElement(_.is),e),function(t){return n(e.querySelectorAll(_.is),t.activeQuestions,(function(e,t){e.question=t}))})}},{key:"update",value:function(e){var n,i=this;e.has("name")&&function(e,t,n){e.subscriptionKey&&m.a.communication.ResultDispatcher.unsubscribe(w(n),e.subscriptionKey),e.subscriptionKey=m.a.communication.ResultDispatcher.subscribe(w(t),(function(t){e.campaignData=t}))}(this,this.name,e.get("name")),e.has("campaignData")&&(!this.campaignData||0===this.campaignData.activeQuestions.length||this.not&&this.not.split(",").some((function(e){return e.trim()===i.campaignData.name}))?this.hideSelf():(this.showSelf(),this._renderCampaign(this.campaignData),(n=this,Promise.all(Array.from(n.querySelectorAll(_.is)).map((function(e){return e.updateComplete}))).then((function(){return Promise.all(Array.from(n.querySelectorAll(y.is)).map((function(e){return e.updateComplete})))}))).then((function(){return i.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))})))),l()(c()(t.prototype),"update",this).call(this,e)}},{key:"disconnectedCallback",value:function(){l()(c()(t.prototype),"disconnectedCallback",this).call(this),m.a.communication.ResultDispatcher.unsubscribe(w(this.name),this.subscriptionKey)}}]),t}(g.a);function w(e){return e&&e.trim()?["campaign:advisor:".concat(e)]:["campaign:advisor"]}window.customElements.define(k.is,k)},function(e,t,n){"use strict";n.r(t);var i,r,a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(26),p=n.n(h),m=(n(73),n(0)),g=n(54);n.d(t,"factfinder",(function(){return m.a})),i=m.a,r=setTimeout((function(){i.common.Logger.log("Warning: The WebComponentsReady event didn't fire within 10 seconds, which indicates a very slow page load.")}),1e4),Object(g.a)().then((function(){clearTimeout(r),i.communication.ResultDispatcher.startDispatching()})),m.a.elements={ElementLogBehavior:n(13).ElementLog(),CollapseElementBehavior:n(29).CollapseElement(),TrackingBehavior:n(47).Tracking()},WebComponents.waitFor((function(){return new Promise((function(e){n(48),n(67),n(83),n(39),n(17),n(111),n(84),n(85),n(86),n(87),n(88),n(89),n(43),n(90),n(91),n(92),n(110),n(93),n(94),n(113),n(95),n(96),n(97),n(98),window.customElements.define("ff-onfocus-suggest",function(e){function t(){var e;return o()(this,t),e=c()(this,l()(t).call(this)),m.a.common.Logger.error("ff-onfocus-suggest: This component is currently not available. It will be reimplemented in a future version."),e}return f()(t,e),t}(p()(HTMLElement))),n(114),n(99),n(115),n(100),n(116),n(101),n(102),n(103),n(104),n(117),n(105),n(106),n(118),n(107),n(50),n(60),n(108),n(109),n(119),e()}))}))},function(e,t,n){"use strict";n.r(t);var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(5),b=n(0),_=n(30);function k(){var e=r()(['<ff-breadcrumb-trail-item .breadCrumbTrailItem="','" .templates="','"></ff-breadcrumb-trail-item>']);return k=function(){return e},e}var w={dataTemplate:"{{text}}",attributes:{}},C=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).templates={},e.addEventListener("click",(function(){b.a.communication.EventAggregator.addFFEvent({type:"bct",value:e.breadCrumbTrailItem.value})})),e}return g()(t,e),p()(t,[{key:"render",value:function(){return Object(y.e)(this.template.dataTemplate,Object(_.a)(this.breadCrumbTrailItem,"text"))}},{key:"template",get:function(){return this.templates[this.type]||this.templates[S.default]||w}}],[{key:"is",get:function(){return"ff-breadcrumb-trail-item"}},{key:"properties",get:function(){return{type:{type:String,reflect:!0},breadCrumbTrailItem:{type:Object,attribute:"bread-crumb-trail-item"}}}}]),p()(t,[{key:"firstUpdated",value:function(e){var n=this;f()(l()(t.prototype),"firstUpdated",this).call(this,e),Object.keys(this.template.attributes).forEach((function(e){return n.setAttribute(e,n.template.attributes[e])}))}},{key:"update",value:function(e){e.has("breadCrumbTrailItem")&&this.breadCrumbTrailItem&&(this.type=S.hasOwnProperty(this.breadCrumbTrailItem.type)?this.breadCrumbTrailItem.type:void 0),f()(l()(t.prototype),"update",this).call(this,e)}}]),t}(y.a);window.customElements.define(C.is,C);var S=Object.freeze({search:"search",filter:"filter",all:"all",advisor:"advisor",default:"search"}),P=n(9),E=n(13),x=n(11);function O(){var e=r()(["",""]);return O=function(){return e},e}n.d(t,"BreadcrumbTrail",(function(){return L}));var L=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).templates={},e.separatorTemplate=void 0,e.breadCrumbTrailItems=[],e.showAsteriskQuery=!1,e}return g()(t,e),p()(t,[{key:"render",value:function(){for(var e,t,n=[],i=(this.breadCrumbTrailItems||[]).length,r=0;r<i;r++){var a=this.breadCrumbTrailItems[r];if(a.type){if(("*"!==a.value||a.type!==S.search&&S.hasOwnProperty(a.type)||this.showAsteriskQuery)&&(n.push((e=a,t=this.templates,Object(v.b)(k(),e,t))),r<i-1)){var o=this.separatorTemplate.cloneNode(!0);n.push(o)}}else this.warn("No type for current breadcrumb item: '".concat(a.text,"'."))}return Object(v.b)(O(),n)}}],[{key:"is",get:function(){return"ff-breadcrumb-trail"}},{key:"properties",get:function(){return{breadCrumbTrailItems:{type:Array,attribute:"bread-crumb-trail-items"},showAsteriskQuery:{type:y.c,attribute:"show-asterisk-query"}}}}]),p()(t,[{key:"connectedCallback",value:function(){f()(l()(t.prototype),"connectedCallback",this).call(this),this.templates=function(e){var t,n={};for(var i in S){var r=S[i],a=e.querySelector("".concat(C.is,"[type='").concat(r,"']"));n[r]||(n[r]=!(t=a)||Object(y.d)(t)?w:{dataTemplate:t.innerHTML,attributes:Array.prototype.reduce.call(t.attributes,(function(e,t){var n=t.name,i=t.value;return"unresolved"!==n&&(e[n]=i),e}),{})})}return n}(this),this.separatorTemplate=this.querySelector("[data-separator]")||document.createTextNode(" > ")}},{key:"update",value:function(e){var n=this;e.has("breadCrumbTrailItems")&&(this.breadCrumbTrailItems&&0!==this.breadCrumbTrailItems.length?this.showSelf():this.hideSelf(),this.updateComplete.then((function(){Promise.all(Array.from(n.querySelectorAll(C.is)).map((function(e){return e.updateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}))),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"_subscriptionCallback",value:function(e){this.breadCrumbTrailItems=e}}]),t}(Object(P.a)([Object(E.ElementLog)(),Object(x.a)(x.b.bct)],y.a));window.customElements.define(L.is,L)},function(e,t,n){"use strict";n.r(t);var i=n(21),r=n.n(i),a=n(8),o=n.n(a),s=n(4),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(5),_=n(10),k=n(9),w=n(20),C=n.n(w),S=n(0),P=Object.freeze({Selected:"ffw-selected",ShowSelected:"ffw-showSelected"}),E=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this))).sortItem={},e._template=Object(b.d)(C()(e))?"{{description}}":e.innerHTML,e.addEventListener("click",function(){this._isClickable&&S.a.communication.EventAggregator.addFFEvent({type:"sort",name:this.sortItem.name,order:this.sortItem.order})}.bind(C()(e))),e}return y()(t,e),g()(t,[{key:"render",value:function(){return Object(b.e)(this._template,this.sortItem)}}],[{key:"is",get:function(){return"ff-sortbox-item"}},{key:"properties",get:function(){return{sortItem:{type:Object},key:{type:String}}}}]),g()(t,[{key:"update",value:function(e){e.has("sortItem")&&this._sortItemChanged(this.sortItem),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"clone",value:function(){var e=this.cloneNode(!0);return e._template=this._template,e}},{key:"_sortItemChanged",value:function(e,t){this.style.display=e?(this._isClickable=!e.selected,e.selected?this.classList.add(P.Selected):this.classList.remove(P.Selected),e.showSelected?this.classList.add(P.ShowSelected):this.classList.remove(P.ShowSelected),"block"):"none"}}]),t}(b.a);window.customElements.define(E.is,E);var x=n(29),O=n(11);function L(){var e=o()(['<div class="','"></div><div class="'," ",'"></div>']);return L=function(){return e},e}n.d(t,"SortBox",(function(){return j}));var I=Object.freeze({DefaultSortItemCssSelector:"".concat(E.is,'[key="default.template"]')}),T=Object.freeze({SelectedContainer:"ffw-selected-container",DropdownContainer:"ffw-dropdown-container",DropdownClosed:"ffw-closed"}),j=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this))).items=[],e.opened=!1,e.showSelected=!1,e.showSelectedFirst=!1,e.collapseOnblur=!1,e._defaultSortItemTemplate=void 0,e._initialized=!1,e._sortBoxItemTemplateInfos={},e}return y()(t,e),g()(t,[{key:"render",value:function(){return Object(_.b)(L(),T.SelectedContainer,T.DropdownContainer,this.opened?"":T.DropdownClosed)}}],[{key:"is",get:function(){return"ff-sortbox"}},{key:"properties",get:function(){return{items:{attribute:!1,type:Array},opened:{type:Boolean,reflect:!0},showSelected:{attribute:"show-selected",type:b.c,reflect:!0},showSelectedFirst:{attribute:"show-selected-first",type:b.c,reflect:!0},collapseOnblur:{attribute:"collapse-onblur",type:b.c,reflect:!0}}}}]),g()(t,[{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this),this._init()}},{key:"_init",value:function(){if(!this._initialized){this.tabindex=this.getAttribute("tabindex"),this.tabindex||this.setAttribute("tabindex","1");var e,t,n,i=this.querySelector(I.DefaultSortItemCssSelector);i?(this._defaultSortItemTemplate=i,this.removeChild(i)):this._defaultSortItemTemplate=document.createElement(E.is),this._sortBoxItemTemplateInfos=(e=this._sortBoxItemTemplateInfos,t=this.querySelectorAll(E.is),n="null.desc",t.forEach((function(t){var i=t.getAttribute("key");!i||i===n&&e.hasOwnProperty(n)||(e["ff.relevance"===i?n:i]=M(t))})),e),this._initialized=!0}}},{key:"firstUpdated",value:function(e){var n,i,r;p()(f()(t.prototype),"firstUpdated",this).call(this,e),this.hideSelf(),this.addEventListener("click",this.toggle.bind(this)),this.addEventListener("blur",(n=this,function(){n.collapseOnblur&&setTimeout((function(){return n.hide()}),150)})),r=R(i=this),i.opened?(i.opened=!0,i._show(r,!1)):i._hide(r,!1,(function(){i.opened=!1}))}},{key:"update",value:function(e){(e.has("items")||e.has("showSelected"))&&function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[];if(e.hide(),!t.length)return e.hideSelf();var n=e.showSelected?function(e,t){for(var n=e.slice(),i=0;i<n.length;i++){var a=n[i];if(a.selected){var o=r()({},a,{selected:!1,showSelected:!0}),s=t?0:i+1;n.splice(s,0,o);break}}return n}(t,e.showSelectedFirst):t;e.querySelectorAll(E.is).forEach((function(e){return e.parentNode.removeChild(e)})),n.forEach((function(t){var n,i="".concat((n=t).name,".").concat(n.order),r=function(e,t,n,i){var r,a=null!=(r=e[n])?r:function(){var i=t.clone();return i.setAttribute("key",n),e[n]=M(i),e[n]}();if(i&&!a.selected){var o=a.dropdown.clone();o.setAttribute("key",n),a.selected=o}return i?a.selected:a.dropdown}(e._sortBoxItemTemplateInfos,e._defaultSortItemTemplate,i,t.selected);((r.sortItem=t).selected?e.querySelector(".".concat(T.SelectedContainer)):R(e)).appendChild(r)})),e.showSelf(),e.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}(this,this.items),p()(f()(t.prototype),"update",this).call(this,e)}},{key:"toggle",value:function(e){!0===e?this.hide():!1===e?this.show():this.opened?this.hide():this.show()}},{key:"show",value:function(){if(!this.opened){this.opened=!0;var e=R(this);this._show(e,!0)}}},{key:"hide",value:function(){var e=this;if(this.opened){var t=R(this);t.__transitionActive__=!1,this._hide(t,!0,(function(){e.opened=!1}))}}},{key:"_subscriptionCallback",value:function(e){this.items=e}}]),t}(Object(k.a)([Object(x.CollapseElement)(),Object(O.a)(O.b.sort)],b.a));function R(e){return e.querySelector(".".concat(T.DropdownContainer))}function M(e,t){return{dropdown:e,selected:t}}window.customElements.define(j.is,j)},function(e,t,n){"use strict";n.r(t);var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(20),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(10),_=n(0),k=n(5);function w(){var e=r()(['<a href="','">',"</a>"]);return w=function(){return e},e}var C=Object.freeze({NavSearch:"nav-search"}),S=function(e){function t(){var e,n;return o()(this,t),(e=c()(this,f()(t).call(this))).element={},e.addEventListener("click",(n=l()(e),function(e){e.preventDefault();var t=n.element;t.__TARGET_URL__&&t.__TARGET_URL__.isCustomized?window.location.href=t.__TARGET_URL__.url:n.dispatchEvent(new CustomEvent(C.NavSearch,{bubbles:!0,composed:!0,detail:t}))})),e}return y()(t,e),g()(t,[{key:"render",value:function(){return Object(b.b)(w(),(this.element.__TARGET_URL__||{}).url,_.b.Encoding.decodeURIComponent(this.element.name))}}],[{key:"is",get:function(){return"ff-nav-element"}},{key:"properties",get:function(){return{element:{attribute:!1,type:Object}}}}]),t}(k.a);window.customElements.define(S.is,S);var P=n(9),E=n(11),x=n(15);function O(){var e=r()(['<ff-nav-element class="ffw-nav-link" .element="','"></ff-nav-element>']);return O=function(){return e},e}function L(){var e=r()(['<div class="ffw-nav-group"><ff-nav-element class="ffw-nav-group-caption" .element="','"></ff-nav-element>'," ","</div>"]);return L=function(){return e},e}function I(){var e=r()(['<div class="ffw-body"><div class="ffw-body-top">','</div><div class="ffw-body-middle"><div class="ffw-body-left">','</div><div class="ffw-body-center">','</div><div class="ffw-body-right">','</div></div><div class="ffw-body-bottom">',"</div></div>"]);return I=function(){return e},e}function T(){var e=r()(['<ff-nav-element .element="','" class="ffw-nav-item" @mouseenter="','"></ff-nav-element><div class="ffw-nav-item-separator"></div>']);return T=function(){return e},e}function j(){var e=r()(['<div class="ffw-header-nav" @mouseenter="','" @mouseleave="','"><div class="ffw-header"><div class="ffw-nav-item-separator"></div>',"</div>","</div>"]);return j=function(){return e},e}n.d(t,"HeaderNavigation",(function(){return M}));var R=_.a.communication.EventAggregator,M=function(e){function t(){var e,n;return o()(this,t),(e=c()(this,f()(t).call(this))).elements=[],e.groupCount=10,e.groupSize=4,e.hideEmptyGroups=!0,e.fetchInitial=!0,e.mouseenterDelay=600,e.mouseleaveDelay=200,e._key=_.a.common.randomString(10),e._slottedElements={},e._selectedElement={},e._showBody=!1,e._shouldShowBody=!1,e.addEventListener(C.NavSearch,(n=l()(e),function(e){var t=e.detail;n._showBody=!1;var i=t.searchParams.split("?")[1],r=_.a.common.decodeDict(_.a.common.parameterStringToDict(i));r.type="navigation-search",setTimeout((function(){Object(x.a)()&&(_.a.communication.globalCommunicationParameter.categoryPage="filter=".concat(_.b.Encoding.ngCategoryPageEncode(r.filter[0]))),R.addFFEvent(r)}),0)})),e}return y()(t,e),g()(t,[{key:"render",value:function(){var e,t,n,i=this;return Object(b.b)(j(),A,D,this.elements.map((function(e){return Object(b.b)(T(),e,N)})),this._showBody?Object(b.b)(I(),this._selectedElement&&this._slottedElements["container-top-".concat(this._selectedElement.name)],this._selectedElement&&this._slottedElements["container-left-".concat(this._selectedElement.name)],(e=this.hideEmptyGroups,t=this.groupCount,n=this._selectedElement.groups,n?!0===e?n.filter((function(e){var t=0===e.links.length;return t&&_.a.common.Logger.log("[".concat(M.is,"]: The group '").concat(e.name,"' has no 3rd layer children and will not be shown. If you wish to display it nevertheless, set 'hide-empty-groups=\"false\"'")),!t})).slice(0,t):n.slice(0,t):[]).map((function(e){return Object(b.b)(L(),e,(t=i,n=e.links,n.slice(0,t.groupSize)).map((function(e){return Object(b.b)(O(),e)})),i._slottedElements[e.name]);var t,n})),this._selectedElement&&this._slottedElements["container-right-".concat(this._selectedElement.name)],this._selectedElement&&this._slottedElements["container-bottom-".concat(this._selectedElement.name)]):void 0)}}],[{key:"is",get:function(){return"ff-header-navigation"}},{key:"properties",get:function(){return{elements:{attribute:!1,type:Array},groupCount:{attribute:"group-count",type:Number},groupSize:{attribute:"group-size",type:Number},hideEmptyGroups:{attribute:"hide-empty-groups",type:k.c},fetchInitial:{attribute:"fetch-initial",type:k.c},mouseenterDelay:{attribute:"mouseenter-delay",type:Number},mouseleaveDelay:{attribute:"mouseleave-delay",type:Number},_selectedElement:{attribute:!1,type:Object},_showBody:{attribute:!1,type:Boolean}}}}]),g()(t,[{key:"connectedCallback",value:function(){var e=this;p()(f()(t.prototype),"connectedCallback",this).call(this),this.querySelectorAll("[slot]").forEach((function(t){return e._slottedElements[t.getAttribute("slot")]=t})),this.fetchInitial&&this.fetch()}},{key:"updated",value:function(e){var n=this;p()(f()(t.prototype),"updated",this).call(this,e),e.has("elements")&&setTimeout((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}),0)}},{key:"fetch",value:function(){var e={type:E.b.navigation,firstFetch:3,fetchSize:1,maxFetch:3,fetchTime:10,key:this._key};setTimeout((function(){return R.addFFEvent(e)}),0)}},{key:"_subscriptionCallback",value:function(e){var t,n;t=this,(n=e[0]).forEach((function(e){var n=_.a.common.getMetaElementKey(e),i=R.navigationResult[t._key][n];e.groups=i.subelements,e.groups.forEach((function(e){var n=_.a.common.getMetaElementKey(e),i=R.navigationResult[t._key][n];e.links=i.subelements}))})),t.elements=n}}]),t}(Object(P.a)([Object(E.a)(E.b.navigation)],k.a));function A(e){var t=this;e.target.classList.contains("ffw-header-nav")&&(this._shouldShowBody=!0,this._showBody||setTimeout((function(){!0===t._shouldShowBody&&(t._showBody=!0)}),this.mouseenterDelay))}function N(e){this._selectedElement=e.currentTarget.element}function D(e){var t=this;e.target.classList.contains("ffw-header-nav")&&(this._shouldShowBody=!1,this._showBody&&setTimeout((function(){!1===t._shouldShowBody&&(t._showBody=!1)}),this.mouseleaveDelay))}window.customElements.define(M.is,M)},function(e,t,n){"use strict";n.r(t);var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(23),b=n(0),_=n(5),k=n(30),w=n(15);function C(){var e=r()(['<ff-navigation-item .element="','" .direction="','" .type="','" .flyout="','" ._templates="','" ._key="','" ?selected="','"></ff-navigation-item>']);return C=function(){return e},e}function S(){var e=r()(['<div class="ffw-item-caption" @mouseover="','">','</div><div class="ffw-item-container">',"</div>"]);return S=function(){return e},e}var P=Object.freeze({down:"down",right:"right",left:"left",default:"right"}),E={dataTemplate:"<div>{{name}}</div>",attributes:{direction:P.default}},x=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).clusterLevel=0,e.type="default",e.direction=P.default,e.hasSubelements=!1,e.flyout="true",e.selected=!1,e.element=void 0,e._templates={default:E},e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this,t=this.element&&this.element.__SUB_ELEMENTS__;return Object(v.b)(S(),this.onHovered,Object(_.e)(this._template.dataTemplate,Object(k.a)(this.element,"name")),Object(y.a)(t||[],(function(t){return L(function(e,t){var n="default";e._templates&&e._templates["layer".concat(t.clusterLevel)]&&(n="layer".concat(t.clusterLevel));var i=O(t),r=e._templates&&e._templates.parent;i&&r&&(n="parent");var a=e._templates&&e._templates[n]&&e._templates[n].attributes.direction||P.default;return{element:t,type:n,templates:e._templates,flyout:e.flyout,direction:a,_key:e._key}}(e,t))})))}},{key:"childrenUpdateComplete",get:function(){var e=this;return new Promise((function(n){e.updateComplete.then((function(){var i=e.querySelectorAll("".concat(t.is,'[cluster-level="').concat(e.clusterLevel+1,'"]'));0===i.length?n():Promise.all(Array.from(i).map((function(e){return e.childrenUpdateComplete}))).then(n)}))}))}},{key:"_template",get:function(){return this._templates&&this._templates[this.type||"default"]||E}}],[{key:"is",get:function(){return"ff-navigation-item"}},{key:"properties",get:function(){return{element:{type:Object,attribute:!1},direction:{type:String,reflect:!0},clusterLevel:{type:Number,reflect:!0,attribute:"cluster-level"},type:{type:String},hasSubelements:{type:Boolean,attribute:"has-subelements",reflect:!0},alwaysSearchOnclick:{type:Boolean,attribute:"always-search-onclick"},flyout:{type:String,reflect:!0},selected:{type:Boolean,reflect:!0}}}}]),p()(t,[{key:"update",value:function(e){e.has("element")&&this._elementChanged(),e.has("flyout")&&this._flyoutChanged(this.flyout),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"firstUpdated",value:function(e){var n=this;f()(l()(t.prototype),"firstUpdated",this).call(this,e),Object.keys(this._template.attributes).forEach((function(e){return n.setAttribute(e,n._template.attributes[e])})),this._initLink()}},{key:"updated",value:function(e){if(f()(l()(t.prototype),"updated",this).call(this,e),e.has("hasSubelements")){if(!this.link)return;this.hasSubelements?this.link.classList.remove("ffw-navigation-link"):this.link.classList.add("ffw-navigation-link")}}},{key:"connectedCallback",value:function(){var e=this;f()(l()(t.prototype),"connectedCallback",this).call(this),this.addEventListener("click",(function(t){return e._clicked(t)}))}},{key:"_initLink",value:function(){var e=this;this.link=this.querySelector("[data-search]"),this.link&&this.link.addEventListener("click",(function(t){e.search(),t.stopPropagation(),t.cancelBubble=!0}))}},{key:"_elementChanged",value:function(){this.element?(this.clusterLevel=this.element.clusterLevel,this._subelementsUpdated()):this.clusterLevel=void 0}},{key:"_subelementsUpdated",value:function(){this.hasSubelements=O(this.element)}},{key:"_clicked",value:function(e){"false"===this.flyout&&(this.hasSubelements?(this.selected=!this.selected,this.link&&(!0===this.selected?this.link.classList.add("ffw-navigation-link"):this.link.classList.remove("ffw-navigation-link"))):this.link&&this.link.classList.add("ffw-navigation-link")),"true"!==this.flyout&&this.hasSubelements&&!this.alwaysSearchOnclick||this.search(),e.stopPropagation(),e.cancelBubble=!0}},{key:"_flyoutChanged",value:function(e){"true"===e&&(this.selected=!1)}},{key:"search",value:function(){var e=this.element.searchParams,t=b.a.common.decodeDict(b.a.common.parameterStringToDict(e.split("?")[1]));t.type="navigation-search";var n=this.parentElement;n.classList.add("ffw-container-hidden"),Promise.resolve().then((function(){Object(w.a)()&&(b.a.communication.globalCommunicationParameter.categoryPage="filter=".concat(b.b.Encoding.ngCategoryPageEncode(t.filter[0]))),b.a.communication.EventAggregator.addFFEvent(t)})),setTimeout((function(){return n.classList.remove("ffw-container-hidden")}),1e3)}},{key:"onHovered",value:function(){if(0!==this.clusterLevel)if(this.direction===P.right){var e=window.innerWidth-this.getBoundingClientRect().left;this.direction=e<500?P.left:this.direction}else if(this.direction===P.left){var t=this.getBoundingClientRect().left,n=this.getBoundingClientRect().width;this.direction=t<=n?P.right:this.direction}}}]),t}(_.a);function O(e){return e.__SUB_ELEMENTS__&&0<e.__SUB_ELEMENTS__.length}function L(e){return Object(v.b)(C(),e.element,e.direction,e.type,e.flyout,e.templates,e._key,e.selected)}window.customElements.define(x.is,x);var I=n(9),T=n(13),j=n(11);function R(){var e=r()(['<input id="navigation-menu" type="checkbox"> <label for="navigation-menu" class="ffw-navigation-label"><div>','</div></label><div class="ffw-menu-items">',"</div>"]);return R=function(){return e},e}n.d(t,"Navigation",(function(){return A}));var M=Object.freeze({horizontal:"horizontal",vertical:"vertical"}),A=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this)))._templates={},e._navigationDataInitialized=!1,e._menuTemplate=void 0,e._key=b.a.common.randomString(10),e.navigationData=[],e.layout=M.horizontal,e.flyout="true",e.mobile="false",e.fetchInitial="true",e.firstFetch=2,e.fetchSize=1,e.maxFetch=10,e.fetchTime=100,e.subscribe=!0,e}return g()(t,e),p()(t,[{key:"render",value:function(){var e=this;return Object(v.b)(R(),this._menuTemplate,Object(y.a)(this.navigationData,(function(t){return L(e._getHeaderNavigationItem(t))})))}}],[{key:"is",get:function(){return"ff-navigation"}},{key:"properties",get:function(){return{navigationData:{type:Array,attribute:!1},layout:{type:String,reflect:!0},flyout:{type:String,reflect:!0},mobile:{type:String,reflect:!0},fetchInitial:{type:String,attribute:"fetch-initial"},firstFetch:{type:Number,attribute:"first-fetch"},fetchSize:{type:Number,attribute:"fetch-size"},maxFetch:{type:Number,attribute:"max-fetch"},fetchTime:{type:Number,attribute:"fetch-time"},subscribe:{type:_.c}}}}]),p()(t,[{key:"connectedCallback",value:function(){var e=this;if(f()(l()(t.prototype),"connectedCallback",this).call(this),0===Object.keys(this._templates).length&&this.querySelectorAll(x.is).forEach((function(t){var n;e._templates[t.type||"default"]||(e._templates[t.type||"default"]=!(n=t)||Object(_.d)(n)?E:{dataTemplate:n.innerHTML,attributes:Array.prototype.reduce.call(n.attributes,(function(e,t){var n=t.name,i=t.value;return"unresolved"!==n&&(e[n]=i),e}),{})})})),!this._menuTemplate){var n=this.querySelector('[slot="menu"]');n&&(this._menuTemplate=n.innerHTML)}"false"!==this.fetchInitial&&this.fetch()}},{key:"fetch",value:function(){var e={type:"navigation",firstFetch:this.firstFetch,fetchSize:this.fetchSize,maxFetch:this.maxFetch,fetchTime:this.fetchTime,key:this._key};setTimeout((function(){return b.a.communication.EventAggregator.addFFEvent(e)}))}},{key:"update",value:function(e){var n=this;e.has("layout")&&this.layout&&this.updateLayout(),e.has("flyout")&&this._flyoutChanged(this.flyout),e.has("mobile")&&this._mobileChanged(this.mobile),e.has("navigationData")&&this.updateComplete.then((function(){n.updateLayout(),Promise.all(Array.from(n.querySelectorAll("".concat(x.is,'[cluster-level="0"]'))).map((function(e){return e.childrenUpdateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))})),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"_subscriptionCallback",value:function(e){this._navigationDataInitialized||(e&&e[0]?this.navigationData=e[0]:this.warn("Navigation has no results."),this._navigationDataInitialized=!0),this.querySelectorAll(x.is).forEach((function(e){return e._subelementsUpdated()}))}},{key:"updateLayout",value:function(){var e=this;try{this.navigationData.forEach((function(t){t.direction=e.layout===M.horizontal?P.down:t.template.attributes.direction||P.default})),this.querySelectorAll("".concat(x.is,':not([cluster-level="0"])')).forEach((function(e){e.direction=e._template.attributes.direction||P.default}))}catch(e){this.warn("Failed to change layout",e)}}},{key:"_flyoutChanged",value:function(e){e&&this.querySelectorAll(x.is).forEach((function(t){return t.flyout=e}))}},{key:"_mobileChanged",value:function(e){"true"===e&&(this.flyout="false")}},{key:"_getHeaderNavigationItem",value:function(e){var t=(this._templates.header||this._templates.default).attributes.direction||P.default;return{type:"header",templates:this._templates,direction:this.layout===M.horizontal?P.down:t,element:e,flyout:this.flyout,_key:this._key}}}]),t}(Object(I.a)([Object(T.ElementLog)(),Object(j.a)(j.b.navigation)],_.a));window.customElements.define(A.is,A)},function(e,t,n){"use strict";n.r(t);var i=n(4),r=n.n(i),a=n(2),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(7),f=n.n(d),h=n(0),p=n(9),m=n(26),g=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"connectedCallback",value:function(){this.count||(this.count="1")}},{key:"recordId",get:function(){return this.getAttribute("record-id")},set:function(e){return this.setAttribute("record-id",e)}},{key:"count",get:function(){return this.getAttribute("count")},set:function(e){this.setAttribute("count",e)}},{key:"price",get:function(){return this.getAttribute("price")},set:function(e){this.setAttribute("price",e)}},{key:"channel",get:function(){return this.getAttribute("channel")},set:function(e){this.setAttribute("channel",e)}}],[{key:"is",get:function(){return"ff-checkout-tracking-item"}}]),t}(n.n(m)()(HTMLElement));window.customElements.define(g.is,g);var v=n(47),y=n(13),b=n(15);n.d(t,"CheckoutTracking",(function(){return _}));var _=function(e){function t(){return r()(this,t),c()(this,l()(t).apply(this,arguments))}return f()(t,e),o()(t,[{key:"connectedCallback",value:function(){!0!==this.disableAutoTracking&&this.trackCheckoutItems()}},{key:"trackCheckoutItems",value:function(){!function(e,t){if(0!==Object.keys(t).length)7.3<=parseFloat(h.a.communication.globalSearchParameter.version)||Object(b.a)()?Object.keys(t).map((function(e){return{type:"getRecords",recordId:t[e],channel:e,topics:function(){return["checkout-tracking"]}}})).forEach((function(t){e.dispatchEvent(new CustomEvent("before-get-records",{detail:t,bubbles:!0})),t.success=h.a.common.concatFunctions(t.success,(function(t){t.forEach((function(t){var n=e.querySelector("[record-id='".concat(t.id,"']"));n&&t.record&&(t.record[v.INTERNAL_TRACKING_PRICE_FIELD_NAME]=n.price),e._trackCheckoutClick(n,t)}))})),h.a.communication.EventAggregator.addFFEvent(t)})):e.warn("Your FACT-Finder version does not support <ff-checkout-tracking>. Requires version 7.3 or ng")}(this,Array.prototype.reduce.call(this.querySelectorAll(g.is),(function(e,t){var n=t.channel||h.a.communication.globalSearchParameter.channel;return e[n]=e[n]||[],e[n].push(t.recordId.trim()),e}),{}))}},{key:"disableAutoTracking",get:function(){return this.hasAttribute("disable-auto-tracking")}}],[{key:"is",get:function(){return"ff-checkout-tracking"}}]),t}(Object(p.a)([Object(y.ElementLog)(),Object(v.Tracking)()],HTMLElement));window.customElements.define(_.is,_)},function(e,t,n){"use strict";n.r(t);var i=n(18),r=n.n(i),a=n(8),o=n.n(a),s=n(4),c=n.n(s),u=n(6),l=n.n(u),d=n(1),f=n.n(d),h=n(3),p=n.n(h),m=n(2),g=n.n(m),v=n(7),y=n.n(v),b=n(12),_=n(20),k=n.n(_),w=n(17),C=n(9),S=n(13),P=n(0),E=n(5),x=n(28);function O(){var e=o()(['<ff-single-word-search-record ._template="','" .word="','"></ff-single-word-search-record>']);return O=function(){return e},e}var L="[data-search='singleWord']",I={dataTemplate:'<div>\n                        <h1 data-search="singleWord">{{word}} ({{recordCount}}) </h1>\n                        <ff-record-list subscribe="false">\n                            <ff-record>\n                                <img data-image={{record.ImageName}} data-image-onerror="../img_not_found.gif">\n                                <div class="title">{{record.Title}}</div>\n                            </ff-record>\n                        </ff-record-list>\n                    </div>',attributes:{}},T=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this)))._template=void 0,e._handleSingleSearchClick=j(k()(e)),e}return y()(t,e),g()(t,[{key:"render",value:function(){return Object(b.g)(this._template?[this._template.dataTemplate]:[])}}],[{key:"is",get:function(){return"ff-single-word-search-record"}},{key:"properties",get:function(){return{_template:{type:Object,attribute:!1},word:{type:Object,attribute:!1}}}}]),g()(t,[{key:"firstUpdated",value:function(e){var n=this;p()(f()(t.prototype),"firstUpdated",this).call(this,e),this._template&&Object.keys(this._template.attributes).forEach((function(e){return n.setAttribute(e,n._template.attributes[e])}))}},{key:"updated",value:function(e){p()(f()(t.prototype),"updated",this).call(this,e),e.has("word")&&R(this,this.word)}},{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this);var e=this.querySelector(w.RecordList.is);e?(e.setAttribute("subscribe","false"),e.innerHTML=e._origHTML):Object(E.d)(this)||this.warn("".concat(w.RecordList.is," not found. Data will not be displayed."))}}]),t}(Object(C.a)([Object(S.ElementLog)()],E.a)),j=function(e){return function(){try{var t=P.a.common.getParameterString(e.word.searchParams),n=P.a.common.parameterStringToDict(t);n.type="search",P.a.communication.EventAggregator.addFFEvent(n)}catch(t){e.error(t)}}},R=function(e,t){if(e.hideSelf(),t){var n=e.querySelector(L);n&&(n.innerHTML=Object(x.a)(n.innerHTML,t));var i=e.querySelector(w.RecordList.is);i?i.records=t.previewRecords:e.warn("".concat(w.RecordList.is," not found. Data will not be displayed.")),M(e,e._handleSingleSearchClick),A(e,e._handleSingleSearchClick),e.showSelf()}},M=function(e,t){e.querySelectorAll(L).forEach((function(e){return e.removeEventListener("click",t)}))},A=function(e,t){e.querySelectorAll(L).forEach((function(e){return e.addEventListener("click",t)}))};window.customElements.define(T.is,T);var N=n(23),D=n(11);function F(){var e=o()([""," "," ",""]);return F=function(){return e},e}function V(){var e=o()([""]);return V=function(){return e},e}n.d(t,"SingleWordSearch",(function(){return U}));var U=function(e){function t(){var e;return c()(this,t),(e=l()(this,f()(t).call(this)))._headerTemplate=void 0,e._singleWordRecordTemplate=void 0,e._footerTemplate=void 0,e.words=[],e}return y()(t,e),g()(t,[{key:"render",value:function(){var e=this;return!this.words||0<!this.words.length?Object(b.g)(V()):Object(b.g)(F(),Object(E.e)(this._headerTemplate),Object(N.a)(this.words,(function(e){return e.word}),(function(t){return n=e._singleWordRecordTemplate,i=t,Object(b.g)(O(),n,i);var n,i})),Object(E.e)(this._footerTemplate))}}],[{key:"is",get:function(){return"ff-single-word-search"}},{key:"properties",get:function(){return{words:{type:Array}}}}]),g()(t,[{key:"updated",value:function(e){var n=this;p()(f()(t.prototype),"updated",this).call(this,e),this.updateComplete.then((function(){Promise.all(Array.from(n.querySelectorAll(T.is)).map((function(e){return e.updateComplete}))).then((function(){n.dispatchEvent(new CustomEvent("dom-updated",{bubbles:!0,composed:!0}))}))}))}},{key:"connectedCallback",value:function(){p()(f()(t.prototype),"connectedCallback",this).call(this);var e,n=this.querySelector(T.is),i=q(n),r=B(n);this._headerTemplate=this._headerTemplate||z(i),this._singleWordRecordTemplate=this._singleWordRecordTemplate||(!(e=n)||Object(E.d)(e)?I:{dataTemplate:e.innerHTML,attributes:Array.prototype.reduce.call(e.attributes,(function(e,t){var n=t.name,i=t.value;return e[n]=i,e}),{})}),this._footerTemplate=this._footerTemplate||z(r)}},{key:"_subscriptionCallback",value:function(e){this.words=e||[]}}]),t}(Object(C.a)([Object(D.a)(D.b.singleWordSearch)],E.a)),q=function(e){if(!e)return[];var t=r()(e.parentNode.childNodes);return t.slice(0,t.indexOf(e))},B=function(e){if(!e)return[];var t=r()(e.parentNode.childNodes);return t.slice(t.indexOf(e)+1)},z=function(e){var t=document.createElement("div");return e.forEach((function(e){return t.appendChild(e)})),t.innerHTML};window.customElements.define(U.is,U)},function(e,t,n){"use strict";n.r(t);var i=n(8),r=n.n(i),a=n(4),o=n.n(a),s=n(6),c=n.n(s),u=n(1),l=n.n(u),d=n(3),f=n.n(d),h=n(2),p=n.n(h),m=n(7),g=n.n(m),v=n(10),y=n(42),b=n(12),_=new WeakMap,k=Object(b.f)((function(e){return function(t){if(!(t instanceof b.a)||t instanceof b.c||"style"!==t.committer.name||1<t.committer.parts.length)throw new Error("The `styleMap` directive must be used in the style attribute and must be the only part in the attribute.");var n=t.committer,i=n.element.style;_.has(t)||(i.cssText=n.strings.join(" "));var r=_.get(t);for(var a in r)a in e||(-1===a.indexOf("-")?i[a]=null:i.removeProperty(a));for(var o in e)-1===o.indexOf("-")?i[o]=e[o]:i.setProperty(o,e[o]);_.set(t,e)}})),w=n(0),C=n(5);function S(){var e=r()(['<div class="','"><svg style="','" class="ffw-spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="ffw-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div>']);return S=function(){return e},e}n.d(t,"LoadingSpinner",(function(){return P}));var P=function(e){function t(){var e;return o()(this,t),(e=c()(this,l()(t).call(this))).isActive=!1,e.strokeColor="#4285F4",e.manual=!1,e._subscriptionKey=void 0,e}return g()(t,e),p()(t,[{key:"render",value:function(){return Object(v.b)(S(),Object(y.a)({"ffw-hidden":!this.isActive}),k({stroke:this.strokeColor}))}}],[{key:"is",get:function(){return"ff-loading-spinner"}},{key:"properties",get:function(){return{isActive:{type:Boolean,reflect:!0,attribute:"is-active"},strokeColor:{type:String,attribute:"stroke-color"},manual:{type:Boolean,reflect:!0}}}}]),p()(t,[{key:"update",value:function(e){e.has("manual")&&(this.manual?this._subscriptionKey&&(w.a.communication.EventAggregator.removeBeforeDispatchingCallback(this._subscriptionKey),this._subscriptionKey=void 0):function(e){e._subscriptionKey||(e._subscriptionKey=w.a.communication.EventAggregator.addBeforeDispatchingCallback((function(t){-1!==["search","filter","sort","clearFilter","advisor"].indexOf(t.type)&&(e.show(),t.always=w.a.common.concatFunctions((function(){return e.hide()}),t.always))})))}(this)),f()(l()(t.prototype),"update",this).call(this,e)}},{key:"show",value:function(){this.isActive=!0}},{key:"hide",value:function(){this.isActive=!1}}]),t}(C.a);window.customElements.define(P.is,P)}]);

/***/ }),

/***/ "./node_modules/lozad/dist/lozad.min.js":
/*!**********************************************!*\
  !*** ./node_modules/lozad/dist/lozad.min.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*! lozad.js - v1.14.0 - 2019-10-19
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2019 Apoorv Saxena; Licensed MIT */
!function(t,e){ true?module.exports=e():undefined}(this,function(){"use strict";
/**
   * Detect IE browser
   * @const {boolean}
   * @private
   */var d="undefined"!=typeof document&&document.documentMode,c={rootMargin:"0px",threshold:0,load:function(t){if("picture"===t.nodeName.toLowerCase()){var e=document.createElement("img");d&&t.getAttribute("data-iesrc")&&(e.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(e.alt=t.getAttribute("data-alt")),t.append(e)}if("video"===t.nodeName.toLowerCase()&&!t.getAttribute("data-src")&&t.children){for(var r=t.children,a=void 0,o=0;o<=r.length-1;o++)(a=r[o].getAttribute("data-src"))&&(r[o].src=a);t.load()}if(t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset")),t.getAttribute("data-background-image"))t.style.backgroundImage="url('"+t.getAttribute("data-background-image").split(",").join("'),url('")+"')";else if(t.getAttribute("data-background-image-set")){var i=t.getAttribute("data-background-image-set").split(","),n=i[0].substr(0,i[0].indexOf(" "))||i[0];// Substring before ... 1x
n=-1===n.indexOf("url(")?"url("+n+")":n,1===i.length?t.style.backgroundImage=n:t.setAttribute("style",(t.getAttribute("style")||"")+"background-image: "+n+"; background-image: -webkit-image-set("+i+"); background-image: image-set("+i+")")}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded:function(){}};function l(t){t.setAttribute("data-loaded",!0)}var b=function(t){return"true"===t.getAttribute("data-loaded")};return function(){var r,a,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=Object.assign({},c,t),i=e.root,n=e.rootMargin,d=e.threshold,u=e.load,s=e.loaded,g=void 0;return"undefined"!=typeof window&&window.IntersectionObserver&&(g=new IntersectionObserver((r=u,a=s,function(t,e){t.forEach(function(t){(0<t.intersectionRatio||t.isIntersecting)&&(e.unobserve(t.target),b(t.target)||(r(t.target),l(t.target),a(t.target)))})}),{root:i,rootMargin:n,threshold:d})),{observe:function(){for(var t=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)}(o,i),e=0;e<t.length;e++)b(t[e])||(g?g.observe(t[e]):(u(t[e]),l(t[e]),s(t[e])))},triggerLoad:function(t){b(t)||(u(t),l(t),s(t))},observer:g}}});


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/whatwg-fetch/fetch.js":
/*!********************************************!*\
  !*** ./node_modules/whatwg-fetch/fetch.js ***!
  \********************************************/
/*! exports provided: Headers, Request, Response, DOMException, fetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Headers", function() { return Headers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Request", function() { return Request; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Response", function() { return Response; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOMException", function() { return DOMException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetch", function() { return fetch; });
var support = {
  searchParams: 'URLSearchParams' in self,
  iterable: 'Symbol' in self && 'iterator' in Symbol,
  blob:
    'FileReader' in self &&
    'Blob' in self &&
    (function() {
      try {
        new Blob()
        return true
      } catch (e) {
        return false
      }
    })(),
  formData: 'FormData' in self,
  arrayBuffer: 'ArrayBuffer' in self
}

function isDataView(obj) {
  return obj && DataView.prototype.isPrototypeOf(obj)
}

if (support.arrayBuffer) {
  var viewClasses = [
    '[object Int8Array]',
    '[object Uint8Array]',
    '[object Uint8ClampedArray]',
    '[object Int16Array]',
    '[object Uint16Array]',
    '[object Int32Array]',
    '[object Uint32Array]',
    '[object Float32Array]',
    '[object Float64Array]'
  ]

  var isArrayBufferView =
    ArrayBuffer.isView ||
    function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
}

function normalizeName(name) {
  if (typeof name !== 'string') {
    name = String(name)
  }
  if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
    throw new TypeError('Invalid character in header field name')
  }
  return name.toLowerCase()
}

function normalizeValue(value) {
  if (typeof value !== 'string') {
    value = String(value)
  }
  return value
}

// Build a destructive iterator for the value list
function iteratorFor(items) {
  var iterator = {
    next: function() {
      var value = items.shift()
      return {done: value === undefined, value: value}
    }
  }

  if (support.iterable) {
    iterator[Symbol.iterator] = function() {
      return iterator
    }
  }

  return iterator
}

function Headers(headers) {
  this.map = {}

  if (headers instanceof Headers) {
    headers.forEach(function(value, name) {
      this.append(name, value)
    }, this)
  } else if (Array.isArray(headers)) {
    headers.forEach(function(header) {
      this.append(header[0], header[1])
    }, this)
  } else if (headers) {
    Object.getOwnPropertyNames(headers).forEach(function(name) {
      this.append(name, headers[name])
    }, this)
  }
}

Headers.prototype.append = function(name, value) {
  name = normalizeName(name)
  value = normalizeValue(value)
  var oldValue = this.map[name]
  this.map[name] = oldValue ? oldValue + ', ' + value : value
}

Headers.prototype['delete'] = function(name) {
  delete this.map[normalizeName(name)]
}

Headers.prototype.get = function(name) {
  name = normalizeName(name)
  return this.has(name) ? this.map[name] : null
}

Headers.prototype.has = function(name) {
  return this.map.hasOwnProperty(normalizeName(name))
}

Headers.prototype.set = function(name, value) {
  this.map[normalizeName(name)] = normalizeValue(value)
}

Headers.prototype.forEach = function(callback, thisArg) {
  for (var name in this.map) {
    if (this.map.hasOwnProperty(name)) {
      callback.call(thisArg, this.map[name], name, this)
    }
  }
}

Headers.prototype.keys = function() {
  var items = []
  this.forEach(function(value, name) {
    items.push(name)
  })
  return iteratorFor(items)
}

Headers.prototype.values = function() {
  var items = []
  this.forEach(function(value) {
    items.push(value)
  })
  return iteratorFor(items)
}

Headers.prototype.entries = function() {
  var items = []
  this.forEach(function(value, name) {
    items.push([name, value])
  })
  return iteratorFor(items)
}

if (support.iterable) {
  Headers.prototype[Symbol.iterator] = Headers.prototype.entries
}

function consumed(body) {
  if (body.bodyUsed) {
    return Promise.reject(new TypeError('Already read'))
  }
  body.bodyUsed = true
}

function fileReaderReady(reader) {
  return new Promise(function(resolve, reject) {
    reader.onload = function() {
      resolve(reader.result)
    }
    reader.onerror = function() {
      reject(reader.error)
    }
  })
}

function readBlobAsArrayBuffer(blob) {
  var reader = new FileReader()
  var promise = fileReaderReady(reader)
  reader.readAsArrayBuffer(blob)
  return promise
}

function readBlobAsText(blob) {
  var reader = new FileReader()
  var promise = fileReaderReady(reader)
  reader.readAsText(blob)
  return promise
}

function readArrayBufferAsText(buf) {
  var view = new Uint8Array(buf)
  var chars = new Array(view.length)

  for (var i = 0; i < view.length; i++) {
    chars[i] = String.fromCharCode(view[i])
  }
  return chars.join('')
}

function bufferClone(buf) {
  if (buf.slice) {
    return buf.slice(0)
  } else {
    var view = new Uint8Array(buf.byteLength)
    view.set(new Uint8Array(buf))
    return view.buffer
  }
}

function Body() {
  this.bodyUsed = false

  this._initBody = function(body) {
    this._bodyInit = body
    if (!body) {
      this._bodyText = ''
    } else if (typeof body === 'string') {
      this._bodyText = body
    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
      this._bodyBlob = body
    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
      this._bodyFormData = body
    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
      this._bodyText = body.toString()
    } else if (support.arrayBuffer && support.blob && isDataView(body)) {
      this._bodyArrayBuffer = bufferClone(body.buffer)
      // IE 10-11 can't handle a DataView body.
      this._bodyInit = new Blob([this._bodyArrayBuffer])
    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
      this._bodyArrayBuffer = bufferClone(body)
    } else {
      this._bodyText = body = Object.prototype.toString.call(body)
    }

    if (!this.headers.get('content-type')) {
      if (typeof body === 'string') {
        this.headers.set('content-type', 'text/plain;charset=UTF-8')
      } else if (this._bodyBlob && this._bodyBlob.type) {
        this.headers.set('content-type', this._bodyBlob.type)
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
      }
    }
  }

  if (support.blob) {
    this.blob = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return Promise.resolve(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(new Blob([this._bodyArrayBuffer]))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as blob')
      } else {
        return Promise.resolve(new Blob([this._bodyText]))
      }
    }

    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
      } else {
        return this.blob().then(readBlobAsArrayBuffer)
      }
    }
  }

  this.text = function() {
    var rejected = consumed(this)
    if (rejected) {
      return rejected
    }

    if (this._bodyBlob) {
      return readBlobAsText(this._bodyBlob)
    } else if (this._bodyArrayBuffer) {
      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
    } else if (this._bodyFormData) {
      throw new Error('could not read FormData body as text')
    } else {
      return Promise.resolve(this._bodyText)
    }
  }

  if (support.formData) {
    this.formData = function() {
      return this.text().then(decode)
    }
  }

  this.json = function() {
    return this.text().then(JSON.parse)
  }

  return this
}

// HTTP methods whose capitalization should be normalized
var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

function normalizeMethod(method) {
  var upcased = method.toUpperCase()
  return methods.indexOf(upcased) > -1 ? upcased : method
}

function Request(input, options) {
  options = options || {}
  var body = options.body

  if (input instanceof Request) {
    if (input.bodyUsed) {
      throw new TypeError('Already read')
    }
    this.url = input.url
    this.credentials = input.credentials
    if (!options.headers) {
      this.headers = new Headers(input.headers)
    }
    this.method = input.method
    this.mode = input.mode
    this.signal = input.signal
    if (!body && input._bodyInit != null) {
      body = input._bodyInit
      input.bodyUsed = true
    }
  } else {
    this.url = String(input)
  }

  this.credentials = options.credentials || this.credentials || 'same-origin'
  if (options.headers || !this.headers) {
    this.headers = new Headers(options.headers)
  }
  this.method = normalizeMethod(options.method || this.method || 'GET')
  this.mode = options.mode || this.mode || null
  this.signal = options.signal || this.signal
  this.referrer = null

  if ((this.method === 'GET' || this.method === 'HEAD') && body) {
    throw new TypeError('Body not allowed for GET or HEAD requests')
  }
  this._initBody(body)
}

Request.prototype.clone = function() {
  return new Request(this, {body: this._bodyInit})
}

function decode(body) {
  var form = new FormData()
  body
    .trim()
    .split('&')
    .forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
  return form
}

function parseHeaders(rawHeaders) {
  var headers = new Headers()
  // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
  // https://tools.ietf.org/html/rfc7230#section-3.2
  var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ')
  preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
    var parts = line.split(':')
    var key = parts.shift().trim()
    if (key) {
      var value = parts.join(':').trim()
      headers.append(key, value)
    }
  })
  return headers
}

Body.call(Request.prototype)

function Response(bodyInit, options) {
  if (!options) {
    options = {}
  }

  this.type = 'default'
  this.status = options.status === undefined ? 200 : options.status
  this.ok = this.status >= 200 && this.status < 300
  this.statusText = 'statusText' in options ? options.statusText : 'OK'
  this.headers = new Headers(options.headers)
  this.url = options.url || ''
  this._initBody(bodyInit)
}

Body.call(Response.prototype)

Response.prototype.clone = function() {
  return new Response(this._bodyInit, {
    status: this.status,
    statusText: this.statusText,
    headers: new Headers(this.headers),
    url: this.url
  })
}

Response.error = function() {
  var response = new Response(null, {status: 0, statusText: ''})
  response.type = 'error'
  return response
}

var redirectStatuses = [301, 302, 303, 307, 308]

Response.redirect = function(url, status) {
  if (redirectStatuses.indexOf(status) === -1) {
    throw new RangeError('Invalid status code')
  }

  return new Response(null, {status: status, headers: {location: url}})
}

var DOMException = self.DOMException
try {
  new DOMException()
} catch (err) {
  DOMException = function(message, name) {
    this.message = message
    this.name = name
    var error = Error(message)
    this.stack = error.stack
  }
  DOMException.prototype = Object.create(Error.prototype)
  DOMException.prototype.constructor = DOMException
}

function fetch(input, init) {
  return new Promise(function(resolve, reject) {
    var request = new Request(input, init)

    if (request.signal && request.signal.aborted) {
      return reject(new DOMException('Aborted', 'AbortError'))
    }

    var xhr = new XMLHttpRequest()

    function abortXhr() {
      xhr.abort()
    }

    xhr.onload = function() {
      var options = {
        status: xhr.status,
        statusText: xhr.statusText,
        headers: parseHeaders(xhr.getAllResponseHeaders() || '')
      }
      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
      var body = 'response' in xhr ? xhr.response : xhr.responseText
      resolve(new Response(body, options))
    }

    xhr.onerror = function() {
      reject(new TypeError('Network request failed'))
    }

    xhr.ontimeout = function() {
      reject(new TypeError('Network request failed'))
    }

    xhr.onabort = function() {
      reject(new DOMException('Aborted', 'AbortError'))
    }

    xhr.open(request.method, request.url, true)

    if (request.credentials === 'include') {
      xhr.withCredentials = true
    } else if (request.credentials === 'omit') {
      xhr.withCredentials = false
    }

    if ('responseType' in xhr && support.blob) {
      xhr.responseType = 'blob'
    }

    request.headers.forEach(function(value, name) {
      xhr.setRequestHeader(name, value)
    })

    if (request.signal) {
      request.signal.addEventListener('abort', abortXhr)

      xhr.onreadystatechange = function() {
        // DONE (success or failure)
        if (xhr.readyState === 4) {
          request.signal.removeEventListener('abort', abortXhr)
        }
      }
    }

    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
  })
}

fetch.polyfill = true

if (!self.fetch) {
  self.fetch = fetch
  self.Headers = Headers
  self.Request = Request
  self.Response = Response
}


/***/ }),

/***/ "./src/Pyz/Yves/ShopUi/Theme/default/vendor.ts":
/*!*****************************************************!*\
  !*** ./src/Pyz/Yves/ShopUi/Theme/default/vendor.ts ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_features_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/features/promise */ "./node_modules/core-js/features/promise/index.js");
/* harmony import */ var core_js_features_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_features_promise__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_features_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/features/array */ "./node_modules/core-js/features/array/index.js");
/* harmony import */ var core_js_features_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_features_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_features_set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/features/set */ "./node_modules/core-js/features/set/index.js");
/* harmony import */ var core_js_features_set__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_features_set__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_features_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/features/map */ "./node_modules/core-js/features/map/index.js");
/* harmony import */ var core_js_features_map__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_features_map__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var classlist_polyfill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! classlist-polyfill */ "./node_modules/classlist-polyfill/src/index.js");
/* harmony import */ var classlist_polyfill__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(classlist_polyfill__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_features_string_starts_with__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/features/string/starts-with */ "./node_modules/core-js/features/string/starts-with.js");
/* harmony import */ var core_js_features_string_starts_with__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_features_string_starts_with__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lozad__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lozad */ "./node_modules/lozad/dist/lozad.min.js");
/* harmony import */ var lozad__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lozad__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var whatwg_fetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! whatwg-fetch */ "./node_modules/whatwg-fetch/fetch.js");
/* harmony import */ var element_closest__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! element-closest */ "./node_modules/element-closest/index.mjs");
/* harmony import */ var _webcomponents_webcomponentsjs_custom_elements_es5_adapter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @webcomponents/webcomponentsjs/custom-elements-es5-adapter */ "./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js");
/* harmony import */ var _webcomponents_webcomponentsjs_custom_elements_es5_adapter__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_webcomponents_webcomponentsjs_custom_elements_es5_adapter__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _webcomponents_webcomponentsjs_webcomponents_loader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @webcomponents/webcomponentsjs/webcomponents-loader */ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js");
/* harmony import */ var _webcomponents_webcomponentsjs_webcomponents_loader__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_webcomponents_webcomponentsjs_webcomponents_loader__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _webcomponents_webcomponentsjs_webcomponents_bundle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @webcomponents/webcomponentsjs/webcomponents-bundle */ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js");
/* harmony import */ var _webcomponents_webcomponentsjs_webcomponents_bundle__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_webcomponents_webcomponentsjs_webcomponents_bundle__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var ff_web_components_dist_bundle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ff-web-components/dist/bundle */ "./node_modules/ff-web-components/dist/bundle.js");
/* harmony import */ var ff_web_components_dist_bundle__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(ff_web_components_dist_bundle__WEBPACK_IMPORTED_MODULE_12__);
/* tslint:disable: no-any */

/* tslint:enable */
// add polyfills









Object(element_closest__WEBPACK_IMPORTED_MODULE_8__["default"])(window); // then load a shim for es5 transpilers (typescript or babel)
// https://github.com/webcomponents/webcomponentsjs#custom-elements-es5-adapterjs

/* tslint:disable: no-var-requires no-require-imports */

__webpack_require__(/*! @webcomponents/webcomponentsjs/custom-elements-es5-adapter.js */ "./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js"); // add webcomponents polyfill


__webpack_require__(/*! @webcomponents/webcomponents-platform/webcomponents-platform */ "./node_modules/@webcomponents/webcomponents-platform/webcomponents-platform.js");

__webpack_require__(/*! @webcomponents/custom-elements/custom-elements.min */ "./node_modules/@webcomponents/custom-elements/custom-elements.min.js");
/* tslint:enable */


var observer = lozad__WEBPACK_IMPORTED_MODULE_6___default()('.js-lazy-image__content');
observer.observe(); // check if the browser natively supports webcomponents (and es6)

var hasNativeCustomElements = !!window.customElements; // then load a shim for es5 transpilers (typescript or babel)
// https://github.com/webcomponents/webcomponentsjs#custom-elements-es5-adapterjs

if (hasNativeCustomElements) {
  Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(null, /*! @webcomponents/webcomponentsjs/custom-elements-es5-adapter */ "./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js", 7));
} // add webcomponents polyfill







/***/ })

},[["./src/Pyz/Yves/ShopUi/Theme/default/vendor.ts","runtime"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,