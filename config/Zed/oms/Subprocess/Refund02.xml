<?xml version="1.0"?>
<statemachine
    xmlns="spryker:oms-01"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="spryker:oms-01 http://static.spryker.com/oms-01.xsd">
    ​
    <process name="Refund02">
        ​
        <states>
            <state name="ready for return"/>
            ​
            <state name="refund - not received"/>
            <state name="refund - defective"/>
            <state name="refund - tainted"/>
            <state name="refund - product recall"/>
            <state name="refund - insufficient quality"/>
            <state name="refund - wrong type"/>
            ​
            <state name="ready for refund"/>
            <state name="refund items group"/>
            <state name="refund call allowed"/>
            <state name="wait for refund"/>
            <state name="refund pending"/>
            <state name="refund pending next try"/>
            <state name="refund failed clarification"/>
            <state name="refund approved"/>
            <state name="refund saved"/>
            <state name="refunded"/>
        </states>
        ​
        <transitions>
            <transition>
                <source>ready for return</source>
                <target>refund - not received</target>
                <event>mark as not received</event>
            </transition>
            ​
            <transition>
                <source>refund - not received</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for return</source>
                <target>refund - defective</target>
                <event>mark as defective</event>
            </transition>
            ​
            <transition>
                <source>refund - defective</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for return</source>
                <target>refund - tainted</target>
                <event>mark as tainted</event>
            </transition>
            ​
            <transition>
                <source>refund - tainted</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for return</source>
                <target>refund - product recall</target>
                <event>mark as product recall</event>
            </transition>
            ​
            <transition>
                <source>refund - product recall</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for return</source>
                <target>refund - insufficient quality</target>
                <event>mark as insufficient quality</event>
            </transition>
            ​
            <transition>
                <source>refund - insufficient quality</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for return</source>
                <target>refund - wrong type</target>
                <event>mark as wrong type</event>
            </transition>
            ​
            <transition>
                <source>refund - wrong type</source>
                <target>ready for refund</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>ready for refund</source>
                <target>refund items group</target>
                <event>refund</event>
            </transition>
            ​
            <transition condition="Payone/IsRefundCallAllowed">
                <source>refund items group</source>
                <target>refund call allowed</target>
                <event>check if refund call allowed</event>
            </transition>
            ​
            <transition>
                <source>refund items group</source>
                <target>wait for refund</target>
                <event>check if refund call allowed</event>
            </transition>
            ​
            <transition>
                <source>wait for refund</source>
                <target>refund items group</target>
                <event>retry refund call allowed check</event>
            </transition>
            ​
            <transition condition="Payone/PartialRefundIsApproved">
                <source>refund call allowed</source>
                <target>refund pending</target>
                <event>request refund</event>
            </transition>
            ​
            <transition>
                <source>refund call allowed</source>
                <target>refund failed clarification</target>
                <event>request refund</event>
            </transition>
            ​
            <transition condition="Payone/PaymentIsRefund">
                <source>refund pending</source>
                <target>refund approved</target>
                <event>pass 30 minutes</event>
            </transition>
            ​
            <transition>
                <source>refund pending</source>
                <target>refund pending next try</target>
                <event>pass 30 minutes</event>
            </transition>
            ​
            <transition>
                <source>refund pending next try</source>
                <target>refund pending</target>
                <event>pass</event>
            </transition>
            ​
            <transition>
                <source>refund failed clarification</source>
                <target>refund approved</target>
                <event>refund manually</event>
            </transition>
            ​
            <transition>
                <source>refund failed clarification</source>
                <target>ready for refund</target>
                <event>retry refund</event>
            </transition>
            ​
            <transition>
                <source>refund approved</source>
                <target>refund saved</target>
                <event>save refund</event>
            </transition>
            ​
            <transition>
                <source>refund saved</source>
                <target>refunded</target>
                <event>send refunded email</event>
            </transition>
        </transitions>
        ​
        <events>
            <event name="mark as not received" manual="true"/>
            <event name="mark as defective" manual="true"/>
            <event name="mark as tainted" manual="true"/>
            <event name="mark as product recall" manual="true"/>
            <event name="mark as insufficient quality" manual="true"/>
            <event name="mark as wrong type" manual="true"/>
            ​
            <event name="refund" manual="true" />
            <event name="retry refund" manual="true" />
            <event name="check if refund call allowed" onEnter="true" />
            <event name="request refund" onEnter="true" command="Payone/PartialRefund"/>
            <event name="refund manually" manual="true" />
            <event name="retry refund call allowed check" timeout="15 minutes"/>
            <event name="save refund" onEnter="true" command="Payone/SavePartialRefund" />
            <event name="send refunded email" onEnter="true"/>
            <event name="pass" onEnter="true"/>
            <event name="pass 30 minutes" timeout="30 minutes"/>
        </events>
    </process>
    ​
</statemachine>
