{% extends atom('node') %}

{% define config = {
    name: 'navigation-multilevel-node',
    tag: 'li',
} %}

{% define data = {
    levelMenu: 1,
    itemId: null,
    hasChildren: false,
} %}

{% block extraClass %}
    {{ config.name }}--lvl-{{ data.levelMenu }}
    {{ data.hasChildren ? config.name ~ '--has-children-dropdown' }}
{%- endblock %}

{% block body %}
    {% if data.node.children is not empty %}
        {% set isToggler = data.itemId is not null %}
        {% set triggerClass = isToggler ? config.jsName ~ '__trigger' %}
        {% set targetClass = isToggler ? config.jsName ~ '__target-' ~ data.itemId %}
        {% set targetAttribute = isToggler ? 'data-toggle-target-class-name=' ~ targetClass %}

        {% block icon %}
            {% if isToggler %}
                <span class="{{ component.renderClass(config.name ~ '__icon', modifiers) }} {{ triggerClass }}" {{ targetAttribute }}>
                    {% include atom('icon') with {
                        modifiers: ['big'],
                        data: {
                            name: 'dropdown-arrow',
                        },
                    } only %}
                </span>
            {% endif %}
        {% endblock %}
    {% endif %}

    {{ parent() }}

    {% if data.node.children is not empty %}
        {% block menu %}
            <ul class="{{ component.renderClass(config.name ~ '__menu', modifiers) }} {{ isToggler ? config.name ~ '__menu--hidden' }} {{ targetClass }}">
                {% for childNode in data.node.children %}
                    {% include molecule('navigation-multilevel-node') with {
                        class: component.renderClass(config.name ~ '__child', modifiers) ~ ' ' ~ childNode.cssClass,
                        modifiers: modifiers,
                        data: {
                            node: childNode,
                            levelMenu: data.levelMenu + 1,
                        },
                    } only %}
                {% endfor %}
            </ul>
        {% endblock %}
    {% endif %}
{% endblock %}

{% block linkIcon %}
    {% if data.hasChildren %}
        <span class="{{ component.renderClass(config.name ~ '__link-icon', modifiers) }}">
            {% include atom('icon') with {
                class: component.renderClass(config.name ~ '__link-icon-inner', modifiers),
                modifiers: ['big'],
                data: {
                    name: 'dropdown-arrow',
                },
            } only %}
        </span>
    {% endif %}
{% endblock %}

{% block url %}
    <span class="{{ component.renderClass(config.name ~ '__link', modifiers) }} {{ config.name }}__link--lvl-{{ data.levelMenu }} {{ data.node.cssClass }}">
        <a href="{{ data.node.url }}" class="{{ config.name }}__link-inner {{ config.name }}__link-inner--lvl-{{ data.levelMenu }}">
           {{ data.node.title }}
        </a>
        {{ block('linkIcon') }}
    </span>
{% endblock %}

{% block link %}
    <span class="{{ component.renderClass(config.name ~ '__link', modifiers) }} {{ config.name }}__link--lvl-{{ data.levelMenu }} {{ data.node.cssClass }}" href="{{ data.node.url }}">
        <a href="{{ data.node.url }}" class="{{ config.name }}__link-inner {{ config.name }}__link-inner--lvl-{{ data.levelMenu }}">
           {{ data.node.title }}
        </a>
        {{ block('linkIcon') }}
    </span>
{% endblock %}

{% block externalUrl %}
    <span class="{{ component.renderClass(config.name ~ '__link', modifiers) }} {{ config.name }}__link--lvl-{{ data.levelMenu }} {{ data.node.cssClass }}" href="{{ data.node.url }}" target="_blank">
        <a href="{{ data.node.url }}" class="{{ config.name }}__link-inner {{ config.name }}__link-inner--lvl-{{ data.levelMenu }}">
            {{ data.node.title }}
        </a>
        {{ block('linkIcon') }}
    </span>
{% endblock %}

{% block other %}
    <span class="{{ component.renderClass(config.name ~ '__link', modifiers) }} {{ config.name }}__link--lvl-{{ data.levelMenu }}">
        <span class="{{ config.name }}__link-inner {{ config.name }}__link-inner--lvl-{{ data.levelMenu }}">{{ data.node.title }}</span>
        {{ block('linkIcon') }}
    </span>
{% endblock %}
