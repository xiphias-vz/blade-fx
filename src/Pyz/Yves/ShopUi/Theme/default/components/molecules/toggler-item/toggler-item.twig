{% extends model('component') %}

{% define config = {
    name: 'toggler-item',
} %}

{% define data = {
    title: required,
    text: '',
    triggerClass: '',
    targetClass: '',
    isActive: false,
    isToggler: true,
    isTogglerIncluded: true,
    hiddenClass: 'is-hidden',
    notTrigger: false,
} %}

{% block body %}
    {% set activeClass = config.name ~ '__title--active' %}
    {% set togglerClass = data.isToggler ? (data.isActive ? activeClass : data.hiddenClass) %}
    {% set titleActiveClass = data.isActive ? activeClass %}
    {% set titleReadOnlyClass = not data.isToggler ? config.name ~ '__title--read-only' %}
    {% set targetAttribute = data.targetClass ? 'data-toggle-target-class-name=' ~ data.targetClass %}

    {% block title %}
        {% if not data.notTrigger %}
            <h3 class="title title--h2 title--product-details active {{ data.triggerClass }} {{ titleActiveClass }} {{ titleReadOnlyClass }}"
                {{ targetAttribute }}>
                {{ data.title }}
                {% block arrow %}{% endblock %}
            </h3>
            {% else %}
                <h3 class="title title--h2 title--product-details"
                    {{ targetAttribute }}>
                    {{ data.title }}
                </h3>
        {% endif %}

    {% endblock %}

    {% block content %}
        <div class="{{ component.renderClass(config.name ~ '__content', modifiers) }} {{ data.targetClass }} {{ togglerClass }}">
            {% block contentText %}{{ data.text }}{% endblock %}
        </div>
        {% if data.isToggler and data.isTogglerIncluded %}
            {% include molecule('toggler-accordion') with {
                attributes: {
                    'trigger-class-name': data.triggerClass,
                    'class-to-toggle': data.hiddenClass,
                    activeClass: activeClass,
                },
            } only %}
        {% endif %}
    {% endblock %}

{% endblock %}
