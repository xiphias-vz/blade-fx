{% extends model('component') %}

{% define config = {
    name: 'quantity-counter',
    tag: 'quantity-counter'
} %}

{% define data = {
    maxQuantity: null,
    minQuantity: 1,
    value: 1,
    readOnly: false,
    autoUpdate: false,
    decrIconName: null,
    removeUrl: '',
    productItem: data.productItem
} %}

{% define attributes = {
    inputId: '',
} %}

{% block body %}
    {% set maxQuantity = data.maxQuantity < 0 or data.maxQuantity < data.minQuantity ? null : data.maxQuantity %}
    {% if app.currentCodeBucket == 'DE' %}
        <div class="{{ component.renderClass(config.name ~ '__container', modifiers) }} grid grid--middle grid--no-wrap">
            <div class="col {{ config.name }}__col col-decr">
                <div class="{{ component.renderClass('button', modifiers) }} button--quantity {{ data.value <= 1 ? 'button--disabled' : '' }} {{ config.name }}__button {{ config.name }}__button--decr {{ config.jsName }}__decr"
                     onclick="productRemoveFromCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                         '{{ data.productItem.name }}','{{ data.productItem.sku }}', {{ data.minQuantity }},
                         '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null)}}',
                         '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}')">
                    {% if data.decrIconName %}
                        {% include atom('icon') with {
                            data: {
                                name: data.decrIconName,
                            },
                        } only %}
                    {% else %}
                        -
                    {% endif %}
                </div>
            </div>
            <div class="col {{ config.name }}__col">
                <input
                    id="{{ attributes.inputId }}"
                    class="{{ component.renderClass(config.name ~ '__input', modifiers) }} {{ config.jsName }}__input input js-volume-price__quantity"
                    data-max-quantity="{{ maxQuantity }}"
                    data-min-quantity="{{ data.minQuantity }}"
                    type="number"
                    value="{{ data.value }}"
                    name="quantity"
                    min="{{ data.minQuantity }}"
                    {{ qa('quantity-input') }}
                    {% if maxQuantity is not empty %}max="{{ maxQuantity }}"{% endif %}
                    {% if data.readOnly %}readonly{% endif %}
                    {% if data.autoUpdate %}data-auto-update="true"{% endif %}
                    {% if data.removeUrl %}data-remove-url="{{ data.removeUrl }}"{% endif %}
                    onchange="productAddToCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                        '{{ data.productItem.name }}','{{ data.productItem.sku }}', 1,
                        '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null) }}',
                        '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}')"
                />
            </div>
            <div class="col {{ config.name }}__col">
                <div class="{{ component.renderClass(config.name ~ '__button button', modifiers) }} {{ config.name }}__button {{ config.name }}__button--incr button--quantity button--quantity-incr {{ config.jsName }}__incr"
                onclick="productAddToCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                    '{{ data.productItem.name }}',
                    '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null) }}',
                    '{{ data.productItem.sku }}',
                    '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}',{{ data.minQuantity }})">+</div>
            </div>
        </div>
    {%  else %}
        <div class="{{ component.renderClass(config.name ~ '__container', modifiers) }} grid grid--middle grid--no-wrap">
            <div class="col {{ config.name }}__col col-decr">
                <div class="{{ component.renderClass('button', modifiers) }} button--quantity {{ data.value <= 1 ? 'button--disabled' : '' }} {{ config.name }}__button-cz {{ config.name }}__button-cz--decr-cz {{ config.jsName }}__decr"
                     onclick="productRemoveFromCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                         '{{ data.productItem.name }}','{{ data.productItem.sku }}', {{ data.minQuantity }},
                         '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null)}}',
                         '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}')">
                    {% if data.decrIconName %}
                        {% include atom('icon') with {
                            data: {
                                name: data.decrIconName,
                            },
                        } only %}
                    {% else %}
                        -
                    {% endif %}
                </div>
            </div>
            <div class="col {{ config.name }}__col">
                <input
                    id="{{ attributes.inputId }}"
                    class="{{ component.renderClass(config.name ~ '__input', modifiers) }} {{ config.jsName }}__input input js-volume-price__quantity"
                    data-max-quantity="{{ maxQuantity }}"
                    data-min-quantity="{{ data.minQuantity }}"
                    type="number"
                    value="{{ data.value }}"
                    name="quantity"
                    min="{{ data.minQuantity }}"
                    {{ qa('quantity-input') }}
                    {% if maxQuantity is not empty %}max="{{ maxQuantity }}"{% endif %}
                    {% if data.readOnly %}readonly{% endif %}
                    {% if data.autoUpdate %}data-auto-update="true"{% endif %}
                    {% if data.removeUrl %}data-remove-url="{{ data.removeUrl }}"{% endif %}
                    onchange="productAddToCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                        '{{ data.productItem.name }}','{{ data.productItem.sku }}', 1,
                        '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null) }}',
                        '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}')"
                />
            </div>
            <div class="col {{ config.name }}__col">
                <div class="{{ component.renderClass(config.name ~ '__button button', modifiers) }} {{ config.name }}__button-cz {{ config.name }}__button-cz--incr-cz button--quantity button--quantity-incr {{ config.jsName }}__incr"
                     onclick="productAddToCart('{{ data.productItem.id | default(data.productItem.idProductAbstract) }}',
                         '{{ data.productItem.name }}',
                         '{{ data.productItem.unitPrice is defined ? data.productItem.unitPrice / 100 : null | default(data.productItem.price is defined ? data.productItem.price / 100 : null) }}',
                         '{{ data.productItem.sku }}',
                         '{{ data.productItem.brand | default(data.productItem.attributes['supplier'] is defined ? data.productItem.attributes['supplier'] : "" )}}',{{ data.minQuantity }})">+</div>
            </div>
        </div>
    {%  endif %}
{% endblock %}


