{% extends template('page-layout-login', '@SprykerShop:CustomerPage') %}

{% define data = {
    isLogin: false,
    scriptSrc: 'https://cdns.us1.gigya.com/js/gigya.js?apikey=3_IVfYuFFTkEygbMQjcP8LamKwRZBH4_qjl-EAGSvZJPGTAL59E9yUPdTxqLCyofkZ'
} %}

{% block container %}
    {% include molecule('script-loader') with {
        attributes: {
            src: data.scriptSrc
        }
    } only %}

    <div class="page-layout-customer page-layout-customer--login-wrap">
        <div class="page-layout-customer__form-wrap">
            <div class="list-switches">
                <ul class="list-switches__list">
                    <li class="list-switches__item">
                        {% embed molecule('toggler-radio') with {
                            data: {
                                label: 'checkout.customer.auth_as_login' | trans,
                            },
                            attributes: {
                                id: 'login',
                                checked: data.isLogin,
                                name: 'accountLoginSwitcher',
                                'target-class-name': 'js-customer-page-login',
                            },
                            modifiers: ['with-bg'],
                        } only %}
                            {% block labelContainer %}
                                <span class="{{ config.name }}__subtext">
                                    {{ 'customer.login_subtext' | trans }}
                                </span>

                                {{ parent() }}
                            {% endblock %}
                        {% endembed %}
                    </li>

                    <li class="list-switches__item">
                        {% embed molecule('toggler-radio') with {
                            data: {
                                label: 'checkout.customer.auth_as_user' | trans,
                            },
                            attributes: {
                                id: 'register',
                                checked: not data.isLogin,
                                name: 'accountLoginSwitcher',
                                'target-class-name': 'js-customer-page-login-register',
                            },
                            modifiers: ['with-bg'],
                        } only %}
                            {% block labelContainer %}
                                <span class="{{ config.name }}__subtext">
                                    {{ 'customer.signup_subtext' | trans }}
                                </span>

                                {{ parent() }}
                            {% endblock %}
                        {% endembed %}
                    </li>
                </ul>
            </div>
            <div class="js-customer-page-login {{ not data.isLogin ? 'is-hidden' }} grid">
                <div class="col col--sm-12 col--lg-6 spacing spacing--bigger spacing--inner">
                    {% include molecule('form') with {
                        data: {
                            form: data.forms.login,
                            submit: {
                                enable: true,
                                text: 'forms.submit.login' | trans,
                                class: 'form__action--login button button--large button--expand',
                            },
                            options: {
                                attr: null
                            },
                        },
                        modifiers: ['grid-indent', 'login', 'checkout-actions'],
                    } only %}
                    <div class="text-center">
                        <a href="{{ url('password/forgotten') }}" class="button button--link button--skinless spacing-top spacing-top--big" {{qa('customer-forgot-password-link')}}>
                            {{ 'forms.forgot-password' | trans~'?' }}
                        </a>
                    </div>
                </div>

                <div class="col col--sm-12 col--lg-6 spacing spacing--bigger spacing--inner is-hidden-sm-md">
                    <strong>
                        {{ 'customer.registration.benefit_title' | trans }}
                    </strong>
                    <p class="spacing-y spacing-y--bigger">
                        {{ 'customer.registration.benefit_message' | trans }}
                    </p>
                    <ul class="list">
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_1' | trans }}</li>
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_2' | trans }}</li>
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_3' | trans }}</li>
                    </ul>
                </div>
            </div>

            <div class="js-customer-page-login-register {{ data.isLogin ? ' is-hidden' }} grid">
                <div class="col col--sm-12 col--lg-6 spacing spacing--bigger spacing--inner is-hidden-sm-md">
                    <strong>
                        {{ 'customer.registration.benefit_title' | trans }}
                    </strong>
                    <p class="spacing-y spacing-y--bigger">
                        {{ 'customer.registration.benefit_message' | trans }}
                    </p>
                    <ul class="list">
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_1' | trans }}</li>
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_2' | trans }}</li>
                        <li class="list__item list__item--check-bullet">{{ 'customer.registration.benefit_3' | trans }}</li>
                    </ul>
                </div>

                <div class="col col--sm-12 col--lg-6 spacing spacing--bigger spacing--inner">
                    {% include molecule('customer-confirmation-form', 'CustomerConfirmationPage') ignore missing with {
                        modifiers: ['grid-indent', 'login', 'checkout-actions'],
                        data: {
                            form: data.forms.register,
                            formAction: url('register'),
                            submitButtonText: 'checkout.customer.auth_as_user',
                        },
                    } only %}
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">

        function loginUser() {
            var params = {
                callback: loginUserResponse,
                loginID: document.getElementById("loginForm_email").value,
                password: document.getElementById("loginForm_password").value,
            };
            gigya.accounts.login(params);
        }

        function loginUserResponse(response) {
            if (response.errorCode === 0) {
                var prof = {
                    src: "CDC",
                    data: response.data,
                    profile: response.profile
                }
                document.getElementById("loginForm_data").value = JSON.stringify(prof);
                loginUserLocal();
            } else if (response.errorCode === 206001) {
                resendVerificationCode(response.regToken, response.userInfo.email);
                alert(response.Text);
            } else {
                loginUserLocal();
            }
        }

        function resendVerificationCode(token, email) {
            var verificationParams = {
                regToken: token,
                email: email
            };
            gigya.accounts.resendVerificationCode(verificationParams);
        }

        function gigyaInitRegistration() {
            var params = {
                isLite: false,
                callback: gigyaInitRegistrationCallback,
            };
            gigya.accounts.initRegistration(params);
        }

        function gigyaInitRegistrationCallback(response) {
            if (response.errorCode == 0) {
                var token = response.regToken;
                gigyaRegisterUser(token);
            } else {
                alert("There was an error!");
            }
        }

        function gigyaRegisterUser(token) {
            var acceptNotifications = document.getElementsByName("registerForm[accept_notifications]")[1].checked
            var acceptTerms = document.getElementsByName("registerForm[accept_terms]")[1].checked
            var thirdPartyRegistration = document.getElementsByName("registerForm[third_party_registration]")[1].checked
            if (token) {
                var regParams = {
                    email: document.getElementById("registerForm_email").value,
                    password: document.getElementById("registerForm_password_pass").value,
                    regToken: token,
                    finalizeRegistration: true,
                    profile: {
                        firstName: document.getElementById("registerForm_first_name").value,
                        lastName: document.getElementById("registerForm_last_name").value,
                        zip: document.getElementById("registerForm_zip_code").value,
                        city: document.getElementById("registerForm_city").value,
                        country: "DE",
                        birthDay: document.getElementById("select2-registerForm_birth_day-container").innerText,
                        birthMonth: document.getElementById("select2-registerForm_birth_month-container").innerText,
                        birthYear: document.getElementById("select2-registerForm_birth_year-container").innerText,
                        phones: [
                            {
                                type: "001",
                                number: document.getElementById("registerForm_mobile_phone_number").value
                            }
                        ]
                    },
                    data: {
                        address: {
                            street: document.getElementById("registerForm_address1").value,
                            houseNo: document.getElementById("registerForm_address2").value
                        },
                        salutation: '0002'
                    },
                    format: "json",
                    callback: gigyaRegisterUserCallback,
                };

                gigya.accounts.register(regParams);
            }
        }

        function gigyaRegisterUserCallback(response) {
            if (response.errorCode == 0) {
                console.log(response);
            } else {
                console.log(response);
                alert("There was an error!");
            }
        }

        function loginUserLocal() {
            document.getElementsByName('loginForm')[0].onsubmit = function () {
            };
            document.getElementsByName('loginForm')[0].submit();
        }

        function showRegister() {
            var togg = document.getElementById('register');
            togg.targets.forEach((element) => {
                if (togg.addClass) {
                    element.classList.remove(togg.classToToggle);
                }
                element.classList.add(togg.classToToggle);
            });
        }

        function gigyaRegistrationScreen() {
            gigya.accounts.showScreenSet({
                screenSet: 'CCCustomer-RegistrationLogin',
                startScreen: 'gigya-register-screen'
            });
        }

        function gigyaLoginScreen() {
            gigya.accounts.showScreenSet({
                screenSet: 'CCCustomer-RegistrationLogin',
                startScreen: 'gigya-login-screen'
            });
        }

        document.getElementsByName('loginForm')[0].onsubmit = function () {
            loginUser();
            return false;
        };
        document.getElementsByName('registerForm')[0].onsubmit = function () {
            var thirdPartyRegistration = document.getElementsByName("registerForm[third_party_registration]")[1].checked
            if(thirdPartyRegistration) {
                gigyaInitRegistration();
                return false;
            }
            else return true;
        };
    </script>

{% endblock %}
