{% extends molecule('order-detail-table', '@SprykerShop:CustomerPage') %}

{% block body %}
    {% for concreteItem in data.orderedItems %}
        {% set depositValue = (concreteItem.productOptions.first.sumPrice | default(0)) * concreteItem.quantity %}
        <div class="{{ config.name }}__item grid grid--no-wrap">
            <div class="col grid grid--middle grid--no-wrap">
                <div class="col">
                    {% if data.order is not empty %}
                        {% widget 'CustomerReorderItemCheckboxWidget' args [concreteItem] with {
                            data: {
                                additionalModifiers: ['big'],
                            },
                        } only %}{% endwidget %}
                    {% endif %}
                </div>

                <div class="col {{ config.name }}__item-image">
                   {% set splitUrl = concreteItem.metadata.image | split('.com/')  %}
                   {% set insertInTheMiddle = '.com/thumb_' %}
                   {% set newThumbUrl = splitUrl[0] ~ insertInTheMiddle ~ splitUrl[1] %}
                   {% include atom('thumbnail') with {
                        modifiers: ['small'],
                        attributes: {
                            src: newThumbUrl,
                        },
                    } only %}
                </div>
            </div>

            <div class="col col--expand">
                <div class="grid grid--justify spacing-bottom">
                    <h4 class="col col--sm-9 title title--h5 title--alternative">{{ concreteItem.name }}</h4>
                    <strong class="col col--sm-3 text-right {{ config.name }}__amount">{{ concreteItem.sumSubtotalAggregation | money(true, data.currencyIsoCode) }}</strong>
                </div>

                <strong class="text-small">{{ 'customer.order.item_quantity' | trans }}: {{ concreteItem.quantity }}</strong>

                {% if concreteItem.amount %}
                    <p>{{ 'customer.order.item_amount' | trans }}: {{ concreteItem.amount.toFloat() }}</p>
                {% endif %}

                {% if concreteItem.productOptions is not empty %}
                    {% block detailRow %}
                        <ul class="spacing-y">
                            {% for productOption in concreteItem.productOptions %}
                                <li>
                                    + {{ productOption.value | trans }}
                                    <strong class="{{ config.name }}__amount">{{ productOption.sumPrice | money(true, data.currencyIsoCode) }}</strong>
                                </li>
                            {% endfor %}
                        </ul>
                    {% endblock %}
                {% endif %}

                {% if concreteItem.cartNote is not empty %}
                    {% include molecule('note-list', 'CartNoteWidget') ignore missing with {
                        data: {
                            label: 'cart_note.customer_page.item_note',
                            note: concreteItem.cartNote,
                        },
                    } only %}
                {% endif %}
            </div>
        </div>
    {% endfor %}

    {% for concreteItem in data.canceledItems %}
        <div class="{{ config.name }}__item {{ config.name }}__item--disabled grid grid--no-wrap">
            <div class="col grid grid--middle grid--no-wrap">
                <div class="col {{ config.name }}__canceled-check"></div>
                <div class="col {{ config.name }}__item-image">
                    {% include atom('thumbnail') with {
                        modifiers: ['small'],
                        attributes: {
                            src: concreteItem.metadata.image,
                        },
                    } only %}
                </div>
            </div>

            <div class="col col--expand">
                <div class="grid grid--justify spacing-bottom">
                    <h4 class="col col--sm-9 title title--h5">{{ concreteItem.name }}</h4>
                    <strong class="col col--sm-3 text-right {{ config.name }}__amount">{{ concreteItem.sumSubtotalAggregation | money(true, data.currencyIsoCode) }}</strong>
                </div>

                <strong>{{ 'customer.order.item_quantity' | trans }}: {{ concreteItem.quantity }}</strong>

                {% if concreteItem.productOptions is not empty %}
                    {% block canceledDetailRow %}
                        <ul class="spacing-y">
                            {% for productOption in concreteItem.productOptions %}
                                <li>
                                    + {{ productOption.value | trans }}
                                    <strong class="{{ config.name }}__amount">{{ productOption.sumPrice | money(true, data.currencyIsoCode) }}</strong>
                                </li>
                            {% endfor %}
                        </ul>
                    {% endblock %}
                {% endif %}
            </div>
        </div>
    {% endfor %}
{% endblock %}
