{% extends template('page-layout-catalog', '@SprykerShop:CatalogPage') %}
{% define data = {
    products: _view.products,
    facets: _view.facets,
    category: _view.category | default,
    categories: categories | default([]),
    filterPath: _view.filterPath | default,
    viewMode: _view.viewMode | default,
    title: _view.category.name | default,
    metaTitle: _view.pageTitle | default(_view.category.name | default),
    metaDescription: _view.pageDescription | default,
    metaKeywords: _view.pageKeywords | default,
    sort: _view.sort,
    currencyIsoCode: app.currentCurrencyISOCode,
    pagination: {
        parameters: app.request.query.all(),
        currentPage: _view.pagination.currentPage,
        paginationPath: app.request.getPathInfo(),
        maxPage: _view.pagination.maxPage,
        showAlwaysFirstAndLast: true,
        numFound: _view.pagination.numFound,
        config: _view.pagination.config,
        currentItemsPerPage: _view.pagination.currentItemsPerPage,
    },
} %}
{% block container %}
    {% block breadcrumbs %}
        {% set breadcrumbSteps = _self.renderBreadcrumbSteps(data.category, false, data.filterPath) %}
        <div class="container">
            <div class="container__inner">
                {% block breadcrumb %}
                    {% embed molecule('breadcrumb') with {
                        modifiers: ['no-border'],
                        embed: {
                            breadcrumbs: breadcrumbSteps
                        }
                    } only %}
                        {% block breadcrumbs %}
                            {{ embed.breadcrumbs }}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            </div>
        </div>
    {% endblock %}
    {% block title %}
        <div class="container">
            <div class="container__inner spacing-bottom spacing-bottom--inner spacing-bottom--bigger is-hidden-lg-only">
                <div class="box is-hidden-sm-md">
                    {% if app.currentCodeBucket == 'DE' %}
                        <h1 class="spacing-bottom spacing-bottom--inner">{{ data.title }}</h1>
                    {% else %}
                        <h1 class="title--heading-CZ spacing-bottom spacing-bottom--inner title">{{ data.title }}</h1>
                    {% endif %}
                    <span class="text-secondary text-medium ">{{ 'catalog.itemsFound' | trans({ '%numFound%': data.pagination.numFound }) }}</span>
                </div>
            </div>
        </div>
    {% endblock %}
    <div class="container">
        <main class="container__inner">
            {% block content %}
                {% set catalogJsName = 'js-catalog' %}
                {% include molecule('window-location-applicator', 'CatalogPage') with {
                    attributes: {
                        'form-class-name': catalogJsName ~ '__form',
                        'trigger-class-name': catalogJsName ~ '__trigger',
                        'sort-trigger-class-name': catalogJsName ~ '__sort-trigger',
                    },
                } only %}
                <form method="GET" class="grid js-catalog-filter-target js-form-input-default-value-disabler__catalog-form {{ catalogJsName }}__form">
                    {% block form %}
                        <div class="col col--sm-12 col--xl-3 catalog-left-side">
                            {% block filterSection %}
                                {% include organism('filter-section', 'CatalogPage') with {
                                    data: {
                                        facets: data.facets,
                                        category: data.category,
                                        filterPath: data.filterPath,
                                        categories: data.categories,
                                        togglerClass: 'js-catalog-toggler-click__trigger',
                                        parentJsName: catalogJsName,
                                        sort: data.sort,
                                    },
                                } only %}
                            {% endblock %}
                        </div>
                        <div class="col col--sm-12 col--xl-9 catalog-right-side">
                            <button type="button" class="button button--hollow button--expand spacing-y spacing-y--big is-hidden-xl-only js-catalog-toggler-click__trigger">
                                {%- include atom('icon') with {
                                    class: 'spacing-right',
                                    data: {
                                        name: 'filters',
                                    },
                                } only -%}
                                {{- 'catalog.filter.filter' | trans -}}
                            </button>
                            {% block catalogContent %}
                                <div class="grid">
                                    {% include molecule('sorting-toggler', 'CatalogPage') with {
                                        data: {
                                            sort: data.sort,
                                            togglerClass: 'js-catalog-toggler-click__trigger',
                                            parentJsName: catalogJsName,
                                        },
                                    } only %}
                                    <div id="firstSortElement" class="col col--sm-6 col--right" style="z-index: 10">
                                        {% include molecule('sort-number-products', 'CatalogPage') with {
                                            data: {
                                                pagination: data.pagination,
                                                sort: data.sort,
                                                parentJsName: catalogJsName,
                                            },
                                        } only %}
                                    </div>
                                </div>

                                <div class="grid {% if data.viewMode != 'list' %}grid--stretch product-list{% endif %}">
                                    {% if data.products %}
                                        {% for product in data.products %}
                                            {% if data.pagination.currentPage == 1  %}
                                                {% widget 'CatalogPageProductWidget' args [product, data.viewMode, loop.index] only %}{% endwidget %}
                                            {% else %}
                                                {% set index = loop.index + ((data.pagination.currentPage - 1) * data.pagination.currentItemsPerPage) | default(0) %}
                                                {% widget 'CatalogPageProductWidget' args [product, data.viewMode, index] only %}{% endwidget %}
                                         {% endif %}
                                        {% endfor %}
                                    {% else %}
                                            {% block noResults %}{{ parent() }}{% endblock %}
                                    {% endif %}
                                </div>

                                <div class="col col--sm-9 col--md-9 col--lg-6 menu--inline">
                                    {% include molecule('pagination') with {
                                        data: data.pagination
                                    } only %}
                                </div>

                                <div id="secondSortElement" class="col col--sm-3 float-right col--md-3 menu--inline" style="z-index: 10">
                                    {% include molecule('sort-number-products', 'CatalogPage') with {
                                        data: {
                                            pagination: data.pagination,
                                            sort: data.sort,
                                            parentJsName: catalogJsName,
                                        },
                                    } only %}
                                </div>
                                <script type="text/javascript">
                                        window.dataLayer = window.dataLayer || [];
                                        var impressions =  window.catalogList;
                                        var searchTerm = window.searchSuggestion || "";
                                        if(impressions == undefined || impressions == null)
                                        {
                                            window.dataLayer.push({
                                                'event': 'zeroResultsSearch',
                                                'searchTerm': searchTerm,
                                               'searchResults': 0,
                                            });
                                        }
                                        else{
                                            window.dataLayer.push({
                                                'event': 'eec.POP',
                                                'ecommerce':
                                                    {
                                                        'currency': '{{ data.currencyIsoCode }}',
                                                        impressions,
                                                    }
                                            });
                                        }
                                </script>
                            {% endblock %}
                        </div>
                        {% include molecule('toggler-click') with {
                            attributes: {
                                'trigger-class-name': 'js-catalog-toggler-click__trigger',
                                'target-class-name': 'js-catalog-filter-target',
                                'class-to-toggle': 'show-filter',
                            },
                        } only %}
                        {% include molecule('toggler-click') with {
                            attributes: {
                                'trigger-class-name': 'js-catalog-toggler-click__trigger',
                                'target-class-name': 'js-page-layout-main',
                                'class-to-toggle': 'is-not-scrollable-on-mobile-tablet',
                            },
                        } only %}
                        {% include molecule('form-input-default-value-disabler') with {
                            attributes: {
                                'form-selector': '.js-form-input-default-value-disabler__catalog-form',
                                'input-selector': '.js-form-input-default-value-disabler__catalog-input',
                            },
                        } only %}
                    {% endblock %}
                </form>
            {% endblock %}
            {% macro renderBreadcrumbSteps(categoryNode, isLastLeaf, filterPath) %}
                {% import _self as self %}
                {% set categoryUrl = categoryNode.url | default %}
                {% set categoryUrl = filterPath is not empty ? url(filterPath, {categoryPath: categoryUrl | trimLocale}) : categoryUrl %}
                {% set categoryLabel = categoryNode.name | default %}
                {% set categoryPatrentNodes = categoryNode.parents | default(null) %}
                {% if categoryPatrentNodes is not empty %}
                    {{ self.renderBreadcrumbSteps(categoryPatrentNodes | first, false, filterPath) }}
                    {% if not isLastLeaf %}
                        {% include molecule('breadcrumb-step') with {
                            data: {
                                url: categoryUrl,
                                label: categoryLabel,
                            },
                        } only %}
                    {% endif %}
                {% endif %}
            {% endmacro %}
        </main>
    </div>
{% endblock %}
