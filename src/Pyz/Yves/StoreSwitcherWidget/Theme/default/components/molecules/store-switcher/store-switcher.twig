{% extends model('component') %}

{% define config = {
    name: 'store-switcher',
    tag: 'store-switcher'
} %}

{% define data = {
    stores: required,
    currentStore: required,
    pattern: required,
    additionalModifiers: required,
    additionalClassName: '',
    passwordProtected: '',
} %}

{% block body %}
    {% if app.currentCodeBucket == 'DE' %}
        {% embed molecule('custom-select') with {
            modifiers: data.additionalModifiers,
            attributes: {
                'config-theme': 'secondary',
                'additional-class-name': data.additionalClassName,
            },
            embed: {
                jsName: config.jsName ~ '__select_store',
                stores: data.stores,
                currentStore: data.currentStore,
                pattern: data.pattern,
                passwordProtected: data.passwordProtected
            }
        } only %}
            {% block selectClass %}
                {{ parent() }} {{ embed.jsName }}
            {% endblock %}
            {% block options %}
                {% if app.request.cookies.get('current_store') == null or embed.stores[embed.currentStore] is not defined %}
                    <option value="{{ embed.pattern }}" selected>
                        {{ 'please.choose.store' | trans }}
                    </option>
                {% endif %}
                {% for storeName, storeTitle in embed.stores %}
                    {% if app.request.cookies.get('current_store') == null %}
                        <option value="{{ embed.pattern | format(storeName, app.request.requestUri) }}" is_password_protected="{{ attribute(embed.passwordProtected, storeName) }}">
                            {{ storeTitle }}
                        </option>
                    {% else %}
                        {% set selectedOption = storeName == embed.currentStore ? 'selected' %}
                        <option value="{{ embed.pattern | format(storeName, app.request.requestUri) }}" is_password_protected="{{ attribute(embed.passwordProtected, storeName) }}" {{ selectedOption }}>
                            {{ storeTitle }}
                        </option>
                    {% endif %}
                {% endfor %}
            {% endblock %}
            {% block icon %}
                {% if app.currentCodeBucket == 'DE' %}
                    {% include atom('icon') with {
                        class: config.name ~ '__edit store-switcher__edit',
                        data: {
                            name: 'edit'
                        }
                    } only %}
                {% else %}
                    {% include atom('icon') with {
                        class: config.name ~ '__edit-cz store-switcher__edit',
                        data: {
                            name: 'edit'
                        }
                    } only %}
                {% endif %}
            {% endblock %}
        {% endembed %}
    {% else %}
        {% embed molecule('custom-select-cz') with {
            modifiers: ['header-cz'],
            attributes: {
                'config-theme': 'secondary',
                'additional-class-name': data.additionalClassName,
            },
            embed: {
                jsName: config.jsName ~ '__select_store',
                stores: data.stores,
                currentStore: data.currentStore,
                pattern: data.pattern,
                passwordProtected: data.passwordProtected
            }
        } only %}
            {% block selectClass %}
                {{ parent() }} {{ embed.jsName }}
            {% endblock %}
            {% block options %}
                {% if app.request.cookies.get('current_store') == null or embed.stores[embed.currentStore] is not defined %}
                    <option value="{{ embed.pattern }}" selected>
                        {{ 'please.choose.store' | trans }}
                    </option>
                {% endif %}
                {% for storeName, storeTitle in embed.stores %}
                    {% if app.request.cookies.get('current_store') == null %}
                        <option value="{{ embed.pattern | format(storeName, app.request.requestUri) }}" is_password_protected="{{ attribute(embed.passwordProtected, storeName) }}">
                            {{ storeTitle }}
                        </option>
                    {% else %}
                        {% set selectedOption = storeName == embed.currentStore ? 'selected' %}
                        <option value="{{ embed.pattern | format(storeName, app.request.requestUri) }}" is_password_protected="{{ attribute(embed.passwordProtected, storeName) }}" {{ selectedOption }}>
                            {{ storeTitle }}
                        </option>
                    {% endif %}
                {% endfor %}
            {% endblock %}
        {% endembed %}
    {% endif %}
{% endblock %}
