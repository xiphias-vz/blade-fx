{% extends view('summary', '@SprykerShop:CheckoutPage') %}

{% define data = {
    payment: _view.quoteTransfer.payment,
    customer: _view.quoteTransfer.customer,
    overview: {
        taxPayments: _view.taxPayments,
        totalItems: _view.totalItems,
    },
    agbInputName: 'terms_approval',
    isSubstitutionAllowed:_view.quoteTransfer.isSubstitutionAllowed,
    isTransportboxEnabled: _view.isTransportboxEnabled
} %}

{% block content %}
    {% for item in data.cart.items %}
        <script>
            window.shoppingCartCheckoutList = window.shoppingCartCheckoutList || [];
            window.shoppingCartCheckoutList.push({
                'name': '{{ item.name | escape('js') }}',
                'id': '{{ item.id }}',
                'sku': '{{ item.sku }}',
                'price': '{{ item.unitGrossPrice is defined ? item.unitGrossPrice / 100 : null }}',
                'quantity': '{{ item.quantity }}',
                'brand': '{{ item.brand }}'
            });
        </script>
    {% endfor %}
    {% set isGiftCardExists = null %}
    {% for shipmentGroup in data.shipmentGroups %}
        <article class="checkout-block checkout-block--summary grid grid--indent">
            <div class="col col--spaced-lg col--sm-12 col--xl-6">
                {% include molecule('summary-sidebar', 'CheckoutPage') with {
                    class: 'grid',
                    data: {
                        shipment: shipmentGroup.shipment,
                        billingAddress: data.billingAddress,
                        isGiftCardExists: isGiftCardExists,
                        customer: data.customer,
                        canEdit: true,
                        payment: data.payment,
                        isSubstitutionAllowed: data.isSubstitutionAllowed,
                        isTransportboxEnabled: data.isTransportboxEnabled
                    },
                } only %}
                {% if app.currentCodeBucket == 'DE' %}
                    <a href="{{ data.backUrl }}" class="is-hidden-sm-lg button button--hollow-ghost button--checkout-summary">
                        {{ 'general.back.button' | trans }}
                    </a>
                {% else %}
                    <a href="{{ data.backUrl }}" class="is-hidden-sm-lg button button--hollow-ghost-CZ button--checkout-summary button--font-CZ">
                        {{ 'general.back.button' | trans }}
                    </a>
                {% endif %}
            </div>

            <div class="col col--spaced-lg col--sm-12 col--xl-6">
                <div class="checkout-block__summary">
                    <script>
                        var products = window.shoppingCartCheckoutList;
                        window.dataLayer.push({
                            'event': 'eec.checkout',
                            'ecommerce':
                                {
                                    'checkout':
                                        {
                                            'actionField':
                                                {
                                                    'step': '4',
                                                    'option': 'Ãœbersicht',
                                                },
                                            products,
                                        },
                                },
                        });
                        window.dataLayer.push({
                            'event': 'eec.checkoutOption',
                            'ecommerce':
                                {
                                    'checkout_option':
                                        {
                                            'actionField':
                                                {
                                                    'step': '4',
                                                    'option': '{{ data.cart.shipment.requestedDeliveryDate }}',
                                                }
                                        },
                                },
                        });
                    </script>
                    {% if app.currentCodeBucket == 'DE' %}
                        <div class="checkout-block__title">
                            <span>{{ 'checkout.order.overview' | trans }}</span>
                            <span class="checkout-block__title-counter">
                            {{ 'checkout.amount.items' | trans({
                                '%items%': data.overview.totalItems
                            }) }}
                        </span>
                        </div>
                    {% else %}
                        <div class="checkout-block__title-CZ">
                            <span>{{ 'checkout.order.overview' | trans }}</span>
                            <span class="checkout-block__title-CZ-counter">
                            {{ 'checkout.amount.items' | trans({
                                '%items%': data.overview.totalItems
                            }) }}
                        </span>
                        </div>
                    {% endif %}


                    {% for item in shipmentGroup.cartItems %}
                        {% set cartItem = item.bundleProduct ?? item %}
                        {% set isGiftCardExists = cartItem.giftCardMetadata is not null and cartItem.giftCardMetadata.isGiftCard %}
                        {% embed molecule('product-card-item-summary') with {
                            modifiers: ['summary'],
                            data: {
                                productItem: cartItem,
                                canEditCart: false,
                                additionalContainerClass: 'grid--no-wrap',
                                productOptionsModifiers: ['summary'],
                            },
                            embed: {
                                bundleItems: item.bundleItems | default([]),
                            },
                        } only %}

                            {% set price = data.productItem.unitPrice is defined ? data.productItem.unitPrice : data.productItem.price %}
                            {% set productItemSubTotal = data.productItem.quantity is not empty ? data.productItem.quantity * price : price %}
                            {% set productItemOriginalPrice = data.productItem.quantity is not empty ? data.productItem.quantity * data.productItem.originalPrice : data.productItem.originalPrice %}
                            {% set promotion = data.productItem.priceProduct.moneyValue.promotion | default(null) %}
                            {% set labels = labels | default([]) %}

                            {% block image %}
                                <div class="{{ component.renderClass(config.name ~ '__image', modifiers) }} col">
                                    {% if productItemOriginalPrice > productItemSubTotal %}
                                        {% set labels = labels | merge([{
                                            text: '%',
                                            type: 'highlight-summary',
                                            product_type: ''
                                        }]) %}

                                        {% include molecule('label-group', 'ProductLabelWidget') with {
                                            data: {
                                                labels: labels,
                                                parentJsName: '',
                                            },
                                        } only %}
                                    {% endif %}
                                     {% include molecule('product-image') with {
                                        modifiers: ['summary'],
                                        data: {
                                            name: data.productItem.name,
                                            image: data.productItem.images[0].externalUrlLarge ?? null,
                                        },
                                    } only %}
                                </div>

                            {% endblock %}

                            {% block contentInner %}

                                {% block headingGrid %}
                                    <div class="grid grid--no-wrap grid--justify spacing-bottom">
                                        {% block heading %}
                                            {{ parent() }}
                                        {% endblock %}
                                        {% if app.currentCodeBucket == 'DE' %}
                                            {% include molecule('money-price') with {
                                                modifiers: ['cart', 'summary'] | merge(modifiers),
                                                class: component.renderClass(config.name ~ '__price', modifiers),
                                                data: {
                                                    amount: productItemSubTotal | default(null),
                                                    originalAmount: productItemOriginalPrice,
                                                    promotion: promotion ?? '',
                                                },
                                            } only %}
                                        {% else %}
                                            {% include molecule('money-price') with {
                                                modifiers: ['cart', 'summary'] | merge(modifiers),
                                                class: component.renderClass(config.name ~ '__price-cz', modifiers),
                                                data: {
                                                    amount: productItemSubTotal | default(null),
                                                    originalAmount: productItemOriginalPrice,
                                                    promotion: promotion ?? '',
                                                },
                                            } only %}
                                        {% endif %}
                                    </div>
                                {% endblock %}

                                {% block unitPrice %}{% endblock %}
                                {% block summaryContent %}{% endblock %}
                            {% endblock %}
                        {% endembed %}
                    {% endfor %}

                    <div class="checkout-block__summary-total">
                        {% if app.currentCodeBucket == 'DE' %}
                            <h3 class="checkout-block__title">
                                {{ 'checkout.step.summary.total' | trans }}
                            </h3>
                        {% else %}
                            <h3 class="title title--heading-CZ title--general">
                                {{ 'checkout.step.summary.total' | trans }}
                            </h3>
                        {% endif %}
                        {% embed molecule('form') with {
                            modifiers: ['checkout-actions', 'summary-actions'],
                            data: {
                                form: data.forms.summary,
                                submit: {
                                    enable: true,
                                    text: 'checkout.step.place.order' | trans,
                                    class:  app.currentCodeBucket == 'DE' ? 'submit_button form__action--checkout button button--large button--expand' : 'submit_button form__action--checkout button button--large button--expand button--font-CZ button--backgroundcolor-CZ',
                                },
                                cancel: {
                                    enable: true,
                                    url: data.backUrl,
                                    text: 'general.back.button' | trans,
                                    icon: '',
                                    class: app.currentCodeBucket == 'DE' ? 'is-hidden-xl-only form__action--checkout button button--hollow-ghost button--expand' : 'is-hidden-xl-only form__action--checkout button button--hollow-ghost-CZ button--expand button--font-CZ',
                                },
                                agbInputName: data.agbInputName,
                            },
                            embed: {
                                overview: data.overview,
                                cart: data.cart,
                            },
                        } only %}
                            {% block field %}
                                {% if fieldName == data.agbInputName %}
                                    {% set labelAnchor = 'page.terms.url' | trans %}
                                    {% set labelLink = 'page.terms.title.word' | trans %}
                                    {% set labelText1 = 'summary.forms.accept_terms.text1' | trans %}
                                    {% set labelText2 = 'summary.forms.accept_terms.text2' | trans %}
                                    {% if app.currentCodeBucket == 'DE' %}
                                        {% set labelText3 = 'summary.forms.accept_terms.text3' | trans %}
                                        {{ form_row(field, {
                                            component: atom('checkbox'),
                                            label: labelText1 ~'<a class="link" href="' ~ labelAnchor ~ '" target="_blank">' ~ labelLink ~ '</a>'~ labelText2 ~ '<br>' ~ labelText3,
                                            rowAttr: {
                                                class: 'spacing-bottom spacing-bottom--bigger' ~ fieldLayoutClass,
                                            },
                                        }) }}
                                    {% else %}
                                        {{ form_row(field, {
                                            component: atom('checkbox'),
                                            label: labelText1 ~'<a class="link" href="' ~ labelAnchor ~ '" target="_blank">' ~ labelLink ~ '</a>'~ labelText2,
                                            rowAttr: {
                                                class: 'spacing-bottom spacing-bottom--bigger' ~ fieldLayoutClass,
                                            },
                                        }) }}
                                    {% endif %}

                                {% else %}
                                    {{ form_row(field, {
                                        rowAttr: {
                                            class: 'spacing-bottom spacing-bottom--bigger' ~ fieldLayoutClass,
                                        },
                                    }) }}
                                {% endif %}
                            {% endblock %}

                            {% block body %}
                                {% include molecule('summary-overview', 'CheckoutPage') with {
                                    data: embed.overview,
                                    embed: {
                                        cart: embed.cart,
                                    },
                                } only %}

                                {{ parent() }}
                            {% endblock %}
                        {% endembed %}
                    </div>
                </div>
            </div>
        </article>
    {% endfor %}
    <script>
        const submitButton = document.querySelector('.submit_button');
        submitButton.addEventListener('click', () => {
            localStorage.removeItem('productItemsForSyncCounter');
        });
    </script>
{% endblock %}
