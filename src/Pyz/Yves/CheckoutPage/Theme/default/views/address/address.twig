{% extends view('address', '@SprykerShop:CheckoutPage') %}

{% define data = {
    isBillingSameAsShippingChecked: _view.isBillingSameAsShippingChecked,
    merchantName: app['merchant_name'] | default,
    addressData: _view.data,
    isSubstitutionAllowed: _view.isSubstitutionAllowed,
    isTransportboxEnabled: _view.isTransportboxEnabled
} %}

{% block content %}

    {% set jsAddressClass = 'js-address' %}

    {% embed molecule('form') with {
        modifiers: ['checkout-actions', 'checkout-form-elements'],
        data: {
            form: data.forms.address,
            submit: {
                enable: true,
                text: 'general.next.button' | trans,
                class: 'button button--expand-tablet ' ~ jsAddressClass ~ '__form-submit',
            },
        },
        embed: {
            forms: {
                shipping: data.forms.shipping,
                billing: data.forms.billing,
                items: data.forms.items,
                bundleItems: data.forms.bundleItems
            },
            isMultipleShipmentEnabled: data.isMultipleShipmentEnabled,
            jsAddressClass: jsAddressClass,
            isBillingSameAsShippingChecked: data.isBillingSameAsShippingChecked,
            addressData: data.addressData,
            isSubstitutionAllowed: data.isSubstitutionAllowed,
            isTransportboxEnabled: data.isTransportboxEnabled
        },
    } only %}
        {% block fieldset %}
            <style>
                .form__fields, .form--checkout-form .form__fields {
                    max-width: inherit;
                }
            </style>
            <script>
                window.dataLayer.push({
                    'event': 'eec.checkout',
                    'ecommerce':
                        {
                            'checkout':
                                {
                                    'actionField':
                                        {
                                            'step': '2',
                                            'option': 'Abholstation',
                                        }
                                },
                        },
                });
            </script>
            <div class="{{ config.name }}__fields grid grid--indent">
                <div class="col col--sm-12 col--xl-6 spacing-x spacing-x--big spacing-x--inner spacing-bottom spacing-bottom--bigger">
                    <div class="checkout-block">
                        {% set idCustomer = data.form.vars.value.customer.idCustomer %}
                        <input id="idCustomer" type="hidden" value="{{ idCustomer }}" />
                        {% if app.currentCodeBucket == 'DE' %}
                            <h2 class="title title--primary checkout-block__title-with-link">
                                <div>{{ 'page.checkout.address.billing-address' | trans }}</div>
                            </h2>
                        {% else %}
                            <h2 class="title title--heading-CZ title--primary checkout-block__title-with-link">
                                <div>{{ 'page.checkout.address.billing-address' | trans }}</div>
                            </h2>
                        {% endif %}


                        {% if idCustomer is not null %}
                            {% set customerData = data.form.vars.value.customer %}
                            {% set isScanAndGo = customerData.isScanAndGo %}
                            <div>{{ customerData.company }} {{ customerData.lastName }} {{ customerData.firstName }}</div>
                            <div>{{ customerData.address1 }} {{ customerData.address2 }}</div>
                            <div>{{ customerData.zipCode }} {{ customerData.city }}, {{ ('countries.code.' ~ customerData.country) | trans }}</div>
                            <br>
                            <div>{{ customerData.email }}</div>

                            {% if embed.addressData is defined and embed.addressData|length > 0%}

                            {% set hintsData = embed.addressData %}

                                {% if(hintsData.showWeHint == true) %}

                                    <div style="padding: 10px 0; display: flex;">
                                        <div style="display: inline-block; width: 30px; margin-right: 15px; margin-top: 5px;"><img src="{{ publicPath('images/brief.png') }}" style="height: 20px;" /></div>
                                        <span>{{ 'register.step.success.page.brief.text' | trans }}</span>
                                    </div>

                                {% endif %}

                                {% if(hintsData.showScanAndGoActivateHint == true) %}

                                    <div style="padding: 10px 0; display: flex;">
                                        <div style="display: inline-block; width: 30px; margin-right: 15px; margin-top: 5px;"><img src="{{ publicPath('images/scanandgo.png') }}" style="height: 20px; width: 100%;" /></div>
                                        <span>{{ 'checkout.showScanAndGoActivateHint' | trans }}</span>
                                    </div>

                                {% endif %}

                                {% if(hintsData.showScanAndGoNotActivateHint == true) %}

                                    <div style="padding: 10px 0; display: flex;">
                                        <div style="display: inline-block; width: 30px; margin-right: 15px; margin-top: 5px;"><img src="{{ publicPath('images/scanandgo.png') }}" style="height: 20px; width: 100%;" /></div>
                                        <span>{{ 'checkout.showScanAndGoNotActivateHint' | trans }}</span>
                                    </div>

                                {% endif %}
                            {% endif %}

                            <hr style="border-bottom: 1px solid black !important; margin:1.5rem 0 !important;">
                            <div class="text-color-1">
                                {{ 'page.checkout.address.phone.paragraph1' | trans }}
                            </div>
                            <div>
                                {{ 'page.checkout.address.phone.paragraph2' | trans }}
                            </div>
                            <br>
                            <div class="text-color-1" id="phoneRequiredFields">
                                {{ 'page.checkout.address.phone.paragraph3' | trans }}
                                <br>
                            </div>

                            {% include molecule('form') with {
                                modifiers: ['checkout-form', 'checkout-form-elements'],
                                data: {
                                    form: embed.forms.shipping,
                                    enableStart: false,
                                    enableEnd: false,
                                    layout: {
                                        salutation: 'col col--sm-12 col--lg-3 is-hidden',
                                        first_name: 'col col--sm-12 col--lg-4 is-hidden',
                                        last_name: 'col col--sm-12 col--lg-5 is-hidden',
                                        address1: 'col col--sm-12 col--md-8 col--lg-7 is-hidden',
                                        address2: 'col col--sm-12 col--md-4 col--lg-5 is-hidden',
                                        floor: 'col col--sm-12 col--lg-12 is-hidden',
                                        zip_code: 'col col--sm-12 col--lg-5 is-hidden',
                                        city: 'col col--sm-12 col--lg-7 is-hidden',
                                        additional_info: 'is-hidden',
                                        id_customer_address: 'is-hidden',
                                        isAddressSavingSkipped: 'is-hidden'
                                    }
                                },
                            } only %}

                        {% else %}
                            {% include molecule('form') with {
                                class: embed.jsAddressClass ~ '__shipping',
                                modifiers: ['checkout-form', 'checkout-form-elements'],
                                data: {
                                    form: embed.forms.shipping,
                                    enableStart: false,
                                    enableEnd: false,
                                    layout: {
                                        salutation: 'col col--sm-12 col--lg-3',
                                        first_name: 'col col--sm-12 col--lg-4',
                                        last_name: 'col col--sm-12 col--lg-5',
                                        address1: 'col col--sm-12 col--md-8 col--lg-7',
                                        address2: 'col col--sm-12 col--md-4 col--lg-5',
                                        floor: 'col col--sm-12 col--lg-12',
                                        zip_code: 'col col--sm-12 col--lg-5',
                                        city: 'col col--sm-12 col--lg-7',
                                        id_customer_address: 'is-hidden',
                                        isAddressSavingSkipped: 'is-hidden'
                                    }
                                  },
                            } only %}
                            {% if app.currentCodeBucket != 'CZ' %}
                            <div class="form__field text-color-1" id="phoneRequiredFieldsGuest">
                                {{ 'page.checkout.address.phone.paragraph3' | trans }}
                            </div>
                            {% endif %}

                        {% endif %}

                        {% if embed.isMultipleShipmentEnabled %}
                            {% include molecule('address-item-form', 'CheckoutPage') with {
                                class: 'is-hidden spacing-bottom ' ~ embed.jsAddressClass ~ '__items-target',
                                data: {
                                    form: embed.forms.items,
                                    formBundle: embed.forms.bundleItems,
                                    shippingForm: embed.forms.shipping,
                                    jsAddressClass: embed.jsAddressClass,
                                },
                            } only %}
                        {% endif %}
                    </div>
                </div>

                <div class="col col--sm-12 col--xl-6 spacing-x spacing-x--big spacing-x--inner">
                    <div class="checkout-block">
                        <h2 class="title title--primary">{{ 'page.checkout.address.abhol-address' | trans }}</h2>

                        <p class="spacing-bottom spacing-bottom--bigger text-color-1">{{ 'cart.checkout.address.abholstation.note.up' | trans }}</p>

                        <div class="spacing-bottom spacing-bottom--bigger text-color-1">
                            <p>{{ 'checkout.step.address.title' | trans }}</p>
                            <span>
                                {{- app['merchant_name'] -}}
                            </span>
                        </div>
                        {% if app.currentCodeBucket != 'CZ'%}
                            <div class="horizontal-line"></div>

                            {% if embed.isTransportboxEnabled == true %}
                                {% include molecule('transport-box', 'CheckoutPage') with {
                                    data: {
                                        formCheckbox: data.form.is_deposit_allowed,
                                        withHorizontalTopBorder: false,
                                        withHorizontalBottomBorder: false
                                    }
                                } only %}
                            {% else %}
                                <div class="hidden">
                                    {{ form_row(data.form.is_deposit_allowed, {
                                        label: 'checkout.transport.box.checkbox' | trans,
                                        attributes: {
                                            'checked': false,
                                            'style': 'margin-top:3px'
                                        }
                                    }) }}
                                </div>
                            {% endif %}

                            <div class="horizontal-line"></div>
                            <div class="text-color-1">
                                <p>{{ 'cart.checkout.address.abholstation.note.down' | trans }}</p>
                            </div>
                        {% else %}
                            <div class="hidden">
                                {{ form_row(data.form.is_deposit_allowed, {
                                    label: 'checkout.transport.box.checkbox' | trans,
                                    attributes: {
                                        'checked': false,
                                        'style': 'margin-top:3px'
                                    }
                                }) }}
                            </div>
                        {% endif %}
                        <div class="spacing-bottom text-color-1">
                            {{ form_row(data.form.cart_note, {
                                placeholder: 'cart.checkout.address.abholstation.textarea.note' | trans,
                            }) }}
                        </div>
                        <div {% if app.currentCodeBucket == 'CZ'%} style="display: none;" {% else %} style="display: flex;" {% endif %}>
                            {{ form_row(data.form.is_substitution_allowed, {
                                label: 'checkout.address.page.substitutions.checkbox' | trans,
                                attributes: {
                                    'checked': embed.isSubstitutionAllowed,
                                    'style': 'margin-top:3px'
                                }
                            }) }}
                            <div>
                                {% include molecule('substitutions-tooltip', 'CheckoutPage') with { } only %}
                            </div>
                        </div>
                        <div class="{{ embed.jsAddressClass }}__billing-same-as-shipping is-hidden">
                            {{ form_row(data.form.billingSameAsShipping, {
                                label: 'page.checkout.address.billing-same-as-shipping' | trans,
                                component: molecule('toggler-checkbox'),
                                attributes: {
                                    'target-class-name': embed.jsAddressClass ~ '__billing-address',
                                    'add-class-when-checked': true,
                                    'checked': embed.isBillingSameAsShippingChecked,
                                },
                            }) }}
                        </div>

                        {% embed molecule('form') with {
                            class: 'spacing-top spacing-top--big is-hidden ' ~ embed.jsAddressClass ~  '__billing-address',
                            modifiers: ['checkout-form-elements'],
                            data: {
                                form: embed.forms.billing,
                                enableStart: false,
                                enableEnd: false,
                                layout: {
                                    salutation: 'col col--sm-12 col--lg-3',
                                    first_name: 'col col--sm-12 col--lg-4',
                                    last_name: 'col col--sm-12 col--lg-5',
                                    address1: 'col col--sm-12 col--md-8 col--lg-7',
                                    address2: 'col col--sm-12 col--md-4 col--lg-5',
                                    floor: 'col col--sm-12 col--lg-12',
                                    zip_code: 'col col--sm-12 col--lg-5',
                                    city: 'col col--sm-12 col--lg-7',
                                },
                            },
                            embed: {
                                jsAddressClass: embed.jsAddressClass,
                            },
                        } only %}
                            {% block fields %}
                                {% set hasBillingAddresses = data.form.id_customer_address is defined %}
                               <div class="{{ config.name }}__checkout-sub-form">
                                   <div class="{{ embed.jsAddressClass }}__billing {{ hasBillingAddresses ? 'is-hidden' }}">
                                       {{ parent() }}
                                   </div>
                               </div>
                           {% endblock %}
                       {% endembed %}
                   </div>
                </div>
            </div>
        {% endblock %}

        {% block actions %}
            {% if app.currentCodeBucket=='DE' %}
                <div class="{{ config.name }}__actions spacing-top spacing-top--bigger">
                    <button id="js-address__buttonSubmit" type="submit" class="{{ data.submit.class }}">{{ data.submit.text }}</button>
                </div>
            {% else %}
                <div class="{{ config.name }}__actions spacing-top spacing-top--bigger">
                    <button id="js-address__buttonSubmit" type="submit" class="{{ data.submit.class }} button--font-CZ button--backgroundcolor-CZ">{{ data.submit.text }}</button>
                </div>
            {% endif %}

            <script>
                document.addEventListener("DOMContentLoaded", function(event) {
                    const idCustomer = document.getElementById("idCustomer").value;
                    if (idCustomer === "") {
                        const phoneDivElement = document.getElementById("addressesForm_shippingAddress_phone").parentElement;
                        const phoneRequiredFieldsGuest = document.getElementById('phoneRequiredFieldsGuest');
                        phoneDivElement.parentNode.insertBefore(phoneRequiredFieldsGuest, phoneDivElement)
                    }
                    else {
                        // TODO: a commented line for the floor field in checkout/address will be put back in the future
                        {% if app.currentCodeBucket != 'CZ' %}
                        document.getElementById("{{ embed.forms.shipping.phone.vars.id }}").value = "{{ data.form.vars.value.customer.phone }}";
                        {% endif %}
                        document.getElementById("{{ embed.forms.shipping.cell_phone.vars.id }}").value = "{{ data.form.vars.value.customer.mobilePhoneNumber }}";
                        document.getElementById("{{ embed.forms.shipping.salutation.vars.id }}").value = "{{ data.form.vars.value.customer.salutation }}";
                        document.getElementById("{{ embed.forms.shipping.first_name.vars.id }}").value = "{{ data.form.vars.value.customer.firstName }}";
                        document.getElementById("{{ embed.forms.shipping.last_name.vars.id }}").value = "{{ data.form.vars.value.customer.lastName }}";
                        document.getElementById("{{ embed.forms.shipping.address1.vars.id }}").value = "{{ data.form.vars.value.customer.address1 }}";
                        document.getElementById("{{ embed.forms.shipping.address2.vars.id }}").value = "{{ data.form.vars.value.customer.address2 }}";
                        {#document.getElementById("{{ embed.forms.shipping.floor.vars.id }}").value = "{{ data.form.vars.value.customer.floor }}";#}
                        document.getElementById("{{ embed.forms.shipping.additional_info.vars.id }}").value = "{{ data.form.vars.value.customer.additionalInfo }}";
                        document.getElementById("{{ embed.forms.shipping.zip_code.vars.id }}").value = "{{ (data.form.vars.value.customer.zipCode is not null ? data.form.vars.value.customer.zipCode : '____') }}";
                        document.getElementById("{{ embed.forms.shipping.city.vars.id }}").value = "{{ (data.form.vars.value.customer.city is not null ? data.form.vars.value.customer.city : '____') }}";

                        var hasBillingAddress = "{{ embed.forms.billing.id_customer_address is defined }}";

                        if(hasBillingAddress === "1"){
                            document.querySelector('label[for="{{ embed.forms.billing.id_customer_address.vars.id }}"]').value = "{{ 'page.checkout.address.billing.address_select' | trans }}";
                            document.querySelector('label[for="{{ embed.forms.billing.id_customer_address.vars.id }}"]').classList.add("{{ config.name ~ '__expand' }}");
                        }
                    }
                });

                const submitButton = document.getElementById("js-address__buttonSubmit");
                submitButton.addEventListener("click", displayMessageRequiredField);

                function displayMessageRequiredField() {
                    const phoneNumber = document.getElementById("addressesForm_shippingAddress_phone");
                    let phoneNumberValue = "";
                    if (phoneNumber)  phoneNumberValue = phoneNumber.value;
                    const mobileNumber = document.getElementById("addressesForm_shippingAddress_cell_phone");
                    const idCustomer = document.getElementById("idCustomer").value;

                    if (phoneNumberValue === "" && mobileNumber.value === "") {
                        event.preventDefault();
                        if (phoneNumber) {
                            if (phoneNumber.value === "") {

                                phoneNumber.style.borderColor = '#cb3d49';
                            }
                        }
                        if (mobileNumber.value === "") {
                            mobileNumber.style.borderColor = '#cb3d49';
                        }
                        if (idCustomer !== "") {
                            const phoneRequiredFields = document.getElementById('phoneRequiredFields');
                            phoneRequiredFields.style.color = '#cb3d49';
                        } else {
                            const phoneRequiredFieldsGuest = document.getElementById('phoneRequiredFieldsGuest');
                            phoneRequiredFieldsGuest.style.color = '#cb3d49';
                        }
                    }
                }
            </script>
        {% endblock %}
    {% endembed %}
{% endblock %}
