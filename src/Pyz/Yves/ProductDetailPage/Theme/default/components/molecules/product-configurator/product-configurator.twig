{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 20,
    depositPrice: null,
    tags: [],
    preisProKg: null,
    currencySymbol: app.currentCurrencySymbol,
} %}

{% set options = [] %}
{% set productName = data.product.name | default %}
{% set sku = data.product.sku %}
{% set idProductAbstract = data.product.idProductAbstract %}
{% set availabilityWidget = '' %}
{% set isProductConcrete = data.product.idProductConcrete is not empty %}
{% set isDisabled = data.product.idProductConcrete is empty or data.product.price is empty %}
{% set isProductAvailable = true %}

{% for index in 1..data.maxQuantity %}
    {% set options = options | merge([{
        label: index,
        value: index
    }]) %}
{% endfor %}

{% set isAvailable = data.product.idProductConcrete and data.product.available %}
{% set isDisabled = not isAvailable or isDisabled %}

{% set productDiscontinuedNoteWidget = findWidget('ProductDiscontinuedNoteWidget', [sku]) %}
{% if productDiscontinuedNoteWidget.isDiscontinued is not null %}
    {% set isDisabled = productDiscontinuedNoteWidget.isDiscontinued or isDisabled %}
    {% set isProductAvailable = not productDiscontinuedNoteWidget.isDiscontinued %}
{% endif %}

{% set productSaleUnit = data.product.attributes['verpackungseinheit'] | default(null) %}
{% set productSaleVolume = data.product.attributes['grundpreisinhalt'] | default(null) %}

{% block body %}
    <script type="text/javascript">
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({
                'event':'eec.PDP',
                'ecommerce':
                    {
                        'detail':
                            {
                                'products':[{
                                    'name': '{{ data.product.name }}',
                                    'id': '{{ data.product.idProductAbstract }}',
                                    'sku': '{{ data.product.sku }}',
                                    'price': '{{ data.product.prices.DEFAULT is not defined ? null : data.product.prices.DEFAULT /100}}',
                                    'list': 'PDP',
                                }],
                            },
                    }
            });
    </script>
    {% if  data.product.attributes['supplier']  is defined %}
        {% if data.product.attributes['supplier'] != 'keine Marke' and data.product.attributes['supplier']  != 'keine' and data.product.attributes['supplier']  != ''%}
            <span class="brand-text">{{ 'product.attribute.manufacturer_name' | trans}}: </span>
            <span>
                {{ data.product.attributes['supplier'] }}
            </span>
        {% endif %}
    {% endif %}

    <h2 class="title title--product">{{ productName }} - {% if data.product.attributes.einzelgewicht is defined %} ca. {{ data.product.attributes.einzelgewicht|replace('.', ',') }} {% else %} {{ productSaleVolume|round(3, 'floor')|replace('.', ',') }}  {% endif %} {% if data.product.attributes["grundpreismasseinheit"] is defined %} {{ data.product.attributes["grundpreismasseinheit"] }} {% endif %}</h2>

    <div class="{{ config.name }}__info">
        {% if data.product.attributes['herkunftsland_o_g'] is defined %}
            <p><strong>{{ 'product.info.additional.origin.country' | trans }}: </strong>
                {% set herkunftsland = data.product.attributes['herkunftsland_o_g']|split(';') %}
                {% for key,land in herkunftsland %}
                    {% if key ==  herkunftsland|length - 1 %}
                        <span>{{ land }}</span>
                        {% else %}
                        <span>{{ land }},</span>
                     {% endif %}
                {% endfor %}
            </p>
        {% endif %}
        <div class="align-right">
            {% widget 'ProductPriceVolumeWidget' args [data.product] only %}
            {% nowidget %}
                {% include molecule('money-price') with {
                    modifiers: ['pdp'],
                    data: {
                        amount: data.product.price,
                        originalAmount: data.product.prices.ORIGINAL is not defined ? null : data.product.prices.ORIGINAL,
                    }
                } only %}
            {% endwidget %}
        </div>

        <div class="grid">
            {% if productSaleVolume > 0 %}
            <div class="text-secondary">
                {% if data.product.attributes.grundeinheit is defined %}
                    {% if data.preisProKg is not null and data.product.attributes.grundeinheit > 0 %}
                        {{(data.preisProKg / 100 ) | round(2, 'common') | replace('.', ',') }} {{ data.currencySymbol }}/{{ data.product.attributes.grundpreismasseinheit }}
                    {% elseif data.preisProKg is null and data.product.attributes.grundeinheit == 0 %}

                    {% else %}
                        {{ ((((data.product.price / 100) / productSaleVolume)) * data.product.attributes.grundeinheit ) | round(2, 'common') | replace('.', ',') }} {{ data.currencySymbol }}/{{ data.product.attributes.grundeinheit }} {{ data.product.attributes.grundpreismasseinheit }}
                    {% endif %}
                {% endif %}
            </div>
            {% endif %}
        </div>
    </div>
    {% include molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}

    <form method="POST" action="{{ path("cart/add", {"sku": idProductAbstract}) }}">
        <input type="hidden" name="token" value="{{ csrf_token('add-to-cart') }}"/>
        {% if data.product.attributes.pfandbetrag is defined %}
            <div class="text-secondary spacing-bottom--bigger">
                {{ 'customer.order.item_price.excluding_pfand' | trans | format(data.product.attributes.pfandbetrag) }}
            </div>
        {% endif %}

        {% widget 'ProductPackagingUnitWidget' args [data.product, isDisabled, options] only %}
        {% elsewidget 'ManageProductMeasurementUnitWidget' args [data.product, isDisabled, options] only %}
        {% nowidget %}

            <div class="grid grid--justify">
                <div class="col col--sm-12 col--lg-5 spacing-bottom">
                    {% if not isDisabled %}
                        {% include molecule('quantity-counter') with {
                            modifiers: ['quantity-large', 'no-spacing'],
                            data: {
                                readOnly: true,
                            },
                        } only %}
                    {% else %}
                        <input type="hidden" class="js-volume-price__quantity"/>
                    {% endif %}

                    {% widget 'ProductDiscontinuedNoteWidget' args [data.product.sku] only %}{% endwidget %}
                </div>
                <div class="col col--sm-12 col--lg-7 spacing-bottom">
                    <button type="submit" class="button button--large button--expand button--alternative" {{ isDisabled ? 'disabled' }} {{ qa('add-to-cart-button') }} data-init-single-click>

                        <span class="icon-basketplus"></span>
                        {{ 'page.detail.add-to-cart' | trans }}
                    </button>
                </div>
            </div>
        {% endwidget %}
    </form>

    {% if not isAvailable and isProductConcrete %}
        {% widget 'AvailabilityNotificationSubscriptionWidget' args [data.product] only %}{% endwidget %}
    {% endif %}

    {% if isProductAvailable %}
        {% include molecule('wishlist-selector-for-pdp', 'WishlistWidget') ignore missing with {
            data: {
                sku: data.product.sku,
                idProductConcrete: data.product.idProductConcrete | default
            }
        } only %}
    {% endif %}

{% endblock %}
