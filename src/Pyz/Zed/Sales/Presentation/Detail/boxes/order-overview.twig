{% embed '@Gui/Partials/widget.twig' with { widget_title: 'checkout.order.overview' | trans } %}
    {% block widget_content %}
        <div class="row">
            <input type="hidden" id="isCurrentUserSupervisorOrAdmin" value="{{ isCurrentUserSupervisorOrAdmin }}">
            <div class="col-xs-12 col-md-4" style="background: #f7f7f7">
                <h3>{{ 'Bestellinformationen' | trans }}</h3>
                <div class="bottom-indent">
                    <dl>
                        <dt>{{ 'Order Reference' | trans }}</dt>
                        <dd style="margin-bottom: 15px">{{ order.orderReference }}</dd>
                        {% if order.collectNumber %}
                            <dt>{{ 'Collect Number' | trans }}</dt>
                            <dd style="margin-bottom: 15px">{{ order.collectNumber }}</dd>
                        {% endif %}
                            <dt>{{ 'Angefratges Lieferdatum' | trans }}:</dt>
                            <dd>{{ requestDeliveryDate }}</dd>
                        <div style="height: 2px;background: lightgrey;width: 100%;margin: 10px 0px"></div>
                        <dt>{{ 'Zone -> Container ID -> Shelf' | trans }}</dt>
                        {% for pickingSalesOrder in containers %}
                            <dd>{{ pickingSalesOrder.zoneName ~ ' -> ' ~ pickingSalesOrder.containerCode ~ ' -> ' ~ pickingSalesOrder.shelfCode}}</dd>
                        {% endfor %}

                        {% if(isCurrentUserSupervisor) %}
                            <dd>
                                <div  id="divAddContainer" style="float: left;">
                                    <?xml version="1.0" encoding="utf-8"?>
                                    <!-- Generator: Adobe Illustrator 22.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
                                    <svg version="1.1" id="Icons" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                         viewBox="0 0 24 24" style="fill:#1BBEA0; width: 20px;padding-top: 4px;" xml:space="preserve">
                                    <g>
                                        <g id="Gruppe_343">
                                            <g id="Gruppe_342">
                                                <path id="Pfad_216" d="M20.8,7.4L20.8,7.4c0-0.1-0.1-0.1-0.1-0.2l-2.8-4.9c-0.2-0.4-0.6-0.6-1-0.6H7.1c-0.4,0-0.8,0.2-1,0.6
                    l-2.9,5c0,0,0,0.1-0.1,0.1c0,0.1-0.1,0.2-0.1,0.4v12.9c0,0.8,0.6,1.4,1.4,1.4h15c0.8,0,1.4-0.6,1.4-1.4v-13c0,0,0,0,0-0.1
                    C20.9,7.6,20.9,7.5,20.8,7.4z M12.6,3h4.2l2.2,3.9h-6.5V3z M7.1,3h4.3v3.9H4.9L7.1,3z M19.7,20.8c0,0.1-0.1,0.2-0.2,0.2h-15
                    c-0.1,0-0.2-0.1-0.2-0.2V8h15.4V20.8z"/>
                                            </g>
                                        </g>
                                        <g id="Gruppe_345" transform="translate(8.618 14.323)">
                                            <g id="Gruppe_344">
                                                <path id="Pfad_217" d="M5.9-0.4H4v-1.9c0-0.3-0.3-0.6-0.6-0.6c-0.3,0-0.6,0.3-0.6,0.6c0,0,0,0,0,0v1.9H0.8
                    c-0.3,0-0.6,0.3-0.6,0.6c0,0.3,0.3,0.6,0.6,0.6h1.9v1.9c0,0.3,0.3,0.6,0.6,0.6C3.7,3.3,4,3.1,4,2.7c0,0,0,0,0,0V0.8h1.9
                    c0.3,0,0.6-0.3,0.6-0.6C6.5-0.1,6.2-0.4,5.9-0.4z"/>
                                            </g>
                                        </g>
                                    </g>
                                </svg>
                                    <div style="float: right; margin-top: 4px;">
                                        <button type="button" id="btnAddContainer" style="border:none;background-color: transparent;color: #18a689;"> {{ 'Add Container' | trans }}</button>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </dd>
                            <form name="formAddZoneContainerShelf" method="post" action="">
                                <div id="divAddContainerAndShelf" style="display: none">
                                    <dd id="labelContainerAndShelf" style="margin-top: 8px;"></dd>
                                    <select id="pickingZones" name="pickingZones" required="required" class="form-control" style="width:40%">
                                        <option value="">{{ 'Zone ausw√§hlen' | trans }}</option>
                                        {% for idZone,nameZone  in pickingZonesForContainers %}
                                            <option value="{{ idZone }}">{{ nameZone }}</option>
                                        {% endfor %}
                                    </select>
                                    <input type="hidden" id="frmContainerShelf_idSalesOrder" name="frmContainerShelf_idSalesOrder" value="{{ order.idSalesOrder }}">
                                    <input id="inputContainer" name="inputContainer" type="hidden" class="form-control" required="required" placeholder="{{ 'Container hinzufugen' | trans }}" style="width:40%">
                                    <input id="inputShelf" name="inputShelf" type="hidden" class="form-control" required="required" placeholder="{{ 'Lagerplatz zuweisen' | trans }}" style="width:40%">
                                    <button id='btnSaveContainer' type="submit" class="btn btn-primary" style="margin-right:10px; margin-left: 10px">{{ 'Save' | trans }}</button>
                                    <button id='btnCancelAction' type="button" class="btn">X</button>
                                </div>
                                <p id="errorMessage" style="color:red"></p>
                            </form>
                        {% endif %}

                        {% if order.cartNote %}
                            <dt style="margin-top: 15px">{{ 'Customer Comment' | trans }}</dt>
                            <dd>{{ order.cartNote }}</dd>
                        {% endif %}
                    </dl>
                </div>
            </div>

            <div class="col-xs-12 col-md-8 bottom-indent">
                <div class="row">
                    <div class="col-lg-4" style="margin-left: 60px">
                        <h3>{{ 'Customer Information' | trans }}</h3>
                        {% if customerTransfer and customerTransfer.firstName and customerTransfer.lastName %}
                            <div style="margin-bottom: 15px;margin-top: 15px">
                                <span style="font-weight: bold">{{ 'Name' | trans }}</span><br/>
                                {{ customerTransfer.firstName }} {{ customerTransfer.lastName }}
                            </div>
                        {% endif %}
                        {% if address and address.phone %}
                            <div style="margin-bottom: 15px">
                                <span style="font-weight: bold">{{ 'Phone Number' | trans }}</span><br/>
                                <div>{{ address.phone }}</div>
                            </div>
                        {% endif %}
                        {% if customerTransfer and customerTransfer.email %}
                            <div style="margin-bottom: 15px">
                                <span style="font-weight: bold">{{ 'Email' | trans }}</span><br/>
                                <div>{{ customerTransfer.email }}</div>
                            </div>
                        {% endif %}
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Billing address' | trans }}</span>
                            <div>{{ order.billingAddress.firstName ~ ' '
                                ~ order.billingAddress.lastName ~ ', '
                                ~ order.billingAddress.address1 ~ ' '
                                ~ order.billingAddress.address2 ~ ', '
                                ~ order.billingAddress.zipCode ~ ' '
                                ~ order.billingAddress.city ~ ', '
                                ~ order.billingAddress.country.name }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Order date' | trans }}</span>
                            <div>
                                {{ order.createdAt | formatDateTime }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Previous orders count' | trans }}</span>
                            <div>{{ order.totalOrderCount }}</div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Reference' | trans }}</span>
                            <div><a href="{{ url('/customer/view', {'id-customer': order.fkCustomer}) }}" target="_blank">{{ order.customerReference }}</a></div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ "Payment method" | trans }}</span>
                            <div>
                                {% if payments %}
                                    {% for payment in payments %}
                                        <span>{{ payment.paymentMethod }}</span><br/>
                                    {% endfor %}
                                {% endif %}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ "Amount" | trans }}</span>
                            <div>
                                {% if payments %}
                                    {% for payment in payments %}
                                        <span>{{ payment.amount | money(true, order.currencyIsoCode) }}</span><br/>
                                    {% endfor %}
                                {% endif %}
                            </div>
                         </div>
                    </div>
                    <div class="col-lg-4" style="margin-left: 160px">
                        <h3>{{ 'Sonstige Informationen' | trans }}</h3>
                        <div style="margin-bottom: 15px;margin-top: 15px">
                            <span style="font-weight: bold">{{ 'Filiale Adresse' | trans }}</span>
                            <div>
                                {{ order.merchantName }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px;">
                            <span style="font-weight: bold">{{ 'Division Nummer' | trans }}</span>
                            <div>
                                {{ order.merchantRegionNumber }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px;">
                            <span style="font-weight: bold">{{ 'Filiale' | trans }}</span>
                            <div>
                                {{ order.merchantFilialNumber }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Delivery Address' | trans }}</span><br/>
                            <div>
                                {{ address.salutation
                                ~ ' ' ~ address.firstName ~ ' '
                                ~ address.lastName ~ ', '
                                ~ address.address1 ~ ' '
                                ~ address.address2 ~ ', '
                                ~ address.additionalInfo ~ ' '
                                ~ address.company ~ ', '
                                ~ address.zipCode ~ ', '
                                ~ address.city ~ ', '
                                ~ address.country.name}}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Delivery Method' | trans }}</span><br>
                            <div>
                                {{ shipping.carrier.name }}
                            </div>
                        </div>
                        <div style="margin-bottom: 15px">
                            <span style="font-weight: bold">{{ 'Shipping Method' | trans }}</span><br>
                            <div>
                                {{ shipping.method.name }}
                            </div>
                        </div>
                        {% for blockName, externalBlock in blocksToRenderForCustomer %}
                            {% if blockName == 'discount' %}
                                {% set customExternalBlock = externalBlock|split('Rabatte und Gutscheine') %}
                                <div style="margin-bottom: 15px">
                                    <span style="font-weight: bold">{{ 'Rabatte und Gutscheine' | trans }}</span>
                                    <div class="discount">{{ customExternalBlock[1] | raw }}</div>
                                </div>
                            {% endif %}
                            {% if blockName == 'refund' %}
                                {% set customExternalBlock = externalBlock|split('R√ºckerstattung') %}
                                <div style="margin-bottom: 15px">
                                    <span style="font-weight: bold">{{ 'R√ºckerstattung' | trans }}</span>
                                    <div class="refund">{{ customExternalBlock[1] | raw }}</div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
                <div>
                    <div id="myModal" class="modal">
                        <div class="popUp-modal-content">
                            <div class="popUp-modal-header">
                                <span class="close">&times;</span>
                                <h3>Bestellung stornieren</h3>
                            </div>
                            <div class="popUp-modal-body">
                                <p>M√∂chten Sie die Bestellung: {{ order.orderReference }} wirklich stornieren?</p>
                                <hr/>

                            </div>
                            <div class="popUp-modal-footer">
                                <button type="button" id="modalConfirmNo" class="btn btn-invertedPrimary btn-sm">Nein, abbrechen</button>
                                <button type="button" id="modalConfirmYes" class="btn btn-customPrimary btn-sm">Ja, Bestellung stornieren</button>
                            </div>
                        </div>
                    </div>
                </div>
            <div id="omsActions" class="col-md-12">
                {% embed '@Gui/Partials/widget.twig' with { widget_title: 'Trigger all matching states inside this order' } %}
                    {% block widget_content %}
                        {% include '@Oms/RenderForm/_partial/order-actions.twig' with {
                            redirectUrl: changeStatusRedirectUrl,
                            idSalesOrder: order.idSalesOrder,
                            pickingZone: null,
                            events: events,
                        } only %}
                    {% endblock %}
                {% endembed %}
            </div>
        </div>

        <script type="text/javascript">

            document.addEventListener('DOMContentLoaded', function(event) {

                    var actionButtons = '{{ buttons | json_encode | raw }}';
                    actionButtons = JSON.parse(actionButtons); // to convert json into a javascript object
                    if(actionButtons.length > 0){

                        if(actionButtons.includes("Cancel")){
                            var btnOmsActions = document.getElementById("omsActions");
                            let omsActionForms = btnOmsActions.querySelectorAll("form.oms-trigger-form");

                            for(let i = 0;i<omsActionForms.length;i++){
                                let action = omsActionForms[i].getAttribute("action");
                                if(action.includes("/oms/trigger/submit-trigger-event-for-order?event=cancel")){
                                    omsActionForms[i].style.display = "none";
                                }
                                if(i == omsActionForms.length - 1){
                                    var btnText = omsActionForms[i];
                                    var node = '<button type="button" id="oms_trigger_form_submit_cancel" name="oms_trigger_formCancel[submit]" class="btn btn-danger btn-sm">Cancel</button>';
                                    var last = btnOmsActions.querySelector(".ibox-content");
                                    last.insertAdjacentHTML('beforeend', node);
                                }
                            }


                        }

                    }

                    // Get the modal
                    var modal = document.getElementById("myModal");

                    // Get the button that opens the modal
                    var btn = document.getElementById("oms_trigger_form_submit_confirm selecting containers");

                    var btnCancel = document.getElementById("oms_trigger_form_submit_cancel");

                    // Get the <span> element that closes the modal
                    var span = document.getElementsByClassName("close")[0];

                    // Get the <button> element that closes the modal
                    var btnConfirmNo = document.getElementById("modalConfirmNo");

                    // Get the <button> element that cancels the order
                    var btnConfirmYes = document.getElementById("modalConfirmYes");



                    if(btnCancel != null){


                        // When the user clicks on the button, open the modal
                        btnCancel.onclick = function() {
                            modal.style.display = "block";
                        }
                    }

                    // When the user clicks on <span> (x), close the modal
                    span.onclick = function() {
                        modal.style.display = "none";
                    }

                    // When the user clicks on button "Nein" inside of pop up, close the modal
                    btnConfirmNo.onclick = function() {
                        modal.style.display = "none";
                    }

                    btnConfirmYes.onclick = function() {
                        let omsActionForms = btnOmsActions.querySelectorAll("form.oms-trigger-form");

                        for(let i = 0;i<omsActionForms.length;i++){
                            let action = omsActionForms[i].getAttribute("action");
                            if(action.includes("/oms/trigger/submit-trigger-event-for-order?event=cancel")){
                                omsActionForms[i].submit();
                                return;
                            }
                        }
                    }
            })

            const divAddContainer = document.getElementById('divAddContainer');
            const divAddContainerAndShelf = document.getElementById('divAddContainerAndShelf');
            const frmContainerShelf_idSalesOrder = document.getElementById('frmContainerShelf_idSalesOrder');
            const pickingZones = document.getElementById('pickingZones');
            const inputContainer = document.getElementById('inputContainer');
            const inputShelf = document.getElementById('inputShelf');
            const labelContainerAndShelf = document.getElementById('labelContainerAndShelf');
            const errorMessage = document.getElementById('errorMessage');
            const btnAddContainer = document.getElementById('btnAddContainer');
            const btnCancelAction = document.getElementById('btnCancelAction');
            const btnSaveContainer = document.getElementById('btnSaveContainer');

            btnAddContainer.addEventListener('click', function() {
                hideOrShowElement(divAddContainer, 'none', divAddContainerAndShelf, 'flex');
            });
            btnCancelAction.addEventListener('click', function() {
                hideOrShowElement(divAddContainer, 'block', divAddContainerAndShelf, 'none');
                resetForm();
            });
            btnSaveContainer.addEventListener('click', function() {
                errorMessage.textContent = '';
                if (pickingZones.value !== "" && inputContainer.getAttribute('type') === "hidden" && inputShelf.getAttribute('type') === "hidden") {
                    labelContainerAndShelf.textContent = pickingZones.options[pickingZones.selectedIndex].text + ' -> ';
                    pickingZones.classList.add('hidden');
                    inputContainer.setAttribute('type', 'text');
                    event.preventDefault();
                } else if (inputContainer.value !== "" && inputShelf.getAttribute('type') === "hidden") {
                    if (inputContainer.value.length !== 8) {
                        event.preventDefault();
                        errorMessage.textContent = 'Container-ID muss 8 Zeichen haben';
                    } else {
                        setContainerToZone();
                    }
                } else if (inputShelf.value !== "" && inputContainer.getAttribute('type') === "hidden") {
                    let firstChar = (inputShelf.value.charAt(0));
                    let reg = new RegExp (/^[A-Z]+$/g);
                    let regTest = reg.test(firstChar);
                    if (!regTest) {
                        event.preventDefault();
                        inputShelf.value = "";
                        errorMessage.textContent = 'Der erste Buchstabe muss Gro√übuchstaben sein';
                    }
                }
            });

            function setContainerToZone() {
                event.preventDefault();
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState === 4 && this.status === 200) {
                        var dataParse = JSON.parse(this.response);
                        if (dataParse['error'] === true) {
                            inputContainer.value = "";
                            errorMessage.textContent = 'Container ID bereits vergeben';
                        } else {
                            labelContainerAndShelf.textContent = pickingZones.options[pickingZones.selectedIndex].text + ' -> ' + inputContainer.value + ' -> ';
                            inputContainer.setAttribute('type', 'hidden');
                            inputShelf.setAttribute('type', 'text');
                        }
                    }
                };
                xhttp.open("POST", window.location.origin + "/sales/detail/set-json-container-to-zone?idZone=" + pickingZones.value + "&containerID=" + inputContainer.value + '&idSalesOrder=' + frmContainerShelf_idSalesOrder.value, true);
                xhttp.send();
            }

            function hideOrShowElement(element1, displayProperty1, element2, displayProperty2) {
                element1.style.display = displayProperty1;
                element2.style.display = displayProperty2;
            }

            function resetForm() {
                errorMessage.textContent = '';
                labelContainerAndShelf.textContent = '';
                pickingZones.value = '';
                inputContainer.value = '';
                inputShelf.value = '';
                pickingZones.classList.remove('hidden');
                inputContainer.setAttribute('type', 'hidden');
                inputShelf.setAttribute('type', 'hidden');
            }
        </script>
    {% endblock %}
{% endembed %}
