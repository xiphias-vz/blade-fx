{% extends model('component') %}

{% define config = {
    name: 'product-item',
    tag: 'product-item',
} %}

{% define data = {
    imageUrl: '',
    title: '',
    productsCount: required,
    itemSku: '',
    idSalesOrder: required,
    urlContainerSelect: '',
    itemsToProductAttributesMap: [],
    itemsToShelfMap:[],
    formStoppedSku: '',
    alternativeEanData: ''
} %}

{% set itemsToShelfMap = data.itemsToProductAttributesMap %}
{% set imageUrl = data.imageUrl %}
{% set shelfData = data.itemsToShelfMap %}
{% set title = data.field.vars.label %}
{% set productsCount = data.field.vars.attr.max %}
{% set orderWeight = (itemsToShelfMap['weightPerUnit'] ?? 0) * data.productsCount  %}

{% block body %}
    <div id="gridOfTheProduct" class="grid {{ config.name }}__card" data-sku="{{ data.itemSku }}">
        <input type="hidden" id="formPreviousSku" value="{{ data.formStoppedSku }}">
        <div class="col col--expand">
            <div class="box {{ config.name }}__info">
                <div class="{{ config.name }}__item-location">
                    <p>{{ shelfData['shelf'] ?? ''}}-{{ shelfData['shelfField'] ?? ''}}-{{ shelfData['shelfFloor'] ?? ''}}</p>
                </div>
                <div class="{{ config.name }}__image-wrapper">
                    {% include atom('thumbnail') with {
                        modifiers: ['product'],
                        attributes: {
                            src: data.imageUrl,
                            alt: data.title
                        }
                    } only %}
                </div>

                <div class="{{ config.name }}__generalInfo">
                    {% block brandNameAndWeight %}
                        {% set price = itemsToShelfMap['pricePerKg'] ?? shelfData['sumPrice'] %}
                        <div class="{{ config.name }}__supplierNameAndWeight"><span class="{{ config.name }}__supplierAndName col--md-8">{{ itemsToShelfMap['brand'] ?? '' }} - {{ title|split('-')[1] }}</span><span class="{{ config.name }}__weight col--md-4">{{ (itemsToShelfMap['basePriceContent'] / 100)  | replace('.', ',') }} {{ itemsToShelfMap['basePriceUnit'] }}</span></div>
                        <div class="eanData" class="{{ config.name }}__eanAndWeight" data-pricePerKg="{{ itemsToShelfMap['pricePerKg'] }}" data-ean="{{ data.itemSku }}"><span class="{{ config.name }}__ean col--md-8"><span class="{{ config.name }}__toBold">EAN: {{ data.itemSku ?? '' }}</span></span><span class="{{ config.name }}__price col--md-4">{{ price / 100 | replace('.', ',') }} â‚¬</span></div>
                    {% endblock %}
                    <div class="hr-line-solid"></div>
                </div>
                <span class="alternativeEan" data-altEan="{{ data.alternativeEanData }}"></span>
                <div class="{{ config.name }}__status">
                    {% include atom('icon') with {
                        class: config.name ~ '__icon-close',
                        data: {
                            name: 'close'
                        }
                    } only %}
                    {% include atom('icon') with {
                        class: config.name ~ '__icon-check',
                        data: {
                            name: 'check'
                        }
                    } only %}
                </div>
                {% block quantity %}
                    {% if data.productsCount >= 1 %}
                <div class="outer_div">
                        <div class="col--md-4 col--sm-4"></div>
                        <div class="col--md-4 col--sm-4 {{ config.name }}__quantity">
                            <div class="{{ config.jsName }}__minus {{ config.name }}__minus spacing-right spacing-right--inner">
                                {% include atom('icon') with {
                                    data: {
                                        name: 'remove'
                                    }
                                } only %}
                            </div>
                            <div class="box box--white box--bordered box--spaceless {{ config.name }}__counter text-center">
                                <span class="{{ config.jsName }}__quantity-output">
                                    0
                                </span>
                                {{ 'of' | trans }} {{ data.productsCount }}
                            </div>
                            <div class="{{ config.jsName }}__plus {{ config.name }}__plus spacing-left spacing-left--inner">
                                {% include atom('icon') with {
                                    data: {
                                        name: 'add'
                                    }
                                } only %}
                            </div>
                        </div>
                        <div class="col--md-4 col--sm-4 avg_weight">
                            {% if orderWeight != 0 %}<span> {{ orderWeight }}gr</span>{% endif %}
                        </div>
                </div>
                    {% endif %}
                    <div class="is-hidden">
                        {% block formElement %}{% endblock %}
                    </div>
                {% endblock %}

                {% block formElementWeight %}
                    {% if embed.weightField %}
                        {{ form_row(embed.weightField, {
                            attr: {
                                class: config.jsName ~ '__weight',
                            }
                        }) }}
                    {% endif %}
                {% endblock %}
                {% block formElementScan %}<div id="eanScannenDiv"><input class="input input--expand ean_scan_input" id="txt_ean_scannen__{{ data.itemSku }}" placeholder="EAN scannen" class="input input--expand" type="text" /></div>{% endblock %}
            </div>
        </div>
    </div>
    <div class="grid grid--justify spacing-top">
        {% block leftCol %}
            <div class="col button button--round button--delete {{ config.name }}__decline {{ config.jsName }}__decline">
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__close',
                    data: {
                        name: 'close'
                    }
                } only %}
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__undo',
                    data: {
                        name: 'undo'
                    }
                } only %}
            </div>
        {% endblock %}
        {% block midCol %}
            <div class="col button button--round button--disabled button--pause {{ config.name }}__pause {{ config.jsName }}__pause">
                {% include atom('icon') with {
                    class: 'button__icon',
                    data: {
                        name: 'pause'
                    }
                } only %}
            </div>
        {% endblock %}
        {% block rightCol %}
            <div class="col button button--round button--accept {{ config.name }}__pick {{ config.jsName }}__accept">
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__accept',
                    data: {
                        name: 'add'
                    }
                } only %}
            </div>
        {% endblock %}
    </div>
    {% include molecule('additional-order-buttons') with {
        data: {
            idSalesOrder: data.idSalesOrder,
            urlContainerSelect: data.urlContainerSelect,
            itemSku: data.itemSku,
        }
    } only %}

    {% set popupParam = data.itemSku ?? '0' %}

    {% embed molecule('popup-ui-error') with {
        data: {
            isErrorTrue: 0,
            isPopUpErrorForPickingArticles: popupParam,
            buttons: {
                submit: {
                    isButton: true,
                    additionalClass: '',
                },
            },
        },
    } only %}
        {% block content %}
            <div class="popup-error-holder">
                <div class="error-status">Fehler</div>
                <div class="error-info">
                    <p class="container-desc"></p>
                </div>
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}
