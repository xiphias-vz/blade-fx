{% extends model('component') %}

{% define config = {
    name: 'product-item-multiple-picking',
    tag: 'product-item-multiple-picking',
} %}

{% define data = {
    currentPositionData: [],
    pickingOrderItemsData: [],
    productsCount: required,
    idSalesOrder: required,
    urlContainerSelect: '',
    urlMultiPickingOverview: '',
    urlPosListe: '',
    urlScanShelves: '',
    orderPosition: '',
    orderItemPosition: '',
    isLastPosition: '',
    listOfContainers: '',
    openModal: '',
    fromPosListeAndModal: '',
    orderItemStatus: '',
    itemPickingStartTime: '',
    isSubstitutionAllowed: '',
    isSubstitutionFound: '',
} %}

{% set title = data.currentPositionData['name'] %}
{% set orderReference = data.currentPositionData['orderReference'] %}
{% set brand = data.currentPositionData['brandName'] %}
{% set imageUrl = data.currentPositionData['pictureUrl'] %}
{% set itemSku = data.currentPositionData['ean'] %}
{% set ean = data.currentPositionData['ean'] %}
{% set alternativeEan = data.currentPositionData['alternativeEan'] %}
{% set pickingItemPosition = data.currentPositionData['pickingItemPosition'] %}

{% set shelf = data.currentPositionData['shelf'] %}
{% set shelfFloor = data.currentPositionData['shelfFloor'] %}
{% set shelfField = data.currentPositionData['shelfField'] %}

{% set orderWeight = (data.currentPositionData['weight'] ?? 0) * data.productsCount  %}
{% set basePriceContent = data.currentPositionData['priceContent'] %}
{% set basePriceUnit = data.currentPositionData['priceUnit'] %}
{% set sumPrice = data.currentPositionData['sumPrice'] %}
{% set pricePerKg = data.currentPositionData['pricePerKg'] %}
{% set price = data.currentPositionData['price'] %}
{% set currentPositionQuantity = data.currentPositionData['quantity'] %}
{% set currentPositionQuantityPicked = data.currentPositionData['quantityPicked'] %}

{% set isPaused = data.currentPositionData['isPaused'] %}
{% set pausedDisabledClass = "" %}
{% if isPaused == "1" %}
    {% set pausedDisabledClass = "button--disabled" %}
{% endif %}

{% set articlesData = data.pickingOrderItemsData %}
{% set currentArticleColors = data.currentPositionData['pickingColor'] %}

{% block body %}
    <div id="gridOfTheProduct" class="grid {{ config.name }}__card" data-sku="{{ itemSku }}">
        <input type="hidden" id="formPreviousSku" value="{{ itemSku }}">
        <input type="hidden" id="idOpenModal" value="{{ data.openModal }}">
        <input type="hidden" id="orderReference" value="{{ orderReference }}">
        <input type="hidden" id="orderItemStatus" value="{{ data.orderItemStatus }}">
        <input type="hidden" id="listOfIdContainers" value="{{ data.listOfContainers }}">
        <input type="hidden" id="itemPickingStartTime" value="{{ data.itemPickingStartTime }}">
        <input type="hidden" id="isSubstitutionAllowed" value="{{ data.isSubstitutionAllowed }}">
        <input type="hidden" id="isSubstitutionPicked" value="false">
        <input type="hidden" id="isSubstitutionFound" value="{{ data.isSubstitutionFound }}">
        <div class="col col--expand">
            <div class="box {{ config.name }}__info">
                <div class="{{ config.name }}__item-head-box">
                    <div class="{{ config.name }}__item-position">
                        <p class="{{ config.name }}__circle-position" style="color:{{ currentArticleColors.foreColor }}; background-color: {{ currentArticleColors.backColor }}; padding-top: 0.2rem; border: 2px solid {{ currentArticleColors.circleColor }};">{{ currentArticleColors.idColor }}</p>
                        {% if data.isSubstitutionAllowed == '' or data.isSubstitutionAllowed == '0' %}
                            {% include atom('icon') with {
                                class: 'icon-substitute-item',
                                modifiers: ['big'],
                                data: {
                                    name: 'icon-not-substitutes',
                                },
                            } only %}
                            {% else %}
                                {% include atom('icon') with {
                                    class: 'icon-substitute-item product-item-multiple-picking--hide',
                                    modifiers: ['big'],
                                    data: {
                                        name: 'icon-substitutes',
                                    },
                                } only %}
                        {% endif %}
                    </div>
                    <div class="{{ config.name }}__item-location">
                        <p>{{ shelf ?? ''}}-{{ shelfField ?? ''}}-{{ shelfFloor ?? ''}}</p>
                    </div>
                </div>

                <div class="{{ config.name }}__image-wrapper">
                    {% include atom('thumbnail') with {
                        modifiers: ['product'],
                        attributes: {
                            src: imageUrl,
                            alt: title
                        }
                    } only %}
                </div>

                <div class="{{ config.name }}__generalInfo">
                    {% block brandNameAndWeight %}
                        {% set itemPrice = pricePerKg ?? price %}
                        <div class="{{ config.name }}__supplierNameAndWeight"><span class="{{ config.name }}__supplierAndName col--md-8">{{ brand ?? '' }} - {{ title }}</span><span class="{{ config.name }}__weight col--md-4">{{ (basePriceContent / 100)  | replace('.', ',') }} {{ basePriceUnit }}</span></div>
                        <div class="{{ config.name }}__eanAndWeight eanData" data-pricePerKg="{{ pricePerKg }}" data-ean="{{ itemSku }}"><span class="{{ config.name }}__ean col--md-8"><span class="{{ config.name }}__toBold">EAN: {{ itemSku ?? '' }}</span></span><span class="{{ config.name }}__price col--md-4">{{ (itemPrice / 100) | replace('.', ',') }} â‚¬</span></div>
                    {% endblock %}
                </div>
                <span class="alternativeEan" data-altEan="{{ alternativeEan }}"></span>
                <div class="hr-line-solid"></div>
                    {% include molecule('order-articles-with-colors') with {
                        data: {
                            orderNumber: pickingItemPosition,
                            articles: articlesData,
                            sku: itemSku,
                            fromPosListeAndModal: data.fromPosListeAndModal,
                        }
                    } only %}
                <div class="hr-line-solid"></div>
                <div class="{{ config.name }}__status">
                    {% include atom('icon') with {
                        class: config.name ~ '__icon-close',
                        data: {
                            name: 'close'
                        }
                    } only %}
                    {% include atom('icon') with {
                        class: config.name ~ '__icon-pause',
                        data: {
                            name: 'pause'
                        }
                    } only %}
                    {% include atom('icon') with {
                        class: config.name ~ '__icon-check',
                        data: {
                            name: 'check'
                        }
                    } only %}
                </div>
                {% block quantity %}
                    {% if data.productsCount >= 1 %}
                        <div class="outer_div">
                            <div class="col--md-4 col--sm-3"></div>
                            <div class="col--md-4 col--sm-6 {{ config.name }}__quantity">
                                <div class="{{ config.jsName }}__minus {{ config.name }}__minus spacing-right spacing-right--inner">
                                    {% include atom('icon') with {
                                        data: {
                                            name: 'remove'
                                        }
                                    } only %}
                                </div>
                                <div class="box box--white box--bordered box--spaceless {{ config.name }}__counter text-center">
                                <span class="{{ config.jsName }}__quantity-output">
                                    {{ currentPositionQuantityPicked }}
                                </span>
                                    {{ 'of' | trans }} {{ data.productsCount }}
                                </div>
                                <div class="{{ config.jsName }}__plus {{ config.name }}__plus spacing-left spacing-left--inner">
                                    {% include atom('icon') with {
                                        data: {
                                            name: 'add'
                                        }
                                    } only %}
                                </div>
                            </div>
                            <div class="col--md-4 col--sm-3 avg_weight">
                                {% if orderWeight != 0 %}<span> {{ orderWeight }} gr</span>{% endif %}
                            </div>
                        </div>
                    {% endif %}
                    <div class="is-hidden">
                        {% block newFormElement %}
                            <label for="order_item_selection_form_field_sales_order_item_sku__{{ itemSku }}" class="label label--required">{{ itemSku }} -
                                {{ title }}</label>
                            <input id="order_item_selection_form_field_sales_order_item_sku__{{ itemSku }}" type="number" class="js-product-item-multiple-picking__quantity" min="0" max="{{ data.productsCount }}" />
                        {% endblock %}
                    </div>
                {% endblock %}

                {% block ElementWeight %}
                    {% if data.currentPositionData.totalWeight is defined and data.currentPositionData.totalWeight is not null %}
                        {% set weightField = data.currentPositionData.totalWeight|round %}
                        {% set minWeight = data.currentPositionData.minWeight|round %}
                        {% set maxWeight = data.currentPositionData.maxWeight|round %}

                        <div class="weightFieldDiv">
                            <div class="{{ config.name }}__weightContainer">
                                <div class="col col--md-4 col--sm-5 col--xs-5">
                                    <label for="order_item_selection_form_field_sales_order_item_new_weight" class="label label--required">
                                        {{ 'multi.picking.product.attribute.weight' | trans }} (gr)
                                    </label>
                                </div>
                                <div class="col col--md-8 col--sm-7 col--xs-7">
                                    <input id="order_item_selection_form_field_sales_order_item_new_weight"
                                           name="order_item_selection_form[field_sales_order_item_new_weight]"
                                           required="required"
                                           min="{{ minWeight }}"
                                           max="{{ maxWeight }}"
                                           class="input input--expand js-product-item-multiple-picking__weight"
                                           type="number">
                                </div>
                            </div>
                        </div>
                    {% endif %}
                {% endblock %}
                {% block formElementScan %}
                    <div id="eanScannenDiv">
                        <input class="input input--expand ean_scan_input" id="txt_ean_scannen" placeholder="{{ 'product-item.multiple.picking.placeholder' | trans }}" type="text" />
                    </div>
                    <div class="weightScanContainer"></div>
                {% endblock %}
            </div>
        </div>
    </div>
    <div class="grid grid--justify spacing-top">
        {% block leftCol %}
            <div class="col button button--round button--delete {{ config.name }}__decline {{ config.jsName }}__decline">
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__close',
                    data: {
                        name: 'close'
                    }
                } only %}
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__undo',
                    data: {
                        name: 'undo'
                    }
                } only %}
            </div>

            <div id="btnSubmitPick" class="col button button--round button--continue {{ config.name }}__continue {{ config.jsName }}__continue button--continue popup-ui__open">
                <span class="product-item-multiple-picking__text-continue">
                    {{ 'picker.picking.confirmation' | trans }}
                </span>
            </div>
        {% endblock %}
        {% block midCol %}
            <div class="col button button--round button--pause {{ config.name }}__pause {{ config.jsName }}__pause">
                {% include atom('icon') with {
                    class: 'button__icon',
                    data: {
                        name: 'pause'
                    }
                } only %}
            </div>
        {% endblock %}
        {% block rightCol %}
            <div class="col button button--round button--accept {{ config.name }}__pick {{ config.jsName }}__accept">
                {% include atom('icon') with {
                    class: 'button__icon ' ~ config.name ~ '__accept',
                    data: {
                        name: 'add'
                    }
                } only %}
            </div>
        {% endblock %}
    </div>

    <div id="pickingItemPositionDiv" data-pickingItemPosition="{{ pickingItemPosition }}"></div>
    <div id="lastPositionDataDiv" data-lastPositionData="{{ data.isLastPosition }}"></div>

    {% embed molecule('popup-ui-error') with {
        data: {
            isErrorTrue: 0,
            isPopUpErrorForPickingArticles: 1,
            buttons: {
                submit: {
                    isButton: true,
                    additionalClass: '',
                },
            },
        },
    } only %}
        {% block content %}
            <div class="popup-error-holder">
                <div class="error-status">Fehler</div>
                <div class="error-info">
                    <p class="container-desc"></p>

                </div>
            </div>
        {% endblock %}
    {% endembed %}

    {% embed molecule('popup-ui-container-scan') with {
        data: {
            title: currentArticleColors.idColor,
            buttons: {
                submit: {
                    isButton: false
                },
                close: true
            },
            headerBackgroundColor: currentArticleColors.backColor,
            headerTextColor: currentArticleColors.foreColor,
            borderColor: currentArticleColors.circleColor,
            borderRadius: 0,
            onCloseExecuteCode: 'document.querySelector("#btnSubmitPick").classList.remove("button--disabled");'
        }
    } only %}
        {% block content %}
            <div class="grid grid--center">
                {% block formElementScan %}
                    <div id="containerScanDiv">
                        <input class="input input--expand" id="txt_container_scan" placeholder="{{ 'picking.app.containers.scan.container' | trans }}" type="text" />
                    </div>
                {% endblock %}
            </div>
        {% endblock %}

    {% endembed %}

    {% embed molecule('popup-ui-substitute') with {
        data: {
            title: 'multi.picking.substitutes.popupui.title' | trans,
            buttons: {
                submit: {
                    isButton: true
                },
                cancel: {
                    isButton: true
                },
            },
            borderRadius: 0
        }
    } only %}
        {% block content %}
            <div>
                {% block formMessage %}
                    <div id="substituteMessage">
                        <p>{{ 'multi.picking.substitutes.popupui.message' | trans }}</p>
                    </div>
                {% endblock %}
            </div>
        {% endblock %}

    {% endembed %}

    {% include molecule('multi-picking-additional-order-buttons') with {
        data: {
            idSalesOrder: data.idSalesOrder,
            urlContainerSelect: data.urlContainerSelect,
            urlMultiPickingOverview: data.urlMultiPickingOverview,
            urlPosListe: data.urlPosListe,
            itemSku: itemSku,
            orderPosition: data.orderPosition,
            orderItemPosition: data.orderItemPosition,
            position: pickingItemPosition,
        }
    } only %}

        <div id="lastPickingPositionDialog">
            {% embed molecule('popup-ui-container-scan') with {
                data: {
                    title: 'multi.picking.order.dialog.title' | trans,
                    buttons: {
                        close: false
                    },
                    headerBorderBottomColor: '#707070',
                    borderRadius: 0,
                    textAlign: "left",
                    urlScanShelves: data.urlScanShelves,
                    itemSku: itemSku
                }
            } only %}
            {% block content %}
                <div class="grid grid--center">
                    <div style="margin-bottom: 40px;">{{ 'multi.picking.order.dialog.content' | trans }}</div>
                    <button type="button" onclick="multiPickingOverview({{ data.itemSku }}, 'true')" class="button button--expand dialogCheckPickButtons" style="margin-bottom: 10px">
                    <span class="col--md-4">
                            {% include atom('icon') with {
                                data: {
                                    name: 'overview',
                                    rowText:  'multi.picking.header.overview' | trans
                                }
                            } only %}
                        </span>
                        <span class="col--md-8">{{ 'multi.picking.header.overview' | trans }}</span>
                    </button>
                    <button type="button" onclick="posListeForm({{ data.itemSku }}, 'true')" class="button button--expand dialogCheckPickButtons" style="margin-bottom: 100px;">
                     <span class="col--md-4">
                            {% include atom('icon') with {
                                data: {
                                    name: 'posliste',
                                    rowText: 'multi.picking.header.position.liste' | trans
                                }
                            } only %}
                     </span>
                        <span class="col--md-8">{{ 'multi.picking.header.position.liste' | trans }}</span>
                    </button>

                    <button type="button" onclick="location.href='{{ data.urlScanShelves }}'" class="button button--expand js-pick-products__submit">
                        {{ 'multi.picking.order.dialog.button' | trans }}
                    </button>

                </div>
            {% endblock %}
        {% endembed %}
        </div>
{% endblock %}
