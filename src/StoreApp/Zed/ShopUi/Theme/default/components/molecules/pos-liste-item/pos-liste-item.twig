{% extends model('component') %}

{% define config = {
    name: 'pos-liste-item',
    tag: 'pos-liste-item',
} %}

{% define data= {
    idOrderItem: '',
    quantity: '',
    quantityPicked: '',
    color: '',
    name: '',
    isPaused: "0",
    isAllPicked: '',
    isCanceled: '',
    isPartiallyPicked: '',
    pictureUrl: '',
    sequence: '',
    shelf: '',
    shelfFloor: '',
    shelfField: '',
    aisle: '',
    orderNumber: '',
    orders: '',
    ean: '',
    pickingItemPosition: '',
    fromModal: '',
    itemsQuantity: '',
    allPaused: false,
    itemSkuFrom: '',
    shortEan: '',
    totalWeight: '',
    priceUnit: ''
} %}

{% block body %}
    {% if data.orderNumber > 9 %}
        {% set paddingLeft = '0.3rem' %}
    {% else %}
        {% set paddingLeft = '0.6rem' %}
    {% endif %}

    {% if data.itemSkuFrom == data.ean %}
        {% set border = '2px solid #1bbea0 !important' %}
    {% else %}
        {% set border = 'none' %}
    {% endif %}

    <table class="{{ config.name }}__full-width" id="tbLSku_{{ data.ean }}">
        <form class="{{ config.jsName }}__form" action="/picker/multi-picking/multi-order-picking" method="post">
            <input type="hidden" name="idOrderItem" value="{{ data.idOrderItem }}">
            <input type="hidden" name="sku" value="{{ data.ean }}">
            <input type="hidden" name="position" value="{{ data.pickingItemPosition }}">
            <input type="hidden" name="fromPosListeAndModal" value="{{ data.fromModal }}">
        </form>
        <tr class="{{ config.jsName }}__product-item" id="{{ data.idOrderItem }}" style="cursor: pointer; border: {{ border }}">
            <td class="{{ config.name }}__left-column  {{ config.name }}__cursor-pointer">
                {% if data.isAllPicked == true or data.isAllPicked == "1" %}
                    <div class="{{ config.name }}__circle-wrapper">
                        <div class="{{ config.name }}__checked-circle">
                            <svg class="icon button__icon"><use xlink:href="#:check"></use></svg>
                        </div>
                    </div>
                    <div class="{{ config.name }}__number-text-wrapper">
                        {{ data.itemsQuantity }}
                    </div>
                {% elseif data.isPartiallyPicked == true or data.isPartiallyPicked == "1" %}
                    <div class="{{ config.name }}__circle-wrapper">
                        <div class="{{ config.name }}__checked-circle-empty">
                            <svg class="icon button__icon"><use xlink:href="#:check"></use></svg>
                        </div>
                    </div>
                    <div class="{{ config.name }}__number-text-wrapper">
                        {{ data.itemsQuantity }}
                    </div>
                {% elseif data.isCanceled == true or data.isCanceled == "1" %}
                    <div class="{{ config.name }}__circle-wrapper">
                        <div class="{{ config.name }}__cancel-circle">
                            <svg class="icon button__icon"><use xlink:href="#:close"></use></svg>
                        </div>
                    </div>
                    <div class="{{ config.name }}__number-text-wrapper">
                        {{ data.itemsQuantity }}
                    </div>
                    {% elseif data.isPaused == true or data.isPaused == "1" %}
                    <div class="{{ config.name }}__circle-wrapper">
                        <div class="{{ config.name }}__paused-circle">
                            ||
                        </div>
                    </div>
                    <div class="{{ config.name }}__number-text-wrapper">
                        {{ data.itemsQuantity }}
                    </div>
                {% else %}
                    <div class="{{ config.name }}__number-empty-wrapper">
                        {{ data.itemsQuantity }}
                    </div>
                {% endif %}
            </td>
            <td class="{{ config.name }}__right-column">
                <table class="{{ config.name }}__full-width">
                    <td style="width: 80%">
                        <table>
                            <tr>
                                <div class="{{ config.name }}__display-flex {{ config.name }}__circle-spacing {{ config.name }}__mobile-text-class {{ config.name }}__infoRow">
                                       <span>{{ data.shelf }}-{{ data.shelfField }}-</span>
                                       <span class="{{ config.name }}__location">{{ data.shelfFloor }}</span>&nbsp;
                                       <span class="{{ config.name }}__name"> {{ data.name }} </span>
                                </div>
                            </tr>
                            <tr>
                                <div class="{{ config.name }}__display-flex {{ config.name }}__circle-spacing {{ config.name }}__mobile-text-class {{ config.name }}__infoRow">
                                    <span class="{{ config.name }}__ean">{{ data.shortEan }}</span>
                                    {% if data.totalWeight is defined and data.totalWeight is not null %}
                                    {% set weightField = (data.totalWeight / 1000) %}
                                        <span class="{{ config.name }}__weight"> - {{ weightField }} {{ data.priceUnit }}</span>
                                    {% endif %}
                                </div>
                            </tr>
                            <tr>
                                <div class="{{ config.name }}__display-flex">
                                    {% for order in data.orders %}
                                        <div class="{{ config.name }}__circle-spacing">
                                            {% include atom('circle') with {
                                                data: {
                                                    content: order.pickingPosition,
                                                    backgroundColor: order.pickingColor.backColor,
                                                    textColor: order.pickingColor.foreColor,
                                                    paddingLeft: paddingLeft,
                                                    paddingTop: '0rem',
                                                    width: '1.5rem',
                                                    height: '1.5rem',
                                                }
                                            } %}
                                        </div>
                                    {% endfor %}
                                </div>
                            </tr>
                        </table>
                    </td>
                    <td style="width:20%">
                        <div class="{{ config.name }}__image-wrapper" style="float:right">
                            {% include atom('thumbnail') with {
                                modifiers: ['product-pos'],
                                attributes: {
                                    src: data.pictureUrl,
                                    alt: data.name
                                }
                            } only %}
                        </div>
                    </td>
                </table>
            </td>
        </tr>
    </table>
{% endblock %}
