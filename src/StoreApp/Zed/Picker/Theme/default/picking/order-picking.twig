{% extends template('page-layout-main') %}

{% define data = {
    merchant: merchant,
    maxPickingBags: maxPickingBags,
    collectNumber: collectNumber,
    itemsCount: itemsCount,
    itemsToShelfMap: itemsToShelfMap,
    itemsToProductAttributesMap: itemsToProductAttributesMap,
    pickingForm: pickingForm,
    pickingFormSkuKeys: pickingFormSkuKeys,
    pickingFormWeightKeys: pickingFormWeightKeys,
    itemImageUrls: itemImageUrls,
    requestParamIdSalesOrder: requestParamIdSalesOrder,
    idSalesOrder: idSalesOrder,
    orderReference: orderReference,
    orderDeliveryTime: orderDeliveryTime,
    urlContainerSelect: urlContainerSelect,
    urlPosListe: '/picker/pos-liste',
    itemsToAlternativeEanMap : itemsToAlternativeEanMap,
    productSku: productSku | default(null),
} %}

{% block header %}
    {% embed organism('header') with {
        modifiers: ['picking-detail'],
        data: {
            withoutLogo: true,
            orderId: data.orderReference,
            buttonUrl: '/picker/picking',
            orderReference: data.orderReference,
            containerSelect: true,
            pickingForm: true,
            productsLength: data.itemsCount
        },
        embed: {
            productsLength: data.itemsCount,
        },
    } only %}
        {% block headerBottom %}
            {% include molecule('pick-products') with {
                data: {
                    productsLength: embed.productsLength,
                },
                attributes: {
                    'products-count': embed.productsLength,
                    'order-id': data.orderId,
                },
            } only %}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block content %}
    {{ form_start(data.pickingForm, {
        attr: { class: 'form form__header-spacing js-submit-form-handler__form' }
    }) }}

    {% for fieldName in pickingFormSkuKeys %}
        {% set field = attribute(data.pickingForm.children, fieldName) %}
        {% set itemSku = field.vars.name | split('__') | last %}

        {% if pickingFormWeightKeys[itemSku] is defined %}
            {% set weightField = attribute(data.pickingForm.children, pickingFormWeightKeys[itemSku]) %}
        {% else %}
            {% set weightField = null %}
        {% endif %}

        {% if field.vars.block_prefixes[1] is same as('integer') %}
            {% embed molecule('product-item') with {
                class: 'spacing-top spacing-top--big',
                data: {
                    imageUrl: data.itemImageUrls[itemSku],
                    title: field.vars.label,
                    productsCount: field.vars.attr.max,
                    itemSku: itemSku,
                    itemsToShelfMap: data.itemsToShelfMap[itemSku],
                    itemsToProductAttributesMap: data.itemsToProductAttributesMap[itemSku],
                    itemsCount:itemsCount,
                    field: field,
                    collectNumber:collectNumber,
                    urlContainerSelect: data.urlContainerSelect,
                    urlPosListe: '/picker/pos-liste',
                    idSalesOrder: data.idSalesOrder,
                    formStoppedSku: data.productSku,
                    alternativeEanData: data.itemsToAlternativeEanMap[itemSku] | default('')
                },
                attributes: {
                    'data-sku': itemSku,
                },
                embed: {
                    field: field,
                    weightField: weightField,
                },
            } only %}
                {% block formElement %}
                    {{ form_row(embed.field, {
                        attr: {
                            class: config.jsName ~ '__quantity',
                        }
                    }) }}
                {% endblock %}

                {% block formElementWeight %}
                    {% if embed.weightField %}
                        {{ form_row(embed.weightField, {
                            attr: {
                                class: config.jsName ~ '__weight',
                            }
                        }) }}
                    {% endif %}
                {% endblock %}
            {% endembed %}
        {% endif %}

    {% endfor %}

    <div class="pick-products__action-wrapper">
        <div class="pick-products__action js-pick-products__action">
            {% embed molecule('popup-ui') with {
                data: {
                    buttons: {
                        submit: {
                            isButton: true,
                            additionalClass: 'js-pick-products__submit',
                        },
                    },
                },
                embed: {
                    collectNumber: data.collectNumber,
                    itemsCount: data.itemsCount,
                },
            } only %}
                {% block content %}
                    <div class="grid grid--center">
                        <div class="total-articles grid">
                            <p class="total-amount">{{ embed.itemsCount }}</p>
                            <p>{{ 'Artikel' | trans }}</p>
                        </div>
                    </div>
                    <div class="store-app-label-holder">
                        <div class="grid grid--center spacing-y-label">
                            <div class="col--sm-12 grid">
                                <table>
                                    <tr>
                                        <td class="item-quantity">
                                            {% embed atom('store-app-label') with {
                                                modifiers: ['picked', 'count'],
                                            } only %}
                                                {% block body %}
                                                    <span class="js-pick-products__picked">0</span>
                                                {% endblock %}
                                            {% endembed %}
                                        </td>
                                        <td>
                                            <div class="label-text-green">
                                                {{ 'picked' | trans }}
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div class="grid grid--center spacing-y-label">
                            <div class="col--sm-12 grid">
                                <table>
                                    <tr>
                                        <td class="item-quantity">
                                            {% embed atom('store-app-label') with {
                                                modifiers: ['not-found', 'count'],
                                            } only %}
                                                {% block body %}
                                                    <span class="js-pick-products__not-picked">0</span>
                                                {% endblock %}
                                            {% endembed %}
                                        </td>
                                        <td>
                                            <div class="label-text-brown">
                                                {{ 'not found' | trans }}
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                            </div>
                        </div>
                        <div class="grid grid--center spacing-bottom spacing-bottom--big">
                            <div class="col--sm-12 grid">
                                <table>
                                    <tr>
                                        <td class="item-quantity">
                                            {% embed atom('store-app-label') with {
                                                modifiers: ['bordered', 'count'],
                                            } only %}
                                                {% block body %}
                                                    <span class="js-pick-products__bags">1</span>
                                                {% endblock %}
                                            {% endembed %}
                                        </td>
                                        <td>
                                            <div class="label-text">
                                                {{ 'bags' | trans }}
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                    </div>
                    <div class="horizontal-spacing">
                        {% if embed.collectNumber %}
                            <div class="text-center spacing-top--big">
                                <p class="text-bold spacing-bottom">{{ 'Collect Number' | trans }}: {{ embed.collectNumber }}</p>
                            </div>
                        {% endif %}
                    </div>
                {% endblock %}

                {% block button %}
                    <div class="text-center">
                        <div class="button button--expand button--disabled js-pick-products__submit-button {{ config.jsName }}__open">
                            {{ 'picker.picking.confirmation' | trans }}
                        </div>
                    </div>
                {% endblock %}
            {% endembed %}
        </div>
    </div>

    <input type="hidden" name="{{ data.requestParamIdSalesOrder }}" value="{{ data.idSalesOrder }}">
    {{ form_end(data.pickingForm) }}

    <form id="formAddContainerSku" action="{{ data.urlContainerSelect }}" method="post">
        {% set tokenName = 'start-picking-%d' | format(data.idSalesOrder) %}
        <input type="hidden" name="idOrder" value="{{ data.idSalesOrder }}">
        <input type="hidden" name="token" value="{{ csrf_token(tokenName) }}">
        <input type="hidden" id="addContainerSku" name="sku" value="">
    </form>

    <script>
        function addContainer(sku) {
            document.getElementById('addContainerSku').value = sku;
            document.getElementById('formAddContainerSku').submit();
        }
    </script>
{% endblock content %}
