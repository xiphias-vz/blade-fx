{% extends template('page-layout-main') %}

{% define data = {
    merchant: merchant,
    collectDetailsForm: collectDetailsForm,
    collectOrder: collectOrder,
    paramIdSalesOrder: paramIdSalesOrder,
    idSalesOrder: idSalesOrder,
    orderReference: orderReference,
    collectNumber: collectNumber,
    urlCollectByCustomerConfirmation: urlCollectByCustomerConfirmation,
    urlCollectByCustomerCancellation: urlCollectByCustomerCancellation,
    requestedDeliveryDate: requestedDeliveryDate,
    pickedProductCount: pickedProductCount,
    dayOfTheWeek: dayOfTheWeek,
    fullName: fullName,
    collected: collected,
    cancelled: cancelled,
    cartNote: cartNote,
    collectedAt: collectedAt,
    pickingSalesOrders: pickingSalesOrders,
    pickedAndNotFoundItems: pickedAndNotFoundItems,
    containerInfo: containerInfo,
    containerNumber: containerNumber,
    encodedBarcode: encodedBarcode,
} %}

{% set pickedItemCount = data.collectOrder.pickedItemsCount %}
{% set notFoundItemCount = data.collectOrder.notFoundItemsCount %}
{% set totalItemCount = pickedItemCount + notFoundItemCount %}

{% block header %}
    {% include organism('header') with {
        modifiers: ['produccollectDetailsFormact-type'],
        data: {
            withoutLogo: true,
            orderReference: data.orderReference,
            collectNumber: data.collectNumber,
            buttonUrl: '/picker/collect-by-customer',
            orderTime: '',
            titleColor: 'lightOrange',
            headerLocationTitle: collectNumber
        },
    } only %}
{% endblock %}

{% block content %}
    <div class="spacing-y">
        {% set isCollectionOrderFinished = data.collected or data.cancelled %}
        {% embed molecule('order-item-abholung') with {
            class: 'js-order-search__item',
            modifiers: ['picked', 'expanded', 'with-bottom', 'bordered'],
            data: {
                reference: data.orderReference,
                collectNumber: data.collectNumber,
                productsCount: data.pickedProductCount,
                date: data.requestedDeliveryDate | split(' ') | first | date('d/m/Y'),
                deadline: data.requestedDeliveryDate | split(' ') | last ~ ' ' ~ 'hour' | trans,
                dayOfTheWeek: data.dayOfTheWeek,
                detailPage: true,
                containerInfo: data.containerInfo,
                containerNumber: data.containerNumber,
            },
            attributes: {
                'data-order': data.collectNumber | lower,
                'data-reference': data.orderReference | lower,
                'data-time': data.requestedDeliveryDate | split(' ') | last,
            },
            embed: {
                collectDetailsForm: collectDetailsForm,
                collectOrder: data.collectOrder,
                collectionOrder: data,
                paramIdSalesOrder: data.paramIdSalesOrder,
                urlCollectByCustomerCancellation: data.urlCollectByCustomerCancellation,
                urlCollectByCustomerConfirmation: data.urlCollectByCustomerConfirmation,
                isCollectionOrderFinished: isCollectionOrderFinished,
                collectedAt: data.collectedAt,
                cartNote: data.cartNote,
                orderReference: data.orderReference,
                idSalesOrder: data.idSalesOrder,
                pickingSalesOrders: pickingSalesOrders,
                fullName: fullName,
                orderReference: orderReference,
                pickedAndNotFoundItems: pickedAndNotFoundItems,
                containerInfo: data.containerInfo,
                containerNumber: data.containerNumber,
                encodedBarcode: data.encodedBarcode

            }
        } only %}
            {% block action %}{% endblock %}

            {% block orderReference %}
                {% if embed.isCollectionOrderFinished %}
                    {% include atom('app-label') with {
                        class: 'text-center',
                        modifiers: ['reference'],
                        data: {
                            text: 'Order ID' | trans ~ ': ' ~ embed.orderReference
                        }
                    } only %}
                {% endif %}
            {% endblock %}

            {% block additionalFields %}

                <input type="hidden" name="{{ embed.paramIdSalesOrder }}" value="{{ embed.idSalesOrder }}">

                </div>
                <div style="font-weight: bold">
                   {{ embed.containerNumber }} {{ 'picker.collect-by-customer.details.containers' | trans }}
                </div>
                <br />
                <div>
                    {% include molecule('container-checkboxes') with {
                        data: {
                            listContainers: embed.containerInfo
                        },
                    } only %}
                </div>
                <br />
                <div>
                    <label class="label">{{ 'picker.collect-by-customer.details.containers' | trans }}</label>
                    <input id="containerInput" class="input input--expand" type="text" />
                </div>
                <script>
                    var input = document.getElementById('containerInput');
                    input.addEventListener("change", function()
                    {
                        var inputValue = document.getElementById("containerInput").value;
                        var id = document.getElementsByClassName('checkbox__input');
                        var containerExists = false;

                        var barcode = inputValue.substring(4);
                        for(i= 0; i< id.length; i++)
                        {
                            containerId = id[i].attributes[2].value;

                            if(barcode == containerId)
                            {
                                id[i].checked = true;
                                containerExists = true;
                                break;
                            }
                        }
                        if(containerExists == false)
                        {
                            alert("This container is not part of the order!");
                        }
                        document.getElementById("containerInput").value = "";

                    });
                </script>
                <div>
                    {% if embed.pickedAndNotFoundItems|length > 0 %}
                        {% include molecule('missing-articles') with {
                            data: {
                                missingArticles: embed.pickedAndNotFoundItems,
                                collectOrder: embed.collectOrder
                            },
                        } only %}
                    {% endif %}
                </div>

                <div>
                    {% include molecule('customer-info') with {
                        data: {
                            fullName: embed.fullName,
                            customerCartNote: embed.cartNote,
                            isDetailPage: true
                        },
                    } only %}
                </div>
                <div>
                    {% include molecule('barcode') with {
                        data: {
                            encodedBarcode: embed.encodedBarcode,
                        },
                    } only %}
                </div>
                <div class="box__bottom">
                    {% if not embed.isCollectionOrderFinished %}
                        <div class="grid grid--middle spacing-y">
                            <div class="col col--sm-6 spacing-right spacing-right--inner">
                                <form action="{{ embed.urlCollectByCustomerCancellation }}" method="POST" class="js-submit-form-handler__form">
                                    <input type="hidden" name="{{ embed.paramIdSalesOrder }}" value="{{ embed.idSalesOrder }}">

                                    {% embed molecule('popup-ui') with {
                                        data: {
                                            title: 'Not picked up!' | trans,
                                            buttons: {
                                                submit: {
                                                    isButton: true,
                                                }
                                            }
                                        },
                                        embed: {
                                            reference: data.reference,
                                        },
                                    } only %}
                                        {% block content %}
                                            <div class="text-center spacing-bottom">
                                                {{ 'Order %order% hasnâ€™t been picked up' | trans | replace({'%order%': embed.reference}) }}
                                            </div>
                                        {% endblock %}

                                        {% block button %}
                                            <div class="text-center">
                                                <div class="button button--small button--table button--expand button--hollow js-pick-products__submit-button btn--cancellation {{ config.jsName }}__open">
                                                    {{ 'picker.collect-by-customer.order.cancel-collection' | trans }}
                                                </div>
                                            </div>
                                        {% endblock %}

                                    {% endembed %}
                                </form>
                            </div>
                            <div class="col col--sm-6 spacing-left spacing-left--inner">
                                <form action="{{ embed.urlCollectByCustomerConfirmation }}" method="POST" class="js-submit-form-handler__form">
                                    <input type="hidden" name="{{ embed.paramIdSalesOrder }}" value="{{ embed.idSalesOrder }}">

                                    {% embed molecule('popup-ui') with {
                                        data: {
                                            title: 'Picked up!' | trans,
                                            buttons: {
                                                submit: {
                                                    isButton: true
                                                }
                                            },
                                            id: 'confirmBtn'
                                        },
                                        embed: {
                                            reference: embed.orderReference,
                                        },
                                    } only %}
                                        {% block content %}
                                            <div class="text-center spacing-bottom">
                                                {{ 'Order %order% has been picked up' | trans | replace({'%order%': embed.reference}) }}
                                            </div>
                                        {% endblock %}

                                        {% block button %}
                                            <div class="text-center">
                                               <div class="button button--small button--table button--expand js-pick-products__submit-button btn--submit {{ config.jsName }}__open">
                                                    {{ 'picker.collect-by-customer.order.confirm-collection' | trans }}
                                                </div>
                                            </div>
                                        <script>
                                            var submitButton = document.getElementsByClassName('button button--small button--table button--expand js-pick-products__submit-button btn--submit');
                                            submitButton[0].addEventListener('click', function(event)
                                            {
                                                var id = document.getElementsByClassName('checkbox__input');
                                                var data;
                                                var error = false;
                                                for(i= 0; i< id.length; i++)
                                                {
                                                    data = id[i].checked;
                                                    if(data == false)
                                                    {
                                                        error = true;
                                                        break;
                                                    }
                                                }

                                                if(error == true)
                                                {
                                                    alert("Container fehlen");
                                                    document.getElementsByClassName("link--close")[1].click();
                                                }
                                            });
                                        </script>
                                        {% endblock %}
                                    {% endembed %}
                                </form>
                            </div>
                        </div>
                    {% endif %}

                    {% if embed.collectionOrder.collected %}
                        <div class="grid grid--justify grid--middle">
                            <div class="col">
                                {{ embed.collectedAt | date('H:i') }} {{ 'hour' | trans }}
                            </div>
                            <div class="col">
                                {% include atom('app-label') with {
                                    modifiers: ['success'],
                                    data: {
                                        text: 'picker.collect-by-customer.order.status.collected' | trans
                                    }
                                } only %}
                            </div>
                        </div>
                    {% elseif embed.collectionOrder.cancelled %}
                        <div class="grid grid--justify grid--middle">
                            <div class="col"></div>
                            <div class="col">
                                {% include atom('app-label') with {
                                    modifiers: ['info'],
                                    data: {
                                        text: 'picker.collect-by-customer.order.status.cancelled' | trans
                                    }
                                } only %}
                            </div>
                        </div>
                    {% endif %}
                </div>
            {% endblock %}
        {% endembed %}
    </div>

{% endblock content %}
